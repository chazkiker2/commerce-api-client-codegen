{
    "openapi": "3.0.1",
    "info": {
        "title": "Commerce API",
        "version": "v1"
    },
    "servers": [
        {
            "url": "/commerce"
        }
    ],
    "paths": {
        "/v1/accounts/{uid}/payment-methods/{paymentMethodId}/make-default": {
            "post": {
                "tags": [
                    "Account"
                ],
                "summary": "Set specific payment method to user's default payment method",
                "operationId": "SetDefaultPaymentMethodForUser",
                "parameters": [
                    {
                        "name": "uid",
                        "in": "path",
                        "description": "The UID of the user,",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "paymentMethodId",
                        "in": "path",
                        "description": "The ID of the desired Payment Method to set as user's default",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Fool.Commerce.Dto.PaymentMethod"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Payment method invalid to set as default",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Payment method not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/accounts/{uid}": {
            "get": {
                "tags": [
                    "Account"
                ],
                "summary": "Get account by its UID",
                "operationId": "GetAccount",
                "parameters": [
                    {
                        "name": "uid",
                        "in": "path",
                        "description": "",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "countryCode",
                        "in": "query",
                        "description": "",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Fool.Commerce.Dto.Account"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Fool.Commerce.Dto.Account"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/accounts/{uid}/billing-address": {
            "post": {
                "tags": [
                    "Account"
                ],
                "summary": "Set default billing address by UID",
                "operationId": "AddOrUpdateBillingAddress",
                "parameters": [
                    {
                        "name": "uid",
                        "in": "path",
                        "description": "",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "requestBody": {
                    "description": "",
                    "content": {
                        "application/json-patch+json": {
                            "schema": {
                                "$ref": "#/components/schemas/Fool.Commerce.Dto.PostalAddressForm"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Fool.Commerce.Dto.PostalAddressForm"
                            }
                        },
                        "text/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Fool.Commerce.Dto.PostalAddressForm"
                            }
                        },
                        "application/*+json": {
                            "schema": {
                                "$ref": "#/components/schemas/Fool.Commerce.Dto.PostalAddressForm"
                            }
                        }
                    },
                    "x-bodyName": "address"
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Fool.Commerce.Dto.BillingAddress"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "There were validation errors.<br />\r\n            The user is currently blocked and cannot order.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/accounts/{uid}/billing-phone-number": {
            "post": {
                "tags": [
                    "Account"
                ],
                "summary": "Set default phone number by UID",
                "operationId": "AddOrUpdateBillingPhoneNumber",
                "parameters": [
                    {
                        "name": "uid",
                        "in": "path",
                        "description": "",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "phoneNumber",
                        "in": "query",
                        "description": "",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Fool.Commerce.Dto.BillingPhoneNumber"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "There were validation errors.<br />\r\n            The user is currently blocked and cannot order.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/accounts/{uid}/reports": {
            "get": {
                "tags": [
                    "Account"
                ],
                "summary": "Get account reports by its UID",
                "operationId": "GetReports",
                "parameters": [
                    {
                        "name": "uid",
                        "in": "path",
                        "description": "",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "countryCode",
                        "in": "query",
                        "description": "",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "type",
                        "in": "query",
                        "description": "",
                        "schema": {
                            "enum": [
                                "Free",
                                "Paid",
                                "Any"
                            ],
                            "type": "string",
                            "default": "Any"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Fool.Commerce.Dto.UserReport"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/accounts/{uid}/subscriptions": {
            "get": {
                "tags": [
                    "Account"
                ],
                "summary": "Get account subscriptions by its UID",
                "operationId": "GetSubscriptions",
                "parameters": [
                    {
                        "name": "uid",
                        "in": "path",
                        "description": "",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "countryCode",
                        "in": "query",
                        "description": "",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "status",
                        "in": "query",
                        "description": "",
                        "schema": {
                            "enum": [
                                "Active",
                                "Expired",
                                "Any"
                            ],
                            "type": "string",
                            "default": "Any"
                        }
                    },
                    {
                        "name": "productId",
                        "in": "query",
                        "description": "",
                        "schema": {
                            "type": "integer",
                            "format": "int32",
                            "default": 0
                        }
                    },
                    {
                        "name": "allowDiscontinuedProducts",
                        "in": "query",
                        "description": "",
                        "schema": {
                            "type": "boolean",
                            "default": false
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Fool.Commerce.Dto.Subscription"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/accounts/{email}/should-send-create-password-email": {
            "get": {
                "tags": [
                    "Account"
                ],
                "summary": "Should send Create Password email",
                "operationId": "ShouldSendCreatePasswordEmail",
                "parameters": [
                    {
                        "name": "email",
                        "in": "path",
                        "description": "",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Fool.Commerce.Dto.MmsCreatePasswordEmailSendHistory"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/accounts/product-entitlements/{uid}": {
            "get": {
                "tags": [
                    "Account"
                ],
                "summary": "Get Product Entitlements By UID",
                "operationId": "GetProductEntitlementsForUser",
                "parameters": [
                    {
                        "name": "uid",
                        "in": "path",
                        "description": "",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "type": "integer",
                                        "format": "int32"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/accounts/product-owned-by-uid/{uid}": {
            "get": {
                "tags": [
                    "Account"
                ],
                "summary": "Get products owned by given UID",
                "operationId": "GetProductsOwnedByUid",
                "parameters": [
                    {
                        "name": "uid",
                        "in": "path",
                        "description": "",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Fool.Commerce.Dto.ProductsOwnedByUid"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/accounts/{uid}/fraud-risk-details": {
            "get": {
                "tags": [
                    "Account"
                ],
                "summary": "Returns details of SourceCode / IP Address / NumberOfOrders highlighted as potential fraud risk for this specific user within the specified date range.\r\nNote: Potential fraud risk is defined as attempting orders with at least 3 different payment methods within a specified number of hours.",
                "operationId": "GetAccountFraudRiskOrderDetails",
                "parameters": [
                    {
                        "name": "uid",
                        "in": "path",
                        "description": "",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "startDate",
                        "in": "query",
                        "description": "Data type is DATE, not DATETIME.",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        }
                    },
                    {
                        "name": "endDate",
                        "in": "query",
                        "description": "Data type is DATE, not DATETIME.",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        }
                    },
                    {
                        "name": "minPaymentMethods",
                        "in": "query",
                        "description": "Must be >= 3.",
                        "schema": {
                            "type": "integer",
                            "format": "int32",
                            "default": 4
                        }
                    },
                    {
                        "name": "subsequentPaymentMinutes",
                        "in": "query",
                        "description": "Must be less than 1440 (one day).",
                        "schema": {
                            "type": "integer",
                            "format": "int32",
                            "default": 360
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Fool.Commerce.Dto.FraudRiskOrderDetail"
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/accounts/{uid}/purchase-lockout": {
            "get": {
                "tags": [
                    "Account"
                ],
                "operationId": "GetCurrentUserPurchaseLockout",
                "parameters": [
                    {
                        "name": "uid",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Fool.Commerce.Dto.UserPurchaseLockout"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/accounts/{uid}/purchase-lockout/lock": {
            "post": {
                "tags": [
                    "Account"
                ],
                "operationId": "LockUserPurchases",
                "parameters": [
                    {
                        "name": "uid",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json-patch+json": {
                            "schema": {
                                "$ref": "#/components/schemas/Fool.Commerce.Dto.LockUserPurchasesForm"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Fool.Commerce.Dto.LockUserPurchasesForm"
                            }
                        },
                        "text/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Fool.Commerce.Dto.LockUserPurchasesForm"
                            }
                        },
                        "application/*+json": {
                            "schema": {
                                "$ref": "#/components/schemas/Fool.Commerce.Dto.LockUserPurchasesForm"
                            }
                        }
                    },
                    "x-bodyName": "lockUserPurchasesForm"
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Fool.Commerce.Dto.UserPurchaseLockout"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/accounts/{uid}/purchase-lockout/unlock": {
            "put": {
                "tags": [
                    "Account"
                ],
                "operationId": "UnlockUserPurchases",
                "parameters": [
                    {
                        "name": "uid",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json-patch+json": {
                            "schema": {
                                "$ref": "#/components/schemas/Fool.Commerce.Dto.UnlockUserPurchasesForm"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Fool.Commerce.Dto.UnlockUserPurchasesForm"
                            }
                        },
                        "text/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Fool.Commerce.Dto.UnlockUserPurchasesForm"
                            }
                        },
                        "application/*+json": {
                            "schema": {
                                "$ref": "#/components/schemas/Fool.Commerce.Dto.UnlockUserPurchasesForm"
                            }
                        }
                    },
                    "x-bodyName": "unlockUserPurchasesForm"
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Fool.Commerce.Dto.UserPurchaseLockout"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/accounts/{uid}/transaction-details": {
            "get": {
                "tags": [
                    "Account"
                ],
                "summary": "Returns list of user's payment processor transactions either created by Commerce db or imported on the reconciliation report",
                "operationId": "GetUserPaymentProcessorTransactionDetails",
                "parameters": [
                    {
                        "name": "uid",
                        "in": "path",
                        "description": "",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "existsInCommerceDb",
                        "in": "query",
                        "description": "null = either/True = exists in Commerce/False = does not exist in Commerce db",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "existsInPaymentProvider",
                        "in": "query",
                        "description": "null = either/True = exists in audit import/False = does not exist in audit import",
                        "schema": {
                            "type": "boolean"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Fool.Commerce.Dto.FraudRiskOrderDetail"
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/accounts/{uid}/subscriptions/{subscriptionId}/action": {
            "post": {
                "tags": [
                    "Account"
                ],
                "operationId": "RequestAccountSubscriptionAction",
                "parameters": [
                    {
                        "name": "uid",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "subscriptionId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json-patch+json": {
                            "schema": {
                                "$ref": "#/components/schemas/Fool.Commerce.Dto.MemberActions.MemberSubscriptionActionForm"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Fool.Commerce.Dto.MemberActions.MemberSubscriptionActionForm"
                            }
                        },
                        "text/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Fool.Commerce.Dto.MemberActions.MemberSubscriptionActionForm"
                            }
                        },
                        "application/*+json": {
                            "schema": {
                                "$ref": "#/components/schemas/Fool.Commerce.Dto.MemberActions.MemberSubscriptionActionForm"
                            }
                        }
                    },
                    "x-bodyName": "form"
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Fool.Commerce.Dto.MemberActions.MemberSubscriptionActionResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Fool.Commerce.Exceptions.SubscriptionNotFoundException"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Fool.Commerce.Exceptions.InvalidSubscriptionActionRequestException"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/accounts/{uid}/billing-activity": {
            "get": {
                "tags": [
                    "Account"
                ],
                "operationId": "GetUserSubscriptionBillingActivity",
                "parameters": [
                    {
                        "name": "uid",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "subscriptionId",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "format": "int32",
                            "default": 1
                        }
                    },
                    {
                        "name": "pageSize",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "format": "int32",
                            "default": 10
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Fool.Commerce.Dto.BillingActivityDTO"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/changelogs/subscription/{subscriptionId}": {
            "get": {
                "tags": [
                    "ChangeLog"
                ],
                "summary": "Get Subscription Change Logs",
                "operationId": "GetChangeLogsForSubscription",
                "parameters": [
                    {
                        "name": "subscriptionId",
                        "in": "path",
                        "description": "",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "changeType",
                        "in": "query",
                        "description": "",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Fool.Commerce.Dto.ChangeLog"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/changelogs/product-item/{productItemId}": {
            "get": {
                "tags": [
                    "ChangeLog"
                ],
                "summary": "Get Product Item Change Logs",
                "operationId": "GetChangeLogsForProductItem",
                "parameters": [
                    {
                        "name": "productItemId",
                        "in": "path",
                        "description": "",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "changeType",
                        "in": "query",
                        "description": "",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Fool.Commerce.Dto.ChangeLog"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/changelogs/account/{uid}": {
            "get": {
                "tags": [
                    "ChangeLog"
                ],
                "summary": "Get UID Account Change Logs",
                "operationId": "GetChangeLogsForUid",
                "parameters": [
                    {
                        "name": "uid",
                        "in": "path",
                        "description": "",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "changeType",
                        "in": "query",
                        "description": "",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "excludeSubscriptionLogs",
                        "in": "query",
                        "description": "",
                        "schema": {
                            "type": "boolean",
                            "default": false
                        }
                    },
                    {
                        "name": "excludeProductLogs",
                        "in": "query",
                        "description": "",
                        "schema": {
                            "type": "boolean",
                            "default": false
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Fool.Commerce.Dto.ChangeLog"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/credits/subscription-transfer-value/{subscriptionId}": {
            "get": {
                "tags": [
                    "Credit"
                ],
                "summary": "Get Subscription Transfer Value",
                "operationId": "SubscriptionTransferValue",
                "parameters": [
                    {
                        "name": "subscriptionId",
                        "in": "path",
                        "description": "",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "showFullValue",
                        "in": "query",
                        "description": "",
                        "schema": {
                            "type": "boolean"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Fool.Commerce.Dto.Money"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "The subscription requested was not found.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/credits/subscription-purchase-amount/{promotion}/{offerId}/{amount}": {
            "get": {
                "tags": [
                    "Credit"
                ],
                "summary": "Get Subscription Purchase Amount",
                "operationId": "SubscriptionPurchaseAmount",
                "parameters": [
                    {
                        "name": "promotion",
                        "in": "path",
                        "description": "",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "offerId",
                        "in": "path",
                        "description": "",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "amount",
                        "in": "path",
                        "description": "",
                        "required": true,
                        "schema": {
                            "type": "number",
                            "format": "double"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "integer",
                                    "format": "int32"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "The promotion requested was not found.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/credits/subscription-purchase-amount/{promotion}/{amount}": {
            "get": {
                "tags": [
                    "Credit"
                ],
                "summary": "Get Subscription Purchase Amounts",
                "operationId": "SubscriptionPurchaseAmounts",
                "parameters": [
                    {
                        "name": "promotion",
                        "in": "path",
                        "description": "",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "amount",
                        "in": "path",
                        "description": "",
                        "required": true,
                        "schema": {
                            "type": "number",
                            "format": "double"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Fool.Commerce.Dto.CreditService.SubscriptionTransferToResponse"
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "The promotion requested was not found.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/credits/subscription-trade-in-amount/{promotion}/{subscriptionId}": {
            "get": {
                "tags": [
                    "Credit"
                ],
                "summary": "Get Subscription Trade-In Amounts",
                "operationId": "SubscriptionTradeInAmounts",
                "parameters": [
                    {
                        "name": "promotion",
                        "in": "path",
                        "description": "",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "subscriptionId",
                        "in": "path",
                        "description": "",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "useFullValue",
                        "in": "query",
                        "description": "",
                        "schema": {
                            "type": "boolean",
                            "default": false
                        }
                    }
                ],
                "responses": {
                    "404": {
                        "description": "The subscription requested was not found.<br />\r\n            The promotion requested was not found.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Fool.Commerce.Dto.CreditService.SubscriptionTransferToResponse"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/credits/credit-transfer-order": {
            "post": {
                "tags": [
                    "Credit"
                ],
                "summary": "Execute Credit Transfer (formerly Credit Transfer Order)",
                "operationId": "ExecuteCreditTransfer",
                "requestBody": {
                    "description": "",
                    "content": {
                        "application/json-patch+json": {
                            "schema": {
                                "$ref": "#/components/schemas/Fool.Commerce.Dto.CreditService.ExecuteCreditTransferRequest"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Fool.Commerce.Dto.CreditService.ExecuteCreditTransferRequest"
                            }
                        },
                        "text/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Fool.Commerce.Dto.CreditService.ExecuteCreditTransferRequest"
                            }
                        },
                        "application/*+json": {
                            "schema": {
                                "$ref": "#/components/schemas/Fool.Commerce.Dto.CreditService.ExecuteCreditTransferRequest"
                            }
                        }
                    },
                    "x-bodyName": "request"
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Fool.Commerce.Dto.CreditService.ExecuteTransferOrderResponse"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "There were validation errors.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/credits/subscription-transfer-state": {
            "post": {
                "tags": [
                    "Credit"
                ],
                "summary": "Get Credit Transfer Quote (formerly 'Subscription Transfer State')",
                "operationId": "GetCreditTransferQuote",
                "requestBody": {
                    "description": "",
                    "content": {
                        "application/json-patch+json": {
                            "schema": {
                                "$ref": "#/components/schemas/Fool.Commerce.Dto.CreditService.CreditTransferQuoteRequest"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Fool.Commerce.Dto.CreditService.CreditTransferQuoteRequest"
                            }
                        },
                        "text/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Fool.Commerce.Dto.CreditService.CreditTransferQuoteRequest"
                            }
                        },
                        "application/*+json": {
                            "schema": {
                                "$ref": "#/components/schemas/Fool.Commerce.Dto.CreditService.CreditTransferQuoteRequest"
                            }
                        }
                    },
                    "x-bodyName": "request"
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Fool.Commerce.Dto.CreditService.CreditTransferQuoteResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "There were validation errors.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/credits/rollback-subscription-transfer": {
            "post": {
                "tags": [
                    "Credit"
                ],
                "summary": "Rollback a Subscription that was transferred using Credit Tool",
                "operationId": "RollbackSubscriptionCreditTransfer",
                "requestBody": {
                    "content": {
                        "application/json-patch+json": {
                            "schema": {
                                "$ref": "#/components/schemas/Fool.Commerce.Dto.SubscriptionCreditTransferRollbackForm"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Fool.Commerce.Dto.SubscriptionCreditTransferRollbackForm"
                            }
                        },
                        "text/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Fool.Commerce.Dto.SubscriptionCreditTransferRollbackForm"
                            }
                        },
                        "application/*+json": {
                            "schema": {
                                "$ref": "#/components/schemas/Fool.Commerce.Dto.SubscriptionCreditTransferRollbackForm"
                            }
                        }
                    },
                    "x-bodyName": "form"
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Fool.Commerce.Dto.SubscriptionCreditTransferRollbackResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/credits/is-user-eligible-for-one-time-pro-rated-refund/{uid}": {
            "get": {
                "tags": [
                    "Credit"
                ],
                "summary": "Is User Eligibile For One Time Pro-Rated Refund",
                "operationId": "IsUserEligibleForOneTimeProRatedRefund",
                "parameters": [
                    {
                        "name": "uid",
                        "in": "path",
                        "description": "",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Fool.Commerce.Dto.ProRatedRefundEligible"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/credits/update-pro-rated-refund-eligibility-status": {
            "post": {
                "tags": [
                    "Credit"
                ],
                "summary": "Update Pro Rated Refund Eligibility Status",
                "operationId": "UpdateProRatedEligibilityStatus",
                "requestBody": {
                    "description": "",
                    "content": {
                        "application/json-patch+json": {
                            "schema": {
                                "$ref": "#/components/schemas/Fool.Commerce.Dto.CreditService.UpdateProRatedEligibilityStatusRequest"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Fool.Commerce.Dto.CreditService.UpdateProRatedEligibilityStatusRequest"
                            }
                        },
                        "text/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Fool.Commerce.Dto.CreditService.UpdateProRatedEligibilityStatusRequest"
                            }
                        },
                        "application/*+json": {
                            "schema": {
                                "$ref": "#/components/schemas/Fool.Commerce.Dto.CreditService.UpdateProRatedEligibilityStatusRequest"
                            }
                        }
                    },
                    "x-bodyName": "request"
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Fool.Commerce.Dto.CreditService.UpdateProRatedEligibilityStatusResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "There were validation errors.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/discounts/{discountId}/{uid}": {
            "get": {
                "tags": [
                    "Discount"
                ],
                "summary": "Get User Discount Balance",
                "operationId": "GetBalance",
                "parameters": [
                    {
                        "name": "discountId",
                        "in": "path",
                        "description": "",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "uid",
                        "in": "path",
                        "description": "",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Fool.Commerce.Dto.UserDiscount"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "The discount requested was not found.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/discounts": {
            "get": {
                "tags": [
                    "Discount"
                ],
                "summary": "Get All Discount Offers",
                "operationId": "GetAllDiscounts",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Fool.Commerce.Dto.DiscountOffer"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/discounts/{discountId}": {
            "get": {
                "tags": [
                    "Discount"
                ],
                "summary": "Get Discount Offer",
                "operationId": "GetDiscount",
                "parameters": [
                    {
                        "name": "discountId",
                        "in": "path",
                        "description": "",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Fool.Commerce.Dto.DiscountOffer"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "The discount requested was not found.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/discounts/{discountId}/{uid}/set": {
            "post": {
                "tags": [
                    "Discount"
                ],
                "summary": "Set User Discount Balance",
                "operationId": "SetValue",
                "parameters": [
                    {
                        "name": "discountId",
                        "in": "path",
                        "description": "",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "uid",
                        "in": "path",
                        "description": "",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "value",
                        "in": "query",
                        "description": "",
                        "schema": {
                            "type": "number",
                            "format": "double"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Fool.Commerce.Dto.UserDiscount"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "The discount requested was not found.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/discounts/create": {
            "post": {
                "tags": [
                    "Discount"
                ],
                "summary": "Create Discount Offer With Multiple Products",
                "operationId": "CreateDiscountOfferWithMultipleProducts",
                "requestBody": {
                    "description": "",
                    "content": {
                        "application/json-patch+json": {
                            "schema": {
                                "$ref": "#/components/schemas/Fool.Commerce.Dto.CreateDiscountForm"
                            },
                            "example": {
                                "productIds": [
                                    1081
                                ],
                                "name": "Discount #62b702f2-97c0-4ac6-8630-a5fbce9e2f48",
                                "expirationDate": "2022-12-13T00:00:00-07:00"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Fool.Commerce.Dto.CreateDiscountForm"
                            },
                            "example": {
                                "productIds": [
                                    1081
                                ],
                                "name": "Discount #62b702f2-97c0-4ac6-8630-a5fbce9e2f48",
                                "expirationDate": "2022-12-13T00:00:00-07:00"
                            }
                        },
                        "text/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Fool.Commerce.Dto.CreateDiscountForm"
                            },
                            "example": {
                                "productIds": [
                                    1081
                                ],
                                "name": "Discount #62b702f2-97c0-4ac6-8630-a5fbce9e2f48",
                                "expirationDate": "2022-12-13T00:00:00-07:00"
                            }
                        },
                        "application/*+json": {
                            "schema": {
                                "$ref": "#/components/schemas/Fool.Commerce.Dto.CreateDiscountForm"
                            },
                            "example": {
                                "productIds": [
                                    1081
                                ],
                                "name": "Discount #62b702f2-97c0-4ac6-8630-a5fbce9e2f48",
                                "expirationDate": "2022-12-13T00:00:00-07:00"
                            }
                        }
                    },
                    "x-bodyName": "form"
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Fool.Commerce.Dto.DiscountOffer"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "There were validation errors.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/discounts/create/{productId}": {
            "post": {
                "tags": [
                    "Discount"
                ],
                "summary": "Create Discount Offer",
                "operationId": "CreateDiscountOffer",
                "parameters": [
                    {
                        "name": "productId",
                        "in": "path",
                        "description": "",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "name",
                        "in": "query",
                        "description": "",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "expirationDate",
                        "in": "query",
                        "description": "",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Fool.Commerce.Dto.DiscountOffer"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "The product requested was not found.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/discounts/update/{discountId}": {
            "post": {
                "tags": [
                    "Discount"
                ],
                "summary": "Update Discount Offer",
                "operationId": "UpdateDiscountOffer",
                "parameters": [
                    {
                        "name": "discountId",
                        "in": "path",
                        "description": "",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "name",
                        "in": "query",
                        "description": "",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "expirationDate",
                        "in": "query",
                        "description": "",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Fool.Commerce.Dto.DiscountOffer"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "The discount requested was not found.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/discounts/{discountId}/{uid}/increase": {
            "post": {
                "tags": [
                    "Discount"
                ],
                "summary": "Increase User Discount Balance",
                "operationId": "IncreaseValue",
                "parameters": [
                    {
                        "name": "discountId",
                        "in": "path",
                        "description": "",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "uid",
                        "in": "path",
                        "description": "",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "amount",
                        "in": "query",
                        "description": "",
                        "schema": {
                            "type": "number",
                            "format": "double"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Fool.Commerce.Dto.UserDiscount"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "The discount requested was not found.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/discounts/{discountId}/{uid}/decrease": {
            "post": {
                "tags": [
                    "Discount"
                ],
                "summary": "Decrease User Discount Balance",
                "operationId": "DecreaseValue",
                "parameters": [
                    {
                        "name": "discountId",
                        "in": "path",
                        "description": "",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "uid",
                        "in": "path",
                        "description": "",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "amount",
                        "in": "query",
                        "description": "",
                        "schema": {
                            "type": "number",
                            "format": "double"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Fool.Commerce.Dto.UserDiscount"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "The discount requested was not found.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/discounts/batch/{discountId}": {
            "post": {
                "tags": [
                    "Discount"
                ],
                "summary": "Set multiple User Discounts for a given Discount Offer",
                "operationId": "SetMultipleUserDiscounts",
                "parameters": [
                    {
                        "name": "discountId",
                        "in": "path",
                        "description": "",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "requestBody": {
                    "description": "",
                    "content": {
                        "application/json-patch+json": {
                            "schema": {
                                "$ref": "#/components/schemas/Fool.Commerce.Dto.BulkUserDiscountForm"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Fool.Commerce.Dto.BulkUserDiscountForm"
                            }
                        },
                        "text/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Fool.Commerce.Dto.BulkUserDiscountForm"
                            }
                        },
                        "application/*+json": {
                            "schema": {
                                "$ref": "#/components/schemas/Fool.Commerce.Dto.BulkUserDiscountForm"
                            }
                        }
                    },
                    "x-bodyName": "bulkUserDiscountForm"
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "There were validation errors.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "The discount requested was not found.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/discounts/users/{uid}": {
            "get": {
                "tags": [
                    "Discount"
                ],
                "summary": "Get User Discounts",
                "operationId": "GetUserDiscounts",
                "parameters": [
                    {
                        "name": "uid",
                        "in": "path",
                        "description": "",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Fool.Commerce.Dto.UserDiscount"
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "The discount requested was not found.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/helpdesk/{uid}/tickets": {
            "get": {
                "tags": [
                    "Helpdesk"
                ],
                "summary": "Returns list of helpdesk tickets associated with the given uid",
                "operationId": "GetUserHelpdeskTicketsByUid",
                "parameters": [
                    {
                        "name": "uid",
                        "in": "path",
                        "description": "",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Fool.Commerce.Dto.Helpdesk.Ticket"
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Fool.Commerce.External.Registration.UserNotFoundException"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/helpdesk/{email}/tickets": {
            "get": {
                "tags": [
                    "Helpdesk"
                ],
                "summary": "Returns list of helpdesk tickets associated with the given user's email address",
                "operationId": "GetUserHelpdeskTicketsByEmail",
                "parameters": [
                    {
                        "name": "email",
                        "in": "path",
                        "description": "",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Fool.Commerce.Dto.Helpdesk.Ticket"
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Fool.Commerce.External.Registration.UserNotFoundException"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/helpdesk/macros": {
            "get": {
                "tags": [
                    "Helpdesk"
                ],
                "summary": "Returns list of macros from Helpdesk API, which are used to Create / Solve Tickets, stored in cache",
                "operationId": "GetCachedMacros",
                "parameters": [
                    {
                        "name": "refreshCache",
                        "in": "query",
                        "schema": {
                            "type": "boolean",
                            "default": false
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Fool.Commerce.Dto.Helpdesk.Macro"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/helpdesk/macros/{id}": {
            "get": {
                "tags": [
                    "Helpdesk"
                ],
                "summary": "Returns a macro from Helpdesk API",
                "operationId": "GetMacro",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Fool.Commerce.Dto.Helpdesk.Macro"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Fool.Commerce.External.Registration.UserNotFoundException"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/helpdesk/ticket-fields": {
            "get": {
                "tags": [
                    "Helpdesk"
                ],
                "summary": "Returns all ticket fields from Helpdesk API, stored in cache",
                "operationId": "GetCachedTicketFields",
                "parameters": [
                    {
                        "name": "refreshCache",
                        "in": "query",
                        "schema": {
                            "type": "boolean",
                            "default": false
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Fool.Commerce.Dto.Helpdesk.TicketField"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/orders/credit-card": {
            "post": {
                "tags": [
                    "Order"
                ],
                "summary": "Create a credit card order",
                "operationId": "AcceptCreditCardOrder",
                "requestBody": {
                    "description": "Credit card order details",
                    "content": {
                        "application/json-patch+json": {
                            "schema": {
                                "$ref": "#/components/schemas/Fool.Commerce.Dto.CreditCardOrderForm"
                            },
                            "example": {
                                "creditCard": {
                                    "cardNumber": 4444444444444448,
                                    "nameOnCard": "John Doe",
                                    "expirationMonth": 1,
                                    "expirationYear": 2022,
                                    "postalCode": "11203",
                                    "countryCode": "US"
                                },
                                "email": "qa_637749922416430290@fool.mailinator.com",
                                "confirmEmail": "qa_637749922416430290@fool.mailinator.com",
                                "promotionCode": "3b71eec5-0449-46df-9109-a55d480f5bd3",
                                "selectedOfferId": 21203,
                                "isoAlpha2CountryCode": "US",
                                "firstName": "John",
                                "lastName": "Doe_637749922416430290",
                                "phoneNumber": null,
                                "billingAddress": {
                                    "firstName": "John",
                                    "lastName": "Doe",
                                    "address1": "8648 Acacia Rd",
                                    "address2": null,
                                    "city": "Brooklyn",
                                    "state": "NY",
                                    "postalCode": "11203",
                                    "county": "Kings County",
                                    "country": "US",
                                    "phoneNumber": null
                                },
                                "shippingAddress": null,
                                "sourceCode": null,
                                "clientIpAddress": "127.0.0.1",
                                "isTestOrder": true,
                                "uid": 0,
                                "isNewAccount": false,
                                "placedByUid": null,
                                "orderSession": {
                                    "utmCode": {
                                        "source": "test source",
                                        "medium": "test medium",
                                        "campaign": "My Test Campaign",
                                        "term": "some term",
                                        "content": "lorem ipsum"
                                    },
                                    "sessionGuid": "445758c6-af8f-4643-87cc-3b926a0d7c1b",
                                    "customMetadata": {
                                        "custom field 1": "value1",
                                        "custom field 2": "value2"
                                    }
                                }
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Fool.Commerce.Dto.CreditCardOrderForm"
                            },
                            "example": {
                                "creditCard": {
                                    "cardNumber": 4444444444444448,
                                    "nameOnCard": "John Doe",
                                    "expirationMonth": 1,
                                    "expirationYear": 2022,
                                    "postalCode": "11203",
                                    "countryCode": "US"
                                },
                                "email": "qa_637749922416430290@fool.mailinator.com",
                                "confirmEmail": "qa_637749922416430290@fool.mailinator.com",
                                "promotionCode": "3b71eec5-0449-46df-9109-a55d480f5bd3",
                                "selectedOfferId": 21203,
                                "isoAlpha2CountryCode": "US",
                                "firstName": "John",
                                "lastName": "Doe_637749922416430290",
                                "phoneNumber": null,
                                "billingAddress": {
                                    "firstName": "John",
                                    "lastName": "Doe",
                                    "address1": "8648 Acacia Rd",
                                    "address2": null,
                                    "city": "Brooklyn",
                                    "state": "NY",
                                    "postalCode": "11203",
                                    "county": "Kings County",
                                    "country": "US",
                                    "phoneNumber": null
                                },
                                "shippingAddress": null,
                                "sourceCode": null,
                                "clientIpAddress": "127.0.0.1",
                                "isTestOrder": true,
                                "uid": 0,
                                "isNewAccount": false,
                                "placedByUid": null,
                                "orderSession": {
                                    "utmCode": {
                                        "source": "test source",
                                        "medium": "test medium",
                                        "campaign": "My Test Campaign",
                                        "term": "some term",
                                        "content": "lorem ipsum"
                                    },
                                    "sessionGuid": "445758c6-af8f-4643-87cc-3b926a0d7c1b",
                                    "customMetadata": {
                                        "custom field 1": "value1",
                                        "custom field 2": "value2"
                                    }
                                }
                            }
                        },
                        "text/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Fool.Commerce.Dto.CreditCardOrderForm"
                            },
                            "example": {
                                "creditCard": {
                                    "cardNumber": 4444444444444448,
                                    "nameOnCard": "John Doe",
                                    "expirationMonth": 1,
                                    "expirationYear": 2022,
                                    "postalCode": "11203",
                                    "countryCode": "US"
                                },
                                "email": "qa_637749922416430290@fool.mailinator.com",
                                "confirmEmail": "qa_637749922416430290@fool.mailinator.com",
                                "promotionCode": "3b71eec5-0449-46df-9109-a55d480f5bd3",
                                "selectedOfferId": 21203,
                                "isoAlpha2CountryCode": "US",
                                "firstName": "John",
                                "lastName": "Doe_637749922416430290",
                                "phoneNumber": null,
                                "billingAddress": {
                                    "firstName": "John",
                                    "lastName": "Doe",
                                    "address1": "8648 Acacia Rd",
                                    "address2": null,
                                    "city": "Brooklyn",
                                    "state": "NY",
                                    "postalCode": "11203",
                                    "county": "Kings County",
                                    "country": "US",
                                    "phoneNumber": null
                                },
                                "shippingAddress": null,
                                "sourceCode": null,
                                "clientIpAddress": "127.0.0.1",
                                "isTestOrder": true,
                                "uid": 0,
                                "isNewAccount": false,
                                "placedByUid": null,
                                "orderSession": {
                                    "utmCode": {
                                        "source": "test source",
                                        "medium": "test medium",
                                        "campaign": "My Test Campaign",
                                        "term": "some term",
                                        "content": "lorem ipsum"
                                    },
                                    "sessionGuid": "445758c6-af8f-4643-87cc-3b926a0d7c1b",
                                    "customMetadata": {
                                        "custom field 1": "value1",
                                        "custom field 2": "value2"
                                    }
                                }
                            }
                        },
                        "application/*+json": {
                            "schema": {
                                "$ref": "#/components/schemas/Fool.Commerce.Dto.CreditCardOrderForm"
                            },
                            "example": {
                                "creditCard": {
                                    "cardNumber": 4444444444444448,
                                    "nameOnCard": "John Doe",
                                    "expirationMonth": 1,
                                    "expirationYear": 2022,
                                    "postalCode": "11203",
                                    "countryCode": "US"
                                },
                                "email": "qa_637749922416430290@fool.mailinator.com",
                                "confirmEmail": "qa_637749922416430290@fool.mailinator.com",
                                "promotionCode": "3b71eec5-0449-46df-9109-a55d480f5bd3",
                                "selectedOfferId": 21203,
                                "isoAlpha2CountryCode": "US",
                                "firstName": "John",
                                "lastName": "Doe_637749922416430290",
                                "phoneNumber": null,
                                "billingAddress": {
                                    "firstName": "John",
                                    "lastName": "Doe",
                                    "address1": "8648 Acacia Rd",
                                    "address2": null,
                                    "city": "Brooklyn",
                                    "state": "NY",
                                    "postalCode": "11203",
                                    "county": "Kings County",
                                    "country": "US",
                                    "phoneNumber": null
                                },
                                "shippingAddress": null,
                                "sourceCode": null,
                                "clientIpAddress": "127.0.0.1",
                                "isTestOrder": true,
                                "uid": 0,
                                "isNewAccount": false,
                                "placedByUid": null,
                                "orderSession": {
                                    "utmCode": {
                                        "source": "test source",
                                        "medium": "test medium",
                                        "campaign": "My Test Campaign",
                                        "term": "some term",
                                        "content": "lorem ipsum"
                                    },
                                    "sessionGuid": "445758c6-af8f-4643-87cc-3b926a0d7c1b",
                                    "customMetadata": {
                                        "custom field 1": "value1",
                                        "custom field 2": "value2"
                                    }
                                }
                            }
                        }
                    },
                    "x-bodyName": "orderForm"
                },
                "responses": {
                    "201": {
                        "description": "Returns the newly created item",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Fool.Commerce.Dto.OrderConfirmation"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "There were validation errors.<br />\r\n            The user is currently blocked and cannot order.<br />\r\n            The payment was declined by the payment processor.<br />\r\n            The user already has access to product.<br />\r\n            The order appeared to be a duplicate.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "The user has already received a trial for this product.<br />\r\n            The user seems to already be participating in this trial.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "The order requested was not found.<br />\r\n            The promotion requested was not found.<br />\r\n            The promotion requested is not active.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                }
                            }
                        }
                    },
                    "410": {
                        "description": "The promotion requested should redirect.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/orders/credit-card-strict": {
            "post": {
                "tags": [
                    "Order"
                ],
                "summary": "Processes a more strict credit card order. Required Security Code",
                "operationId": "AcceptStrictCreditCardOrder",
                "requestBody": {
                    "description": "Credit card order details",
                    "content": {
                        "application/json-patch+json": {
                            "schema": {
                                "$ref": "#/components/schemas/Fool.Commerce.Dto.StrictCreditCardOrderForm"
                            },
                            "example": {
                                "creditCard": {
                                    "cardSecurityCode": "123",
                                    "cardNumber": 4444444444444448,
                                    "nameOnCard": "John Doe",
                                    "expirationMonth": 1,
                                    "expirationYear": 2022,
                                    "postalCode": "11203",
                                    "countryCode": "US"
                                },
                                "email": "qa_637749922416677030@fool.mailinator.com",
                                "confirmEmail": "qa_637749922416677030@fool.mailinator.com",
                                "promotionCode": "3b71eec5-0449-46df-9109-a55d480f5bd3",
                                "selectedOfferId": 21203,
                                "isoAlpha2CountryCode": "US",
                                "firstName": "John",
                                "lastName": "Doe",
                                "phoneNumber": null,
                                "billingAddress": {
                                    "firstName": "John",
                                    "lastName": "Doe",
                                    "address1": "8648 Acacia Rd",
                                    "address2": null,
                                    "city": "Brooklyn",
                                    "state": "NY",
                                    "postalCode": "11203",
                                    "county": "Kings County",
                                    "country": "US",
                                    "phoneNumber": null
                                },
                                "shippingAddress": null,
                                "sourceCode": null,
                                "clientIpAddress": "127.0.0.1",
                                "isTestOrder": true,
                                "uid": 0,
                                "isNewAccount": false,
                                "placedByUid": null,
                                "orderSession": {
                                    "utmCode": {
                                        "source": "test source",
                                        "medium": "test medium",
                                        "campaign": "My Test Campaign",
                                        "term": "some term",
                                        "content": "lorem ipsum"
                                    },
                                    "sessionGuid": "bac8ce58-d94d-4549-ad61-ecb1b7ab21ba",
                                    "customMetadata": {
                                        "custom field 1": "value1",
                                        "custom field 2": "value2"
                                    }
                                }
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Fool.Commerce.Dto.StrictCreditCardOrderForm"
                            },
                            "example": {
                                "creditCard": {
                                    "cardSecurityCode": "123",
                                    "cardNumber": 4444444444444448,
                                    "nameOnCard": "John Doe",
                                    "expirationMonth": 1,
                                    "expirationYear": 2022,
                                    "postalCode": "11203",
                                    "countryCode": "US"
                                },
                                "email": "qa_637749922416677030@fool.mailinator.com",
                                "confirmEmail": "qa_637749922416677030@fool.mailinator.com",
                                "promotionCode": "3b71eec5-0449-46df-9109-a55d480f5bd3",
                                "selectedOfferId": 21203,
                                "isoAlpha2CountryCode": "US",
                                "firstName": "John",
                                "lastName": "Doe",
                                "phoneNumber": null,
                                "billingAddress": {
                                    "firstName": "John",
                                    "lastName": "Doe",
                                    "address1": "8648 Acacia Rd",
                                    "address2": null,
                                    "city": "Brooklyn",
                                    "state": "NY",
                                    "postalCode": "11203",
                                    "county": "Kings County",
                                    "country": "US",
                                    "phoneNumber": null
                                },
                                "shippingAddress": null,
                                "sourceCode": null,
                                "clientIpAddress": "127.0.0.1",
                                "isTestOrder": true,
                                "uid": 0,
                                "isNewAccount": false,
                                "placedByUid": null,
                                "orderSession": {
                                    "utmCode": {
                                        "source": "test source",
                                        "medium": "test medium",
                                        "campaign": "My Test Campaign",
                                        "term": "some term",
                                        "content": "lorem ipsum"
                                    },
                                    "sessionGuid": "bac8ce58-d94d-4549-ad61-ecb1b7ab21ba",
                                    "customMetadata": {
                                        "custom field 1": "value1",
                                        "custom field 2": "value2"
                                    }
                                }
                            }
                        },
                        "text/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Fool.Commerce.Dto.StrictCreditCardOrderForm"
                            },
                            "example": {
                                "creditCard": {
                                    "cardSecurityCode": "123",
                                    "cardNumber": 4444444444444448,
                                    "nameOnCard": "John Doe",
                                    "expirationMonth": 1,
                                    "expirationYear": 2022,
                                    "postalCode": "11203",
                                    "countryCode": "US"
                                },
                                "email": "qa_637749922416677030@fool.mailinator.com",
                                "confirmEmail": "qa_637749922416677030@fool.mailinator.com",
                                "promotionCode": "3b71eec5-0449-46df-9109-a55d480f5bd3",
                                "selectedOfferId": 21203,
                                "isoAlpha2CountryCode": "US",
                                "firstName": "John",
                                "lastName": "Doe",
                                "phoneNumber": null,
                                "billingAddress": {
                                    "firstName": "John",
                                    "lastName": "Doe",
                                    "address1": "8648 Acacia Rd",
                                    "address2": null,
                                    "city": "Brooklyn",
                                    "state": "NY",
                                    "postalCode": "11203",
                                    "county": "Kings County",
                                    "country": "US",
                                    "phoneNumber": null
                                },
                                "shippingAddress": null,
                                "sourceCode": null,
                                "clientIpAddress": "127.0.0.1",
                                "isTestOrder": true,
                                "uid": 0,
                                "isNewAccount": false,
                                "placedByUid": null,
                                "orderSession": {
                                    "utmCode": {
                                        "source": "test source",
                                        "medium": "test medium",
                                        "campaign": "My Test Campaign",
                                        "term": "some term",
                                        "content": "lorem ipsum"
                                    },
                                    "sessionGuid": "bac8ce58-d94d-4549-ad61-ecb1b7ab21ba",
                                    "customMetadata": {
                                        "custom field 1": "value1",
                                        "custom field 2": "value2"
                                    }
                                }
                            }
                        },
                        "application/*+json": {
                            "schema": {
                                "$ref": "#/components/schemas/Fool.Commerce.Dto.StrictCreditCardOrderForm"
                            },
                            "example": {
                                "creditCard": {
                                    "cardSecurityCode": "123",
                                    "cardNumber": 4444444444444448,
                                    "nameOnCard": "John Doe",
                                    "expirationMonth": 1,
                                    "expirationYear": 2022,
                                    "postalCode": "11203",
                                    "countryCode": "US"
                                },
                                "email": "qa_637749922416677030@fool.mailinator.com",
                                "confirmEmail": "qa_637749922416677030@fool.mailinator.com",
                                "promotionCode": "3b71eec5-0449-46df-9109-a55d480f5bd3",
                                "selectedOfferId": 21203,
                                "isoAlpha2CountryCode": "US",
                                "firstName": "John",
                                "lastName": "Doe",
                                "phoneNumber": null,
                                "billingAddress": {
                                    "firstName": "John",
                                    "lastName": "Doe",
                                    "address1": "8648 Acacia Rd",
                                    "address2": null,
                                    "city": "Brooklyn",
                                    "state": "NY",
                                    "postalCode": "11203",
                                    "county": "Kings County",
                                    "country": "US",
                                    "phoneNumber": null
                                },
                                "shippingAddress": null,
                                "sourceCode": null,
                                "clientIpAddress": "127.0.0.1",
                                "isTestOrder": true,
                                "uid": 0,
                                "isNewAccount": false,
                                "placedByUid": null,
                                "orderSession": {
                                    "utmCode": {
                                        "source": "test source",
                                        "medium": "test medium",
                                        "campaign": "My Test Campaign",
                                        "term": "some term",
                                        "content": "lorem ipsum"
                                    },
                                    "sessionGuid": "bac8ce58-d94d-4549-ad61-ecb1b7ab21ba",
                                    "customMetadata": {
                                        "custom field 1": "value1",
                                        "custom field 2": "value2"
                                    }
                                }
                            }
                        }
                    },
                    "x-bodyName": "orderForm"
                },
                "responses": {
                    "201": {
                        "description": "Returns the newly created item",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Fool.Commerce.Dto.OrderConfirmation"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "There were validation errors.<br />\r\n            The user is currently blocked and cannot order.<br />\r\n            The payment was declined by the payment processor.<br />\r\n            The user already has access to product.<br />\r\n            The order appeared to be a duplicate.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "The user has already received a trial for this product.<br />\r\n            The user seems to already be participating in this trial.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "The order requested was not found.<br />\r\n            The promotion requested was not found.<br />\r\n            The promotion requested is not active.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                }
                            }
                        }
                    },
                    "410": {
                        "description": "The promotion requested should redirect.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/orders/credit-cards": {
            "post": {
                "tags": [
                    "Order"
                ],
                "summary": "Create a Split Credit Card order",
                "operationId": "AcceptSplitCreditCardOrder",
                "requestBody": {
                    "description": "Credit card order details",
                    "content": {
                        "application/json-patch+json": {
                            "schema": {
                                "$ref": "#/components/schemas/Fool.Commerce.Dto.SplitCreditCardOrderForm"
                            },
                            "example": {
                                "additionalCreditCard": {
                                    "cardNumber": 6011000000000004,
                                    "nameOnCard": "Jack Doe",
                                    "expirationMonth": 12,
                                    "expirationYear": 2022,
                                    "postalCode": "11203",
                                    "countryCode": "US"
                                },
                                "creditCard": {
                                    "cardNumber": 4444444444444448,
                                    "nameOnCard": "Jack Doe",
                                    "expirationMonth": 12,
                                    "expirationYear": 2022,
                                    "postalCode": "11203",
                                    "countryCode": "US"
                                },
                                "email": "qa_637749922416770110@fool.mailinator.com",
                                "confirmEmail": "qa_637749922416770110@fool.mailinator.com",
                                "promotionCode": "3b71eec5-0449-46df-9109-a55d480f5bd3",
                                "selectedOfferId": 21203,
                                "isoAlpha2CountryCode": "US",
                                "firstName": "Jack",
                                "lastName": "Doe_637749922416770110",
                                "phoneNumber": null,
                                "billingAddress": {
                                    "firstName": "Jack",
                                    "lastName": "Doe",
                                    "address1": "8648 Acacia Rd",
                                    "address2": null,
                                    "city": "Brooklyn",
                                    "state": "NY",
                                    "postalCode": "11203",
                                    "county": "Kings County",
                                    "country": "US",
                                    "phoneNumber": null
                                },
                                "shippingAddress": null,
                                "sourceCode": null,
                                "clientIpAddress": "127.0.0.1",
                                "isTestOrder": true,
                                "uid": 0,
                                "isNewAccount": false,
                                "placedByUid": null,
                                "orderSession": {
                                    "utmCode": {
                                        "source": "test source",
                                        "medium": "test medium",
                                        "campaign": "My Test Campaign",
                                        "term": "some term",
                                        "content": "lorem ipsum"
                                    },
                                    "sessionGuid": "8b7cafd3-7ebb-46fa-b101-fdbfdb767ac9",
                                    "customMetadata": {
                                        "custom field 1": "value1",
                                        "custom field 2": "value2"
                                    }
                                }
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Fool.Commerce.Dto.SplitCreditCardOrderForm"
                            },
                            "example": {
                                "additionalCreditCard": {
                                    "cardNumber": 6011000000000004,
                                    "nameOnCard": "Jack Doe",
                                    "expirationMonth": 12,
                                    "expirationYear": 2022,
                                    "postalCode": "11203",
                                    "countryCode": "US"
                                },
                                "creditCard": {
                                    "cardNumber": 4444444444444448,
                                    "nameOnCard": "Jack Doe",
                                    "expirationMonth": 12,
                                    "expirationYear": 2022,
                                    "postalCode": "11203",
                                    "countryCode": "US"
                                },
                                "email": "qa_637749922416770110@fool.mailinator.com",
                                "confirmEmail": "qa_637749922416770110@fool.mailinator.com",
                                "promotionCode": "3b71eec5-0449-46df-9109-a55d480f5bd3",
                                "selectedOfferId": 21203,
                                "isoAlpha2CountryCode": "US",
                                "firstName": "Jack",
                                "lastName": "Doe_637749922416770110",
                                "phoneNumber": null,
                                "billingAddress": {
                                    "firstName": "Jack",
                                    "lastName": "Doe",
                                    "address1": "8648 Acacia Rd",
                                    "address2": null,
                                    "city": "Brooklyn",
                                    "state": "NY",
                                    "postalCode": "11203",
                                    "county": "Kings County",
                                    "country": "US",
                                    "phoneNumber": null
                                },
                                "shippingAddress": null,
                                "sourceCode": null,
                                "clientIpAddress": "127.0.0.1",
                                "isTestOrder": true,
                                "uid": 0,
                                "isNewAccount": false,
                                "placedByUid": null,
                                "orderSession": {
                                    "utmCode": {
                                        "source": "test source",
                                        "medium": "test medium",
                                        "campaign": "My Test Campaign",
                                        "term": "some term",
                                        "content": "lorem ipsum"
                                    },
                                    "sessionGuid": "8b7cafd3-7ebb-46fa-b101-fdbfdb767ac9",
                                    "customMetadata": {
                                        "custom field 1": "value1",
                                        "custom field 2": "value2"
                                    }
                                }
                            }
                        },
                        "text/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Fool.Commerce.Dto.SplitCreditCardOrderForm"
                            },
                            "example": {
                                "additionalCreditCard": {
                                    "cardNumber": 6011000000000004,
                                    "nameOnCard": "Jack Doe",
                                    "expirationMonth": 12,
                                    "expirationYear": 2022,
                                    "postalCode": "11203",
                                    "countryCode": "US"
                                },
                                "creditCard": {
                                    "cardNumber": 4444444444444448,
                                    "nameOnCard": "Jack Doe",
                                    "expirationMonth": 12,
                                    "expirationYear": 2022,
                                    "postalCode": "11203",
                                    "countryCode": "US"
                                },
                                "email": "qa_637749922416770110@fool.mailinator.com",
                                "confirmEmail": "qa_637749922416770110@fool.mailinator.com",
                                "promotionCode": "3b71eec5-0449-46df-9109-a55d480f5bd3",
                                "selectedOfferId": 21203,
                                "isoAlpha2CountryCode": "US",
                                "firstName": "Jack",
                                "lastName": "Doe_637749922416770110",
                                "phoneNumber": null,
                                "billingAddress": {
                                    "firstName": "Jack",
                                    "lastName": "Doe",
                                    "address1": "8648 Acacia Rd",
                                    "address2": null,
                                    "city": "Brooklyn",
                                    "state": "NY",
                                    "postalCode": "11203",
                                    "county": "Kings County",
                                    "country": "US",
                                    "phoneNumber": null
                                },
                                "shippingAddress": null,
                                "sourceCode": null,
                                "clientIpAddress": "127.0.0.1",
                                "isTestOrder": true,
                                "uid": 0,
                                "isNewAccount": false,
                                "placedByUid": null,
                                "orderSession": {
                                    "utmCode": {
                                        "source": "test source",
                                        "medium": "test medium",
                                        "campaign": "My Test Campaign",
                                        "term": "some term",
                                        "content": "lorem ipsum"
                                    },
                                    "sessionGuid": "8b7cafd3-7ebb-46fa-b101-fdbfdb767ac9",
                                    "customMetadata": {
                                        "custom field 1": "value1",
                                        "custom field 2": "value2"
                                    }
                                }
                            }
                        },
                        "application/*+json": {
                            "schema": {
                                "$ref": "#/components/schemas/Fool.Commerce.Dto.SplitCreditCardOrderForm"
                            },
                            "example": {
                                "additionalCreditCard": {
                                    "cardNumber": 6011000000000004,
                                    "nameOnCard": "Jack Doe",
                                    "expirationMonth": 12,
                                    "expirationYear": 2022,
                                    "postalCode": "11203",
                                    "countryCode": "US"
                                },
                                "creditCard": {
                                    "cardNumber": 4444444444444448,
                                    "nameOnCard": "Jack Doe",
                                    "expirationMonth": 12,
                                    "expirationYear": 2022,
                                    "postalCode": "11203",
                                    "countryCode": "US"
                                },
                                "email": "qa_637749922416770110@fool.mailinator.com",
                                "confirmEmail": "qa_637749922416770110@fool.mailinator.com",
                                "promotionCode": "3b71eec5-0449-46df-9109-a55d480f5bd3",
                                "selectedOfferId": 21203,
                                "isoAlpha2CountryCode": "US",
                                "firstName": "Jack",
                                "lastName": "Doe_637749922416770110",
                                "phoneNumber": null,
                                "billingAddress": {
                                    "firstName": "Jack",
                                    "lastName": "Doe",
                                    "address1": "8648 Acacia Rd",
                                    "address2": null,
                                    "city": "Brooklyn",
                                    "state": "NY",
                                    "postalCode": "11203",
                                    "county": "Kings County",
                                    "country": "US",
                                    "phoneNumber": null
                                },
                                "shippingAddress": null,
                                "sourceCode": null,
                                "clientIpAddress": "127.0.0.1",
                                "isTestOrder": true,
                                "uid": 0,
                                "isNewAccount": false,
                                "placedByUid": null,
                                "orderSession": {
                                    "utmCode": {
                                        "source": "test source",
                                        "medium": "test medium",
                                        "campaign": "My Test Campaign",
                                        "term": "some term",
                                        "content": "lorem ipsum"
                                    },
                                    "sessionGuid": "8b7cafd3-7ebb-46fa-b101-fdbfdb767ac9",
                                    "customMetadata": {
                                        "custom field 1": "value1",
                                        "custom field 2": "value2"
                                    }
                                }
                            }
                        }
                    },
                    "x-bodyName": "orderForm"
                },
                "responses": {
                    "201": {
                        "description": "Returns the newly created item",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Fool.Commerce.Dto.OrderConfirmation"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "There were validation errors.<br />\r\n            The user is currently blocked and cannot order.<br />\r\n            The payment was declined by the payment processor.<br />\r\n            The user already has access to product.<br />\r\n            The order appeared to be a duplicate.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "The user has already received a trial for this product.<br />\r\n            The user seems to already be participating in this trial.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "The order requested was not found.<br />\r\n            The promotion requested was not found.<br />\r\n            The promotion requested is not active.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                }
                            }
                        }
                    },
                    "410": {
                        "description": "The promotion requested should redirect.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/orders/check": {
            "post": {
                "tags": [
                    "Order"
                ],
                "summary": "Create an ACH order",
                "operationId": "AcceptElectronicCheckOrder",
                "requestBody": {
                    "content": {
                        "application/json-patch+json": {
                            "schema": {
                                "$ref": "#/components/schemas/Fool.Commerce.Dto.ElectronicCheckOrderForm"
                            },
                            "example": {
                                "electronicCheck": {
                                    "accountHolderName": "Jamal Doe",
                                    "accountNumber": "0888271156",
                                    "routingNumber": "122000247",
                                    "countryCode": "US",
                                    "accountType": "Checking"
                                },
                                "email": "qa_637749922416879040@fool.mailinator.com",
                                "confirmEmail": "qa_637749922416879040@fool.mailinator.com",
                                "promotionCode": "3b71eec5-0449-46df-9109-a55d480f5bd3",
                                "selectedOfferId": 21203,
                                "isoAlpha2CountryCode": "US",
                                "firstName": "Jamal",
                                "lastName": "Doe_637749922416879040",
                                "phoneNumber": null,
                                "billingAddress": {
                                    "firstName": "Jamal",
                                    "lastName": "Doe",
                                    "address1": "8648 Acacia Rd",
                                    "address2": null,
                                    "city": "Brooklyn",
                                    "state": "NY",
                                    "postalCode": "11203",
                                    "county": "Kings County",
                                    "country": "US",
                                    "phoneNumber": null
                                },
                                "shippingAddress": null,
                                "sourceCode": null,
                                "clientIpAddress": "127.0.0.1",
                                "isTestOrder": true,
                                "uid": 0,
                                "isNewAccount": false,
                                "placedByUid": null,
                                "orderSession": {
                                    "utmCode": {
                                        "source": "test source",
                                        "medium": "test medium",
                                        "campaign": "My Test Campaign",
                                        "term": "some term",
                                        "content": "lorem ipsum"
                                    },
                                    "sessionGuid": "7fd511cb-b8ce-46ab-afb6-77aaa1d5ab9e",
                                    "customMetadata": {
                                        "custom field 1": "value1",
                                        "custom field 2": "value2"
                                    }
                                }
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Fool.Commerce.Dto.ElectronicCheckOrderForm"
                            },
                            "example": {
                                "electronicCheck": {
                                    "accountHolderName": "Jamal Doe",
                                    "accountNumber": "0888271156",
                                    "routingNumber": "122000247",
                                    "countryCode": "US",
                                    "accountType": "Checking"
                                },
                                "email": "qa_637749922416879040@fool.mailinator.com",
                                "confirmEmail": "qa_637749922416879040@fool.mailinator.com",
                                "promotionCode": "3b71eec5-0449-46df-9109-a55d480f5bd3",
                                "selectedOfferId": 21203,
                                "isoAlpha2CountryCode": "US",
                                "firstName": "Jamal",
                                "lastName": "Doe_637749922416879040",
                                "phoneNumber": null,
                                "billingAddress": {
                                    "firstName": "Jamal",
                                    "lastName": "Doe",
                                    "address1": "8648 Acacia Rd",
                                    "address2": null,
                                    "city": "Brooklyn",
                                    "state": "NY",
                                    "postalCode": "11203",
                                    "county": "Kings County",
                                    "country": "US",
                                    "phoneNumber": null
                                },
                                "shippingAddress": null,
                                "sourceCode": null,
                                "clientIpAddress": "127.0.0.1",
                                "isTestOrder": true,
                                "uid": 0,
                                "isNewAccount": false,
                                "placedByUid": null,
                                "orderSession": {
                                    "utmCode": {
                                        "source": "test source",
                                        "medium": "test medium",
                                        "campaign": "My Test Campaign",
                                        "term": "some term",
                                        "content": "lorem ipsum"
                                    },
                                    "sessionGuid": "7fd511cb-b8ce-46ab-afb6-77aaa1d5ab9e",
                                    "customMetadata": {
                                        "custom field 1": "value1",
                                        "custom field 2": "value2"
                                    }
                                }
                            }
                        },
                        "text/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Fool.Commerce.Dto.ElectronicCheckOrderForm"
                            },
                            "example": {
                                "electronicCheck": {
                                    "accountHolderName": "Jamal Doe",
                                    "accountNumber": "0888271156",
                                    "routingNumber": "122000247",
                                    "countryCode": "US",
                                    "accountType": "Checking"
                                },
                                "email": "qa_637749922416879040@fool.mailinator.com",
                                "confirmEmail": "qa_637749922416879040@fool.mailinator.com",
                                "promotionCode": "3b71eec5-0449-46df-9109-a55d480f5bd3",
                                "selectedOfferId": 21203,
                                "isoAlpha2CountryCode": "US",
                                "firstName": "Jamal",
                                "lastName": "Doe_637749922416879040",
                                "phoneNumber": null,
                                "billingAddress": {
                                    "firstName": "Jamal",
                                    "lastName": "Doe",
                                    "address1": "8648 Acacia Rd",
                                    "address2": null,
                                    "city": "Brooklyn",
                                    "state": "NY",
                                    "postalCode": "11203",
                                    "county": "Kings County",
                                    "country": "US",
                                    "phoneNumber": null
                                },
                                "shippingAddress": null,
                                "sourceCode": null,
                                "clientIpAddress": "127.0.0.1",
                                "isTestOrder": true,
                                "uid": 0,
                                "isNewAccount": false,
                                "placedByUid": null,
                                "orderSession": {
                                    "utmCode": {
                                        "source": "test source",
                                        "medium": "test medium",
                                        "campaign": "My Test Campaign",
                                        "term": "some term",
                                        "content": "lorem ipsum"
                                    },
                                    "sessionGuid": "7fd511cb-b8ce-46ab-afb6-77aaa1d5ab9e",
                                    "customMetadata": {
                                        "custom field 1": "value1",
                                        "custom field 2": "value2"
                                    }
                                }
                            }
                        },
                        "application/*+json": {
                            "schema": {
                                "$ref": "#/components/schemas/Fool.Commerce.Dto.ElectronicCheckOrderForm"
                            },
                            "example": {
                                "electronicCheck": {
                                    "accountHolderName": "Jamal Doe",
                                    "accountNumber": "0888271156",
                                    "routingNumber": "122000247",
                                    "countryCode": "US",
                                    "accountType": "Checking"
                                },
                                "email": "qa_637749922416879040@fool.mailinator.com",
                                "confirmEmail": "qa_637749922416879040@fool.mailinator.com",
                                "promotionCode": "3b71eec5-0449-46df-9109-a55d480f5bd3",
                                "selectedOfferId": 21203,
                                "isoAlpha2CountryCode": "US",
                                "firstName": "Jamal",
                                "lastName": "Doe_637749922416879040",
                                "phoneNumber": null,
                                "billingAddress": {
                                    "firstName": "Jamal",
                                    "lastName": "Doe",
                                    "address1": "8648 Acacia Rd",
                                    "address2": null,
                                    "city": "Brooklyn",
                                    "state": "NY",
                                    "postalCode": "11203",
                                    "county": "Kings County",
                                    "country": "US",
                                    "phoneNumber": null
                                },
                                "shippingAddress": null,
                                "sourceCode": null,
                                "clientIpAddress": "127.0.0.1",
                                "isTestOrder": true,
                                "uid": 0,
                                "isNewAccount": false,
                                "placedByUid": null,
                                "orderSession": {
                                    "utmCode": {
                                        "source": "test source",
                                        "medium": "test medium",
                                        "campaign": "My Test Campaign",
                                        "term": "some term",
                                        "content": "lorem ipsum"
                                    },
                                    "sessionGuid": "7fd511cb-b8ce-46ab-afb6-77aaa1d5ab9e",
                                    "customMetadata": {
                                        "custom field 1": "value1",
                                        "custom field 2": "value2"
                                    }
                                }
                            }
                        }
                    },
                    "x-bodyName": "orderForm"
                },
                "responses": {
                    "201": {
                        "description": "Returns the newly created item",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Fool.Commerce.Dto.OrderConfirmation"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "There were validation errors.<br />\r\n            The user is currently blocked and cannot order.<br />\r\n            The payment was declined by the payment processor.<br />\r\n            The user already has access to product.<br />\r\n            The order appeared to be a duplicate.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "The user has already received a trial for this product.<br />\r\n            The user seems to already be participating in this trial.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "The order requested was not found.<br />\r\n            The promotion requested was not found.<br />\r\n            The promotion requested is not active.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                }
                            }
                        }
                    },
                    "410": {
                        "description": "The promotion requested should redirect.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/orders/apple-pay": {
            "post": {
                "tags": [
                    "Order"
                ],
                "summary": "Create an Apple Pay order",
                "operationId": "AcceptApplePayOrder",
                "requestBody": {
                    "content": {
                        "application/json-patch+json": {
                            "schema": {
                                "$ref": "#/components/schemas/Fool.Commerce.Dto.ApplePayOrderForm"
                            },
                            "example": {
                                "applePay": {
                                    "countryCode": "US",
                                    "nameOnCard": "Jane Doe",
                                    "creditCardType": "Mastercard",
                                    "lastFourDigits": "4321",
                                    "postalCode": "11203",
                                    "pkPaymentToken": "{\"version\":\"EC_v1\",\"data\":\"KbyAaSMrGyF9zL4Gl5ilOFWU4aKQxS9dDSe92HCEnwTYGVKaIix4U8MLNW1rQEhHrBr5A14VYFXEruP0RP//Qpf7csny7dpdSTScYfUL++HwNMUREZCej33ZcI6LcuzqkI8L1bXDtJgStOTgR+04fWVFRzR+VEeM8FVKyxeFg23QAsiqxkNcFw7Q8MW9AD17UoteGLnRA2cY8p/xpoQ8j/xSwGM/UuMz0f7kSW08k7tcaj6yCvLSg1PZGDxQcxruzPi0/6FuUI2/R90eM5yrb1g88rYWFg1+wNjFPSORyQiPF3qjhxG6cIq1f/DpxexoJoNTllNhdDI216IgSwNIQMz+8CmpQDpyIcsZ+AwYrS78uPHFYdxPTnONOkc2c/MpoAi8CZ9um4apw/eSbZZz\",\"signature\":\"MIAGCSqGSIb3DQEHAqCAMIACAQExDzANBglghkgBZQMEAgEFADCABgkqhkiG9w0BBwEAAKCAMIID4zCCA4igAwIBAgIITDBBSVGdVDYwCgYIKoZIzj0EAwIwejEuMCwGA1UEAwwlQXBwbGUgQXBwbGljYXRpb24gSW50ZWdyYXRpb24gQ0EgLSBHMzEmMCQGA1UECwwdQXBwbGUgQ2VydGlmaWNhdGlvbiBBdXRob3JpdHkxEzARBgNVBAoMCkFwcGxlIEluYy4xCzAJBgNVBAYTAlVTMB4XDTE5MDUxODAxMzI1N1oXDTI0MDUxNjAxMzI1N1owXzElMCMGA1UEAwwcZWNjLXNtcC1icm9rZXItc2lnbl9VQzQtUFJPRDEUMBIGA1UECwwLaU9TIFN5c3RlbXMxEzARBgNVBAoMCkFwcGxlIEluYy4xCzAJBgNVBAYTAlVTMFkwEwYHKoZIzj0CAQYIKoZIzj0DAQcDQgAEwhV37evWx7Ihj2jdcJChIY3HsL1vLCg9hGCV2Ur0pUEbg0IO2BHzQH6DMx8cVMP36zIg1rrV1O/0komJPnwPE6OCAhEwggINMAwGA1UdEwEB/wQCMAAwHwYDVR0jBBgwFoAUI/JJxE+T5O8n5sT2KGw/orv9LkswRQYIKwYBBQUHAQEEOTA3MDUGCCsGAQUFBzABhilodHRwOi8vb2NzcC5hcHBsZS5jb20vb2NzcDA0LWFwcGxlYWljYTMwMjCCAR0GA1UdIASCARQwggEQMIIBDAYJKoZIhvdjZAUBMIH+MIHDBggrBgEFBQcCAjCBtgyBs1JlbGlhbmNlIG9uIHRoaXMgY2VydGlmaWNhdGUgYnkgYW55IHBhcnR5IGFzc3VtZXMgYWNjZXB0YW5jZSBvZiB0aGUgdGhlbiBhcHBsaWNhYmxlIHN0YW5kYXJkIHRlcm1zIGFuZCBjb25kaXRpb25zIG9mIHVzZSwgY2VydGlmaWNhdGUgcG9saWN5IGFuZCBjZXJ0aWZpY2F0aW9uIHByYWN0aWNlIHN0YXRlbWVudHMuMDYGCCsGAQUFBwIBFipodHRwOi8vd3d3LmFwcGxlLmNvbS9jZXJ0aWZpY2F0ZWF1dGhvcml0eS8wNAYDVR0fBC0wKzApoCegJYYjaHR0cDovL2NybC5hcHBsZS5jb20vYXBwbGVhaWNhMy5jcmwwHQYDVR0OBBYEFJRX22/VdIGGiYl2L35XhQfnm1gkMA4GA1UdDwEB/wQEAwIHgDAPBgkqhkiG92NkBh0EAgUAMAoGCCqGSM49BAMCA0kAMEYCIQC+CVcf5x4ec1tV5a+stMcv60RfMBhSIsclEAK2Hr1vVQIhANGLNQpd1t1usXRgNbEess6Hz6Pmr2y9g4CJDcgs3apjMIIC7jCCAnWgAwIBAgIISW0vvzqY2pcwCgYIKoZIzj0EAwIwZzEbMBkGA1UEAwwSQXBwbGUgUm9vdCBDQSAtIEczMSYwJAYDVQQLDB1BcHBsZSBDZXJ0aWZpY2F0aW9uIEF1dGhvcml0eTETMBEGA1UECgwKQXBwbGUgSW5jLjELMAkGA1UEBhMCVVMwHhcNMTQwNTA2MjM0NjMwWhcNMjkwNTA2MjM0NjMwWjB6MS4wLAYDVQQDDCVBcHBsZSBBcHBsaWNhdGlvbiBJbnRlZ3JhdGlvbiBDQSAtIEczMSYwJAYDVQQLDB1BcHBsZSBDZXJ0aWZpY2F0aW9uIEF1dGhvcml0eTETMBEGA1UECgwKQXBwbGUgSW5jLjELMAkGA1UEBhMCVVMwWTATBgcqhkjOPQIBBggqhkjOPQMBBwNCAATwFxGEGddkhdUaXiWBB3bogKLv3nuuTeCN/EuT4TNW1WZbNa4i0Jd2DSJOe7oI/XYXzojLdrtmcL7I6CmE/1RFo4H3MIH0MEYGCCsGAQUFBwEBBDowODA2BggrBgEFBQcwAYYqaHR0cDovL29jc3AuYXBwbGUuY29tL29jc3AwNC1hcHBsZXJvb3RjYWczMB0GA1UdDgQWBBQj8knET5Pk7yfmxPYobD+iu/0uSzAPBgNVHRMBAf8EBTADAQH/MB8GA1UdIwQYMBaAFLuw3qFYM4iapIqZ3r6966/ayySrMDcGA1UdHwQwMC4wLKAqoCiGJmh0dHA6Ly9jcmwuYXBwbGUuY29tL2FwcGxlcm9vdGNhZzMuY3JsMA4GA1UdDwEB/wQEAwIBBjAQBgoqhkiG92NkBgIOBAIFADAKBggqhkjOPQQDAgNnADBkAjA6z3KDURaZsYb7NcNWymK/9Bft2Q91TaKOvvGcgV5Ct4n4mPebWZ+Y1UENj53pwv4CMDIt1UQhsKMFd2xd8zg7kGf9F3wsIW2WT8ZyaYISb1T4en0bmcubCYkhYQaZDwmSHQAAMYIBjDCCAYgCAQEwgYYwejEuMCwGA1UEAwwlQXBwbGUgQXBwbGljYXRpb24gSW50ZWdyYXRpb24gQ0EgLSBHMzEmMCQGA1UECwwdQXBwbGUgQ2VydGlmaWNhdGlvbiBBdXRob3JpdHkxEzARBgNVBAoMCkFwcGxlIEluYy4xCzAJBgNVBAYTAlVTAghMMEFJUZ1UNjANBglghkgBZQMEAgEFAKCBlTAYBgkqhkiG9w0BCQMxCwYJKoZIhvcNAQcBMBwGCSqGSIb3DQEJBTEPFw0yMDA5MTgxODU2MzlaMCoGCSqGSIb3DQEJNDEdMBswDQYJYIZIAWUDBAIBBQChCgYIKoZIzj0EAwIwLwYJKoZIhvcNAQkEMSIEIO6G5U6p0gCvlpDf/GgnOo3Ufw3kS50fO3A/SRdtsicUMAoGCCqGSM49BAMCBEcwRQIgM/Qyd/Fcz19lpiL6HkWn2cJLRPSY+8Ew/m2jxZQmYAkCIQCHB5eOLNQntV1Ifea1z2ElnLzDLj8bVsHfT3FcSnlteAAAAAAAAA==\",\"header\":{\"ephemeralPublicKey\":\"MFkwEwYHKoZIzj0CAQYIKoZIzj0DAQcDQgAEvlB44M0J8HRKYAM5RT7ybq40dprCa/Vs8d6ElOzX/DPM0ZRYWAyxt30wHemeCd1OUjG1fTs+lC5Q+TPRMIZ5/w==\",\"publicKeyHash\":\"AGRO2G1ZMWGao2n9cJsfSJ0uvdPs2YACcrpcDgguSGg=\",\"transactionId\":\"d013b26f1f2082390f021b06bfa528efa76c24bfe523d562a5d44a18db8cfc4e\"}}",
                                    "expirationMonth": null,
                                    "expirationYear": null
                                },
                                "email": "qa_637749922416995070@fool.mailinator.com",
                                "confirmEmail": "qa_637749922416995070@fool.mailinator.com",
                                "promotionCode": "3b71eec5-0449-46df-9109-a55d480f5bd3",
                                "selectedOfferId": 21203,
                                "isoAlpha2CountryCode": "US",
                                "firstName": "Jane",
                                "lastName": "Doe_637749922416995070",
                                "phoneNumber": null,
                                "billingAddress": {
                                    "firstName": "Jane",
                                    "lastName": "Doe",
                                    "address1": "8648 Acacia Rd",
                                    "address2": null,
                                    "city": "Brooklyn",
                                    "state": "NY",
                                    "postalCode": "11203",
                                    "county": "Kings County",
                                    "country": "US",
                                    "phoneNumber": null
                                },
                                "shippingAddress": null,
                                "sourceCode": null,
                                "clientIpAddress": "127.0.0.1",
                                "isTestOrder": true,
                                "uid": 0,
                                "isNewAccount": false,
                                "placedByUid": null,
                                "orderSession": {
                                    "utmCode": {
                                        "source": "test source",
                                        "medium": "test medium",
                                        "campaign": "My Test Campaign",
                                        "term": "some term",
                                        "content": "lorem ipsum"
                                    },
                                    "sessionGuid": "2f095a9c-2acb-4eb0-803e-6097b2514116",
                                    "customMetadata": {
                                        "custom field 1": "value1",
                                        "custom field 2": "value2"
                                    }
                                }
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Fool.Commerce.Dto.ApplePayOrderForm"
                            },
                            "example": {
                                "applePay": {
                                    "countryCode": "US",
                                    "nameOnCard": "Jane Doe",
                                    "creditCardType": "Mastercard",
                                    "lastFourDigits": "4321",
                                    "postalCode": "11203",
                                    "pkPaymentToken": "{\"version\":\"EC_v1\",\"data\":\"KbyAaSMrGyF9zL4Gl5ilOFWU4aKQxS9dDSe92HCEnwTYGVKaIix4U8MLNW1rQEhHrBr5A14VYFXEruP0RP//Qpf7csny7dpdSTScYfUL++HwNMUREZCej33ZcI6LcuzqkI8L1bXDtJgStOTgR+04fWVFRzR+VEeM8FVKyxeFg23QAsiqxkNcFw7Q8MW9AD17UoteGLnRA2cY8p/xpoQ8j/xSwGM/UuMz0f7kSW08k7tcaj6yCvLSg1PZGDxQcxruzPi0/6FuUI2/R90eM5yrb1g88rYWFg1+wNjFPSORyQiPF3qjhxG6cIq1f/DpxexoJoNTllNhdDI216IgSwNIQMz+8CmpQDpyIcsZ+AwYrS78uPHFYdxPTnONOkc2c/MpoAi8CZ9um4apw/eSbZZz\",\"signature\":\"MIAGCSqGSIb3DQEHAqCAMIACAQExDzANBglghkgBZQMEAgEFADCABgkqhkiG9w0BBwEAAKCAMIID4zCCA4igAwIBAgIITDBBSVGdVDYwCgYIKoZIzj0EAwIwejEuMCwGA1UEAwwlQXBwbGUgQXBwbGljYXRpb24gSW50ZWdyYXRpb24gQ0EgLSBHMzEmMCQGA1UECwwdQXBwbGUgQ2VydGlmaWNhdGlvbiBBdXRob3JpdHkxEzARBgNVBAoMCkFwcGxlIEluYy4xCzAJBgNVBAYTAlVTMB4XDTE5MDUxODAxMzI1N1oXDTI0MDUxNjAxMzI1N1owXzElMCMGA1UEAwwcZWNjLXNtcC1icm9rZXItc2lnbl9VQzQtUFJPRDEUMBIGA1UECwwLaU9TIFN5c3RlbXMxEzARBgNVBAoMCkFwcGxlIEluYy4xCzAJBgNVBAYTAlVTMFkwEwYHKoZIzj0CAQYIKoZIzj0DAQcDQgAEwhV37evWx7Ihj2jdcJChIY3HsL1vLCg9hGCV2Ur0pUEbg0IO2BHzQH6DMx8cVMP36zIg1rrV1O/0komJPnwPE6OCAhEwggINMAwGA1UdEwEB/wQCMAAwHwYDVR0jBBgwFoAUI/JJxE+T5O8n5sT2KGw/orv9LkswRQYIKwYBBQUHAQEEOTA3MDUGCCsGAQUFBzABhilodHRwOi8vb2NzcC5hcHBsZS5jb20vb2NzcDA0LWFwcGxlYWljYTMwMjCCAR0GA1UdIASCARQwggEQMIIBDAYJKoZIhvdjZAUBMIH+MIHDBggrBgEFBQcCAjCBtgyBs1JlbGlhbmNlIG9uIHRoaXMgY2VydGlmaWNhdGUgYnkgYW55IHBhcnR5IGFzc3VtZXMgYWNjZXB0YW5jZSBvZiB0aGUgdGhlbiBhcHBsaWNhYmxlIHN0YW5kYXJkIHRlcm1zIGFuZCBjb25kaXRpb25zIG9mIHVzZSwgY2VydGlmaWNhdGUgcG9saWN5IGFuZCBjZXJ0aWZpY2F0aW9uIHByYWN0aWNlIHN0YXRlbWVudHMuMDYGCCsGAQUFBwIBFipodHRwOi8vd3d3LmFwcGxlLmNvbS9jZXJ0aWZpY2F0ZWF1dGhvcml0eS8wNAYDVR0fBC0wKzApoCegJYYjaHR0cDovL2NybC5hcHBsZS5jb20vYXBwbGVhaWNhMy5jcmwwHQYDVR0OBBYEFJRX22/VdIGGiYl2L35XhQfnm1gkMA4GA1UdDwEB/wQEAwIHgDAPBgkqhkiG92NkBh0EAgUAMAoGCCqGSM49BAMCA0kAMEYCIQC+CVcf5x4ec1tV5a+stMcv60RfMBhSIsclEAK2Hr1vVQIhANGLNQpd1t1usXRgNbEess6Hz6Pmr2y9g4CJDcgs3apjMIIC7jCCAnWgAwIBAgIISW0vvzqY2pcwCgYIKoZIzj0EAwIwZzEbMBkGA1UEAwwSQXBwbGUgUm9vdCBDQSAtIEczMSYwJAYDVQQLDB1BcHBsZSBDZXJ0aWZpY2F0aW9uIEF1dGhvcml0eTETMBEGA1UECgwKQXBwbGUgSW5jLjELMAkGA1UEBhMCVVMwHhcNMTQwNTA2MjM0NjMwWhcNMjkwNTA2MjM0NjMwWjB6MS4wLAYDVQQDDCVBcHBsZSBBcHBsaWNhdGlvbiBJbnRlZ3JhdGlvbiBDQSAtIEczMSYwJAYDVQQLDB1BcHBsZSBDZXJ0aWZpY2F0aW9uIEF1dGhvcml0eTETMBEGA1UECgwKQXBwbGUgSW5jLjELMAkGA1UEBhMCVVMwWTATBgcqhkjOPQIBBggqhkjOPQMBBwNCAATwFxGEGddkhdUaXiWBB3bogKLv3nuuTeCN/EuT4TNW1WZbNa4i0Jd2DSJOe7oI/XYXzojLdrtmcL7I6CmE/1RFo4H3MIH0MEYGCCsGAQUFBwEBBDowODA2BggrBgEFBQcwAYYqaHR0cDovL29jc3AuYXBwbGUuY29tL29jc3AwNC1hcHBsZXJvb3RjYWczMB0GA1UdDgQWBBQj8knET5Pk7yfmxPYobD+iu/0uSzAPBgNVHRMBAf8EBTADAQH/MB8GA1UdIwQYMBaAFLuw3qFYM4iapIqZ3r6966/ayySrMDcGA1UdHwQwMC4wLKAqoCiGJmh0dHA6Ly9jcmwuYXBwbGUuY29tL2FwcGxlcm9vdGNhZzMuY3JsMA4GA1UdDwEB/wQEAwIBBjAQBgoqhkiG92NkBgIOBAIFADAKBggqhkjOPQQDAgNnADBkAjA6z3KDURaZsYb7NcNWymK/9Bft2Q91TaKOvvGcgV5Ct4n4mPebWZ+Y1UENj53pwv4CMDIt1UQhsKMFd2xd8zg7kGf9F3wsIW2WT8ZyaYISb1T4en0bmcubCYkhYQaZDwmSHQAAMYIBjDCCAYgCAQEwgYYwejEuMCwGA1UEAwwlQXBwbGUgQXBwbGljYXRpb24gSW50ZWdyYXRpb24gQ0EgLSBHMzEmMCQGA1UECwwdQXBwbGUgQ2VydGlmaWNhdGlvbiBBdXRob3JpdHkxEzARBgNVBAoMCkFwcGxlIEluYy4xCzAJBgNVBAYTAlVTAghMMEFJUZ1UNjANBglghkgBZQMEAgEFAKCBlTAYBgkqhkiG9w0BCQMxCwYJKoZIhvcNAQcBMBwGCSqGSIb3DQEJBTEPFw0yMDA5MTgxODU2MzlaMCoGCSqGSIb3DQEJNDEdMBswDQYJYIZIAWUDBAIBBQChCgYIKoZIzj0EAwIwLwYJKoZIhvcNAQkEMSIEIO6G5U6p0gCvlpDf/GgnOo3Ufw3kS50fO3A/SRdtsicUMAoGCCqGSM49BAMCBEcwRQIgM/Qyd/Fcz19lpiL6HkWn2cJLRPSY+8Ew/m2jxZQmYAkCIQCHB5eOLNQntV1Ifea1z2ElnLzDLj8bVsHfT3FcSnlteAAAAAAAAA==\",\"header\":{\"ephemeralPublicKey\":\"MFkwEwYHKoZIzj0CAQYIKoZIzj0DAQcDQgAEvlB44M0J8HRKYAM5RT7ybq40dprCa/Vs8d6ElOzX/DPM0ZRYWAyxt30wHemeCd1OUjG1fTs+lC5Q+TPRMIZ5/w==\",\"publicKeyHash\":\"AGRO2G1ZMWGao2n9cJsfSJ0uvdPs2YACcrpcDgguSGg=\",\"transactionId\":\"d013b26f1f2082390f021b06bfa528efa76c24bfe523d562a5d44a18db8cfc4e\"}}",
                                    "expirationMonth": null,
                                    "expirationYear": null
                                },
                                "email": "qa_637749922416995070@fool.mailinator.com",
                                "confirmEmail": "qa_637749922416995070@fool.mailinator.com",
                                "promotionCode": "3b71eec5-0449-46df-9109-a55d480f5bd3",
                                "selectedOfferId": 21203,
                                "isoAlpha2CountryCode": "US",
                                "firstName": "Jane",
                                "lastName": "Doe_637749922416995070",
                                "phoneNumber": null,
                                "billingAddress": {
                                    "firstName": "Jane",
                                    "lastName": "Doe",
                                    "address1": "8648 Acacia Rd",
                                    "address2": null,
                                    "city": "Brooklyn",
                                    "state": "NY",
                                    "postalCode": "11203",
                                    "county": "Kings County",
                                    "country": "US",
                                    "phoneNumber": null
                                },
                                "shippingAddress": null,
                                "sourceCode": null,
                                "clientIpAddress": "127.0.0.1",
                                "isTestOrder": true,
                                "uid": 0,
                                "isNewAccount": false,
                                "placedByUid": null,
                                "orderSession": {
                                    "utmCode": {
                                        "source": "test source",
                                        "medium": "test medium",
                                        "campaign": "My Test Campaign",
                                        "term": "some term",
                                        "content": "lorem ipsum"
                                    },
                                    "sessionGuid": "2f095a9c-2acb-4eb0-803e-6097b2514116",
                                    "customMetadata": {
                                        "custom field 1": "value1",
                                        "custom field 2": "value2"
                                    }
                                }
                            }
                        },
                        "text/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Fool.Commerce.Dto.ApplePayOrderForm"
                            },
                            "example": {
                                "applePay": {
                                    "countryCode": "US",
                                    "nameOnCard": "Jane Doe",
                                    "creditCardType": "Mastercard",
                                    "lastFourDigits": "4321",
                                    "postalCode": "11203",
                                    "pkPaymentToken": "{\"version\":\"EC_v1\",\"data\":\"KbyAaSMrGyF9zL4Gl5ilOFWU4aKQxS9dDSe92HCEnwTYGVKaIix4U8MLNW1rQEhHrBr5A14VYFXEruP0RP//Qpf7csny7dpdSTScYfUL++HwNMUREZCej33ZcI6LcuzqkI8L1bXDtJgStOTgR+04fWVFRzR+VEeM8FVKyxeFg23QAsiqxkNcFw7Q8MW9AD17UoteGLnRA2cY8p/xpoQ8j/xSwGM/UuMz0f7kSW08k7tcaj6yCvLSg1PZGDxQcxruzPi0/6FuUI2/R90eM5yrb1g88rYWFg1+wNjFPSORyQiPF3qjhxG6cIq1f/DpxexoJoNTllNhdDI216IgSwNIQMz+8CmpQDpyIcsZ+AwYrS78uPHFYdxPTnONOkc2c/MpoAi8CZ9um4apw/eSbZZz\",\"signature\":\"MIAGCSqGSIb3DQEHAqCAMIACAQExDzANBglghkgBZQMEAgEFADCABgkqhkiG9w0BBwEAAKCAMIID4zCCA4igAwIBAgIITDBBSVGdVDYwCgYIKoZIzj0EAwIwejEuMCwGA1UEAwwlQXBwbGUgQXBwbGljYXRpb24gSW50ZWdyYXRpb24gQ0EgLSBHMzEmMCQGA1UECwwdQXBwbGUgQ2VydGlmaWNhdGlvbiBBdXRob3JpdHkxEzARBgNVBAoMCkFwcGxlIEluYy4xCzAJBgNVBAYTAlVTMB4XDTE5MDUxODAxMzI1N1oXDTI0MDUxNjAxMzI1N1owXzElMCMGA1UEAwwcZWNjLXNtcC1icm9rZXItc2lnbl9VQzQtUFJPRDEUMBIGA1UECwwLaU9TIFN5c3RlbXMxEzARBgNVBAoMCkFwcGxlIEluYy4xCzAJBgNVBAYTAlVTMFkwEwYHKoZIzj0CAQYIKoZIzj0DAQcDQgAEwhV37evWx7Ihj2jdcJChIY3HsL1vLCg9hGCV2Ur0pUEbg0IO2BHzQH6DMx8cVMP36zIg1rrV1O/0komJPnwPE6OCAhEwggINMAwGA1UdEwEB/wQCMAAwHwYDVR0jBBgwFoAUI/JJxE+T5O8n5sT2KGw/orv9LkswRQYIKwYBBQUHAQEEOTA3MDUGCCsGAQUFBzABhilodHRwOi8vb2NzcC5hcHBsZS5jb20vb2NzcDA0LWFwcGxlYWljYTMwMjCCAR0GA1UdIASCARQwggEQMIIBDAYJKoZIhvdjZAUBMIH+MIHDBggrBgEFBQcCAjCBtgyBs1JlbGlhbmNlIG9uIHRoaXMgY2VydGlmaWNhdGUgYnkgYW55IHBhcnR5IGFzc3VtZXMgYWNjZXB0YW5jZSBvZiB0aGUgdGhlbiBhcHBsaWNhYmxlIHN0YW5kYXJkIHRlcm1zIGFuZCBjb25kaXRpb25zIG9mIHVzZSwgY2VydGlmaWNhdGUgcG9saWN5IGFuZCBjZXJ0aWZpY2F0aW9uIHByYWN0aWNlIHN0YXRlbWVudHMuMDYGCCsGAQUFBwIBFipodHRwOi8vd3d3LmFwcGxlLmNvbS9jZXJ0aWZpY2F0ZWF1dGhvcml0eS8wNAYDVR0fBC0wKzApoCegJYYjaHR0cDovL2NybC5hcHBsZS5jb20vYXBwbGVhaWNhMy5jcmwwHQYDVR0OBBYEFJRX22/VdIGGiYl2L35XhQfnm1gkMA4GA1UdDwEB/wQEAwIHgDAPBgkqhkiG92NkBh0EAgUAMAoGCCqGSM49BAMCA0kAMEYCIQC+CVcf5x4ec1tV5a+stMcv60RfMBhSIsclEAK2Hr1vVQIhANGLNQpd1t1usXRgNbEess6Hz6Pmr2y9g4CJDcgs3apjMIIC7jCCAnWgAwIBAgIISW0vvzqY2pcwCgYIKoZIzj0EAwIwZzEbMBkGA1UEAwwSQXBwbGUgUm9vdCBDQSAtIEczMSYwJAYDVQQLDB1BcHBsZSBDZXJ0aWZpY2F0aW9uIEF1dGhvcml0eTETMBEGA1UECgwKQXBwbGUgSW5jLjELMAkGA1UEBhMCVVMwHhcNMTQwNTA2MjM0NjMwWhcNMjkwNTA2MjM0NjMwWjB6MS4wLAYDVQQDDCVBcHBsZSBBcHBsaWNhdGlvbiBJbnRlZ3JhdGlvbiBDQSAtIEczMSYwJAYDVQQLDB1BcHBsZSBDZXJ0aWZpY2F0aW9uIEF1dGhvcml0eTETMBEGA1UECgwKQXBwbGUgSW5jLjELMAkGA1UEBhMCVVMwWTATBgcqhkjOPQIBBggqhkjOPQMBBwNCAATwFxGEGddkhdUaXiWBB3bogKLv3nuuTeCN/EuT4TNW1WZbNa4i0Jd2DSJOe7oI/XYXzojLdrtmcL7I6CmE/1RFo4H3MIH0MEYGCCsGAQUFBwEBBDowODA2BggrBgEFBQcwAYYqaHR0cDovL29jc3AuYXBwbGUuY29tL29jc3AwNC1hcHBsZXJvb3RjYWczMB0GA1UdDgQWBBQj8knET5Pk7yfmxPYobD+iu/0uSzAPBgNVHRMBAf8EBTADAQH/MB8GA1UdIwQYMBaAFLuw3qFYM4iapIqZ3r6966/ayySrMDcGA1UdHwQwMC4wLKAqoCiGJmh0dHA6Ly9jcmwuYXBwbGUuY29tL2FwcGxlcm9vdGNhZzMuY3JsMA4GA1UdDwEB/wQEAwIBBjAQBgoqhkiG92NkBgIOBAIFADAKBggqhkjOPQQDAgNnADBkAjA6z3KDURaZsYb7NcNWymK/9Bft2Q91TaKOvvGcgV5Ct4n4mPebWZ+Y1UENj53pwv4CMDIt1UQhsKMFd2xd8zg7kGf9F3wsIW2WT8ZyaYISb1T4en0bmcubCYkhYQaZDwmSHQAAMYIBjDCCAYgCAQEwgYYwejEuMCwGA1UEAwwlQXBwbGUgQXBwbGljYXRpb24gSW50ZWdyYXRpb24gQ0EgLSBHMzEmMCQGA1UECwwdQXBwbGUgQ2VydGlmaWNhdGlvbiBBdXRob3JpdHkxEzARBgNVBAoMCkFwcGxlIEluYy4xCzAJBgNVBAYTAlVTAghMMEFJUZ1UNjANBglghkgBZQMEAgEFAKCBlTAYBgkqhkiG9w0BCQMxCwYJKoZIhvcNAQcBMBwGCSqGSIb3DQEJBTEPFw0yMDA5MTgxODU2MzlaMCoGCSqGSIb3DQEJNDEdMBswDQYJYIZIAWUDBAIBBQChCgYIKoZIzj0EAwIwLwYJKoZIhvcNAQkEMSIEIO6G5U6p0gCvlpDf/GgnOo3Ufw3kS50fO3A/SRdtsicUMAoGCCqGSM49BAMCBEcwRQIgM/Qyd/Fcz19lpiL6HkWn2cJLRPSY+8Ew/m2jxZQmYAkCIQCHB5eOLNQntV1Ifea1z2ElnLzDLj8bVsHfT3FcSnlteAAAAAAAAA==\",\"header\":{\"ephemeralPublicKey\":\"MFkwEwYHKoZIzj0CAQYIKoZIzj0DAQcDQgAEvlB44M0J8HRKYAM5RT7ybq40dprCa/Vs8d6ElOzX/DPM0ZRYWAyxt30wHemeCd1OUjG1fTs+lC5Q+TPRMIZ5/w==\",\"publicKeyHash\":\"AGRO2G1ZMWGao2n9cJsfSJ0uvdPs2YACcrpcDgguSGg=\",\"transactionId\":\"d013b26f1f2082390f021b06bfa528efa76c24bfe523d562a5d44a18db8cfc4e\"}}",
                                    "expirationMonth": null,
                                    "expirationYear": null
                                },
                                "email": "qa_637749922416995070@fool.mailinator.com",
                                "confirmEmail": "qa_637749922416995070@fool.mailinator.com",
                                "promotionCode": "3b71eec5-0449-46df-9109-a55d480f5bd3",
                                "selectedOfferId": 21203,
                                "isoAlpha2CountryCode": "US",
                                "firstName": "Jane",
                                "lastName": "Doe_637749922416995070",
                                "phoneNumber": null,
                                "billingAddress": {
                                    "firstName": "Jane",
                                    "lastName": "Doe",
                                    "address1": "8648 Acacia Rd",
                                    "address2": null,
                                    "city": "Brooklyn",
                                    "state": "NY",
                                    "postalCode": "11203",
                                    "county": "Kings County",
                                    "country": "US",
                                    "phoneNumber": null
                                },
                                "shippingAddress": null,
                                "sourceCode": null,
                                "clientIpAddress": "127.0.0.1",
                                "isTestOrder": true,
                                "uid": 0,
                                "isNewAccount": false,
                                "placedByUid": null,
                                "orderSession": {
                                    "utmCode": {
                                        "source": "test source",
                                        "medium": "test medium",
                                        "campaign": "My Test Campaign",
                                        "term": "some term",
                                        "content": "lorem ipsum"
                                    },
                                    "sessionGuid": "2f095a9c-2acb-4eb0-803e-6097b2514116",
                                    "customMetadata": {
                                        "custom field 1": "value1",
                                        "custom field 2": "value2"
                                    }
                                }
                            }
                        },
                        "application/*+json": {
                            "schema": {
                                "$ref": "#/components/schemas/Fool.Commerce.Dto.ApplePayOrderForm"
                            },
                            "example": {
                                "applePay": {
                                    "countryCode": "US",
                                    "nameOnCard": "Jane Doe",
                                    "creditCardType": "Mastercard",
                                    "lastFourDigits": "4321",
                                    "postalCode": "11203",
                                    "pkPaymentToken": "{\"version\":\"EC_v1\",\"data\":\"KbyAaSMrGyF9zL4Gl5ilOFWU4aKQxS9dDSe92HCEnwTYGVKaIix4U8MLNW1rQEhHrBr5A14VYFXEruP0RP//Qpf7csny7dpdSTScYfUL++HwNMUREZCej33ZcI6LcuzqkI8L1bXDtJgStOTgR+04fWVFRzR+VEeM8FVKyxeFg23QAsiqxkNcFw7Q8MW9AD17UoteGLnRA2cY8p/xpoQ8j/xSwGM/UuMz0f7kSW08k7tcaj6yCvLSg1PZGDxQcxruzPi0/6FuUI2/R90eM5yrb1g88rYWFg1+wNjFPSORyQiPF3qjhxG6cIq1f/DpxexoJoNTllNhdDI216IgSwNIQMz+8CmpQDpyIcsZ+AwYrS78uPHFYdxPTnONOkc2c/MpoAi8CZ9um4apw/eSbZZz\",\"signature\":\"MIAGCSqGSIb3DQEHAqCAMIACAQExDzANBglghkgBZQMEAgEFADCABgkqhkiG9w0BBwEAAKCAMIID4zCCA4igAwIBAgIITDBBSVGdVDYwCgYIKoZIzj0EAwIwejEuMCwGA1UEAwwlQXBwbGUgQXBwbGljYXRpb24gSW50ZWdyYXRpb24gQ0EgLSBHMzEmMCQGA1UECwwdQXBwbGUgQ2VydGlmaWNhdGlvbiBBdXRob3JpdHkxEzARBgNVBAoMCkFwcGxlIEluYy4xCzAJBgNVBAYTAlVTMB4XDTE5MDUxODAxMzI1N1oXDTI0MDUxNjAxMzI1N1owXzElMCMGA1UEAwwcZWNjLXNtcC1icm9rZXItc2lnbl9VQzQtUFJPRDEUMBIGA1UECwwLaU9TIFN5c3RlbXMxEzARBgNVBAoMCkFwcGxlIEluYy4xCzAJBgNVBAYTAlVTMFkwEwYHKoZIzj0CAQYIKoZIzj0DAQcDQgAEwhV37evWx7Ihj2jdcJChIY3HsL1vLCg9hGCV2Ur0pUEbg0IO2BHzQH6DMx8cVMP36zIg1rrV1O/0komJPnwPE6OCAhEwggINMAwGA1UdEwEB/wQCMAAwHwYDVR0jBBgwFoAUI/JJxE+T5O8n5sT2KGw/orv9LkswRQYIKwYBBQUHAQEEOTA3MDUGCCsGAQUFBzABhilodHRwOi8vb2NzcC5hcHBsZS5jb20vb2NzcDA0LWFwcGxlYWljYTMwMjCCAR0GA1UdIASCARQwggEQMIIBDAYJKoZIhvdjZAUBMIH+MIHDBggrBgEFBQcCAjCBtgyBs1JlbGlhbmNlIG9uIHRoaXMgY2VydGlmaWNhdGUgYnkgYW55IHBhcnR5IGFzc3VtZXMgYWNjZXB0YW5jZSBvZiB0aGUgdGhlbiBhcHBsaWNhYmxlIHN0YW5kYXJkIHRlcm1zIGFuZCBjb25kaXRpb25zIG9mIHVzZSwgY2VydGlmaWNhdGUgcG9saWN5IGFuZCBjZXJ0aWZpY2F0aW9uIHByYWN0aWNlIHN0YXRlbWVudHMuMDYGCCsGAQUFBwIBFipodHRwOi8vd3d3LmFwcGxlLmNvbS9jZXJ0aWZpY2F0ZWF1dGhvcml0eS8wNAYDVR0fBC0wKzApoCegJYYjaHR0cDovL2NybC5hcHBsZS5jb20vYXBwbGVhaWNhMy5jcmwwHQYDVR0OBBYEFJRX22/VdIGGiYl2L35XhQfnm1gkMA4GA1UdDwEB/wQEAwIHgDAPBgkqhkiG92NkBh0EAgUAMAoGCCqGSM49BAMCA0kAMEYCIQC+CVcf5x4ec1tV5a+stMcv60RfMBhSIsclEAK2Hr1vVQIhANGLNQpd1t1usXRgNbEess6Hz6Pmr2y9g4CJDcgs3apjMIIC7jCCAnWgAwIBAgIISW0vvzqY2pcwCgYIKoZIzj0EAwIwZzEbMBkGA1UEAwwSQXBwbGUgUm9vdCBDQSAtIEczMSYwJAYDVQQLDB1BcHBsZSBDZXJ0aWZpY2F0aW9uIEF1dGhvcml0eTETMBEGA1UECgwKQXBwbGUgSW5jLjELMAkGA1UEBhMCVVMwHhcNMTQwNTA2MjM0NjMwWhcNMjkwNTA2MjM0NjMwWjB6MS4wLAYDVQQDDCVBcHBsZSBBcHBsaWNhdGlvbiBJbnRlZ3JhdGlvbiBDQSAtIEczMSYwJAYDVQQLDB1BcHBsZSBDZXJ0aWZpY2F0aW9uIEF1dGhvcml0eTETMBEGA1UECgwKQXBwbGUgSW5jLjELMAkGA1UEBhMCVVMwWTATBgcqhkjOPQIBBggqhkjOPQMBBwNCAATwFxGEGddkhdUaXiWBB3bogKLv3nuuTeCN/EuT4TNW1WZbNa4i0Jd2DSJOe7oI/XYXzojLdrtmcL7I6CmE/1RFo4H3MIH0MEYGCCsGAQUFBwEBBDowODA2BggrBgEFBQcwAYYqaHR0cDovL29jc3AuYXBwbGUuY29tL29jc3AwNC1hcHBsZXJvb3RjYWczMB0GA1UdDgQWBBQj8knET5Pk7yfmxPYobD+iu/0uSzAPBgNVHRMBAf8EBTADAQH/MB8GA1UdIwQYMBaAFLuw3qFYM4iapIqZ3r6966/ayySrMDcGA1UdHwQwMC4wLKAqoCiGJmh0dHA6Ly9jcmwuYXBwbGUuY29tL2FwcGxlcm9vdGNhZzMuY3JsMA4GA1UdDwEB/wQEAwIBBjAQBgoqhkiG92NkBgIOBAIFADAKBggqhkjOPQQDAgNnADBkAjA6z3KDURaZsYb7NcNWymK/9Bft2Q91TaKOvvGcgV5Ct4n4mPebWZ+Y1UENj53pwv4CMDIt1UQhsKMFd2xd8zg7kGf9F3wsIW2WT8ZyaYISb1T4en0bmcubCYkhYQaZDwmSHQAAMYIBjDCCAYgCAQEwgYYwejEuMCwGA1UEAwwlQXBwbGUgQXBwbGljYXRpb24gSW50ZWdyYXRpb24gQ0EgLSBHMzEmMCQGA1UECwwdQXBwbGUgQ2VydGlmaWNhdGlvbiBBdXRob3JpdHkxEzARBgNVBAoMCkFwcGxlIEluYy4xCzAJBgNVBAYTAlVTAghMMEFJUZ1UNjANBglghkgBZQMEAgEFAKCBlTAYBgkqhkiG9w0BCQMxCwYJKoZIhvcNAQcBMBwGCSqGSIb3DQEJBTEPFw0yMDA5MTgxODU2MzlaMCoGCSqGSIb3DQEJNDEdMBswDQYJYIZIAWUDBAIBBQChCgYIKoZIzj0EAwIwLwYJKoZIhvcNAQkEMSIEIO6G5U6p0gCvlpDf/GgnOo3Ufw3kS50fO3A/SRdtsicUMAoGCCqGSM49BAMCBEcwRQIgM/Qyd/Fcz19lpiL6HkWn2cJLRPSY+8Ew/m2jxZQmYAkCIQCHB5eOLNQntV1Ifea1z2ElnLzDLj8bVsHfT3FcSnlteAAAAAAAAA==\",\"header\":{\"ephemeralPublicKey\":\"MFkwEwYHKoZIzj0CAQYIKoZIzj0DAQcDQgAEvlB44M0J8HRKYAM5RT7ybq40dprCa/Vs8d6ElOzX/DPM0ZRYWAyxt30wHemeCd1OUjG1fTs+lC5Q+TPRMIZ5/w==\",\"publicKeyHash\":\"AGRO2G1ZMWGao2n9cJsfSJ0uvdPs2YACcrpcDgguSGg=\",\"transactionId\":\"d013b26f1f2082390f021b06bfa528efa76c24bfe523d562a5d44a18db8cfc4e\"}}",
                                    "expirationMonth": null,
                                    "expirationYear": null
                                },
                                "email": "qa_637749922416995070@fool.mailinator.com",
                                "confirmEmail": "qa_637749922416995070@fool.mailinator.com",
                                "promotionCode": "3b71eec5-0449-46df-9109-a55d480f5bd3",
                                "selectedOfferId": 21203,
                                "isoAlpha2CountryCode": "US",
                                "firstName": "Jane",
                                "lastName": "Doe_637749922416995070",
                                "phoneNumber": null,
                                "billingAddress": {
                                    "firstName": "Jane",
                                    "lastName": "Doe",
                                    "address1": "8648 Acacia Rd",
                                    "address2": null,
                                    "city": "Brooklyn",
                                    "state": "NY",
                                    "postalCode": "11203",
                                    "county": "Kings County",
                                    "country": "US",
                                    "phoneNumber": null
                                },
                                "shippingAddress": null,
                                "sourceCode": null,
                                "clientIpAddress": "127.0.0.1",
                                "isTestOrder": true,
                                "uid": 0,
                                "isNewAccount": false,
                                "placedByUid": null,
                                "orderSession": {
                                    "utmCode": {
                                        "source": "test source",
                                        "medium": "test medium",
                                        "campaign": "My Test Campaign",
                                        "term": "some term",
                                        "content": "lorem ipsum"
                                    },
                                    "sessionGuid": "2f095a9c-2acb-4eb0-803e-6097b2514116",
                                    "customMetadata": {
                                        "custom field 1": "value1",
                                        "custom field 2": "value2"
                                    }
                                }
                            }
                        }
                    },
                    "x-bodyName": "orderForm"
                },
                "responses": {
                    "201": {
                        "description": "Returns the newly created item",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Fool.Commerce.Dto.OrderConfirmation"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "There were validation errors.<br />\r\n            The user is currently blocked and cannot order.<br />\r\n            The payment was declined by the payment processor.<br />\r\n            The user already has access to product.<br />\r\n            The order appeared to be a duplicate.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "The user has already received a trial for this product.<br />\r\n            The user seems to already be participating in this trial.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "The order requested was not found.<br />\r\n            The promotion requested was not found.<br />\r\n            The promotion requested is not active.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                }
                            }
                        }
                    },
                    "410": {
                        "description": "The promotion requested should redirect.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/orders/payment-method": {
            "post": {
                "tags": [
                    "Order"
                ],
                "summary": "Create an order with a payment method ID (Fool Pass)",
                "operationId": "AcceptPaymentMethodOrder",
                "requestBody": {
                    "content": {
                        "application/json-patch+json": {
                            "schema": {
                                "$ref": "#/components/schemas/Fool.Commerce.Dto.PaymentMethodOrderForm"
                            },
                            "example": {
                                "paymentMethod": {
                                    "paymentMethodId": ""
                                },
                                "promotionCode": "3b71eec5-0449-46df-9109-a55d480f5bd3",
                                "selectedOfferId": 21203,
                                "isoAlpha2CountryCode": "US",
                                "firstName": "Jill",
                                "lastName": "Doe_637749922417138710",
                                "phoneNumber": null,
                                "billingAddress": {
                                    "firstName": "Jill",
                                    "lastName": "Doe",
                                    "address1": "8648 Acacia Rd",
                                    "address2": null,
                                    "city": "Brooklyn",
                                    "state": "NY",
                                    "postalCode": "11203",
                                    "county": "Kings County",
                                    "country": "US",
                                    "phoneNumber": null
                                },
                                "shippingAddress": null,
                                "sourceCode": null,
                                "clientIpAddress": "127.0.0.1",
                                "isTestOrder": true,
                                "uid": 0,
                                "isNewAccount": false,
                                "placedByUid": null,
                                "orderSession": {
                                    "utmCode": {
                                        "source": "test source",
                                        "medium": "test medium",
                                        "campaign": "My Test Campaign",
                                        "term": "some term",
                                        "content": "lorem ipsum"
                                    },
                                    "sessionGuid": "5ead34ad-1343-42b7-9b64-e79e14cedf4a",
                                    "customMetadata": {
                                        "custom field 1": "value1",
                                        "custom field 2": "value2"
                                    }
                                }
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Fool.Commerce.Dto.PaymentMethodOrderForm"
                            },
                            "example": {
                                "paymentMethod": {
                                    "paymentMethodId": ""
                                },
                                "promotionCode": "3b71eec5-0449-46df-9109-a55d480f5bd3",
                                "selectedOfferId": 21203,
                                "isoAlpha2CountryCode": "US",
                                "firstName": "Jill",
                                "lastName": "Doe_637749922417138710",
                                "phoneNumber": null,
                                "billingAddress": {
                                    "firstName": "Jill",
                                    "lastName": "Doe",
                                    "address1": "8648 Acacia Rd",
                                    "address2": null,
                                    "city": "Brooklyn",
                                    "state": "NY",
                                    "postalCode": "11203",
                                    "county": "Kings County",
                                    "country": "US",
                                    "phoneNumber": null
                                },
                                "shippingAddress": null,
                                "sourceCode": null,
                                "clientIpAddress": "127.0.0.1",
                                "isTestOrder": true,
                                "uid": 0,
                                "isNewAccount": false,
                                "placedByUid": null,
                                "orderSession": {
                                    "utmCode": {
                                        "source": "test source",
                                        "medium": "test medium",
                                        "campaign": "My Test Campaign",
                                        "term": "some term",
                                        "content": "lorem ipsum"
                                    },
                                    "sessionGuid": "5ead34ad-1343-42b7-9b64-e79e14cedf4a",
                                    "customMetadata": {
                                        "custom field 1": "value1",
                                        "custom field 2": "value2"
                                    }
                                }
                            }
                        },
                        "text/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Fool.Commerce.Dto.PaymentMethodOrderForm"
                            },
                            "example": {
                                "paymentMethod": {
                                    "paymentMethodId": ""
                                },
                                "promotionCode": "3b71eec5-0449-46df-9109-a55d480f5bd3",
                                "selectedOfferId": 21203,
                                "isoAlpha2CountryCode": "US",
                                "firstName": "Jill",
                                "lastName": "Doe_637749922417138710",
                                "phoneNumber": null,
                                "billingAddress": {
                                    "firstName": "Jill",
                                    "lastName": "Doe",
                                    "address1": "8648 Acacia Rd",
                                    "address2": null,
                                    "city": "Brooklyn",
                                    "state": "NY",
                                    "postalCode": "11203",
                                    "county": "Kings County",
                                    "country": "US",
                                    "phoneNumber": null
                                },
                                "shippingAddress": null,
                                "sourceCode": null,
                                "clientIpAddress": "127.0.0.1",
                                "isTestOrder": true,
                                "uid": 0,
                                "isNewAccount": false,
                                "placedByUid": null,
                                "orderSession": {
                                    "utmCode": {
                                        "source": "test source",
                                        "medium": "test medium",
                                        "campaign": "My Test Campaign",
                                        "term": "some term",
                                        "content": "lorem ipsum"
                                    },
                                    "sessionGuid": "5ead34ad-1343-42b7-9b64-e79e14cedf4a",
                                    "customMetadata": {
                                        "custom field 1": "value1",
                                        "custom field 2": "value2"
                                    }
                                }
                            }
                        },
                        "application/*+json": {
                            "schema": {
                                "$ref": "#/components/schemas/Fool.Commerce.Dto.PaymentMethodOrderForm"
                            },
                            "example": {
                                "paymentMethod": {
                                    "paymentMethodId": ""
                                },
                                "promotionCode": "3b71eec5-0449-46df-9109-a55d480f5bd3",
                                "selectedOfferId": 21203,
                                "isoAlpha2CountryCode": "US",
                                "firstName": "Jill",
                                "lastName": "Doe_637749922417138710",
                                "phoneNumber": null,
                                "billingAddress": {
                                    "firstName": "Jill",
                                    "lastName": "Doe",
                                    "address1": "8648 Acacia Rd",
                                    "address2": null,
                                    "city": "Brooklyn",
                                    "state": "NY",
                                    "postalCode": "11203",
                                    "county": "Kings County",
                                    "country": "US",
                                    "phoneNumber": null
                                },
                                "shippingAddress": null,
                                "sourceCode": null,
                                "clientIpAddress": "127.0.0.1",
                                "isTestOrder": true,
                                "uid": 0,
                                "isNewAccount": false,
                                "placedByUid": null,
                                "orderSession": {
                                    "utmCode": {
                                        "source": "test source",
                                        "medium": "test medium",
                                        "campaign": "My Test Campaign",
                                        "term": "some term",
                                        "content": "lorem ipsum"
                                    },
                                    "sessionGuid": "5ead34ad-1343-42b7-9b64-e79e14cedf4a",
                                    "customMetadata": {
                                        "custom field 1": "value1",
                                        "custom field 2": "value2"
                                    }
                                }
                            }
                        }
                    },
                    "x-bodyName": "orderForm"
                },
                "responses": {
                    "201": {
                        "description": "Returns the newly created item",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Fool.Commerce.Dto.OrderConfirmation"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "There were validation errors.<br />\r\n            The user is currently blocked and cannot order.<br />\r\n            The payment was declined by the payment processor.<br />\r\n            The user already has access to product.<br />\r\n            The order appeared to be a duplicate.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "The user has already received a trial for this product.<br />\r\n            The user seems to already be participating in this trial.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "The order requested was not found.<br />\r\n            The promotion requested was not found.<br />\r\n            The promotion requested is not active.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                }
                            }
                        }
                    },
                    "410": {
                        "description": "The promotion requested should redirect.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/orders/comp": {
            "post": {
                "tags": [
                    "Order"
                ],
                "summary": "Create a Comp Order (no Payment Method associated)",
                "operationId": "AcceptCompOrder",
                "requestBody": {
                    "content": {
                        "application/json-patch+json": {
                            "schema": {
                                "$ref": "#/components/schemas/Fool.Commerce.Dto.CompOrderForm"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Fool.Commerce.Dto.CompOrderForm"
                            }
                        },
                        "text/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Fool.Commerce.Dto.CompOrderForm"
                            }
                        },
                        "application/*+json": {
                            "schema": {
                                "$ref": "#/components/schemas/Fool.Commerce.Dto.CompOrderForm"
                            }
                        }
                    },
                    "x-bodyName": "orderForm"
                },
                "responses": {
                    "201": {
                        "description": "Returns the newly created item",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Fool.Commerce.Dto.OrderConfirmation"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "There were validation errors.<br />\r\n            The user is currently blocked and cannot order.<br />\r\n            The payment was declined by the payment processor.<br />\r\n            The user already has access to product.<br />\r\n            The order appeared to be a duplicate.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "The user has already received a trial for this product.<br />\r\n            The user seems to already be participating in this trial.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "The order requested was not found.<br />\r\n            The promotion requested was not found.<br />\r\n            The promotion requested is not active.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                }
                            }
                        }
                    },
                    "410": {
                        "description": "The promotion requested should redirect.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/orders/{orderId}": {
            "get": {
                "tags": [
                    "Order"
                ],
                "summary": "",
                "operationId": "GetOrderById",
                "parameters": [
                    {
                        "name": "orderId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Fool.Commerce.Dto.Order"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "The order requested was not found.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/orders/{orderId}/update-publish-receipt-detail": {
            "post": {
                "tags": [
                    "Order"
                ],
                "summary": "",
                "operationId": "UpdateAndPublishOrderReceiptDetail",
                "parameters": [
                    {
                        "name": "orderId",
                        "in": "path",
                        "description": "",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "updateOrderReceiptIfExists",
                        "in": "query",
                        "description": "",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "publishOrderReceiptGeneratedMessage",
                        "in": "query",
                        "description": "",
                        "schema": {
                            "type": "boolean"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Fool.Commerce.Dto.OrderReceipt"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/orders/receipt/{orderId}": {
            "get": {
                "tags": [
                    "Order"
                ],
                "operationId": "GetOrderReceiptByOrderId",
                "parameters": [
                    {
                        "name": "orderId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Fool.Commerce.Dto.OrderReceipt"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "The order receipt requested was not found.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/orders/fraud-risk-details": {
            "get": {
                "tags": [
                    "Order"
                ],
                "summary": "Returns list of users highlighted as potential fraud risk within a specified date range, along with NumberOfOrders placed.\r\nNote: Potential fraud risk is defined as attempting orders with at least 3 different payment methods within a specified number of hours.",
                "operationId": "GetFraudRiskOrderDetails",
                "parameters": [
                    {
                        "name": "reportDate",
                        "in": "query",
                        "description": "Data type is DATE, not DATETIME.",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        }
                    },
                    {
                        "name": "minPaymentMethods",
                        "in": "query",
                        "description": "Must be greater than or equal to 3.",
                        "schema": {
                            "type": "integer",
                            "format": "int32",
                            "default": 4
                        }
                    },
                    {
                        "name": "subsequentPaymentMinutes",
                        "in": "query",
                        "description": "Must be less than 1440 (one day).",
                        "schema": {
                            "type": "integer",
                            "format": "int32",
                            "default": 360
                        }
                    },
                    {
                        "name": "uid",
                        "in": "query",
                        "description": "",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "email",
                        "in": "query",
                        "description": "",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Fool.Commerce.Dto.FraudRiskOrderDetail"
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "The order requested was not found.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/users/{uid}/payment-methods": {
            "get": {
                "tags": [
                    "PaymentMethods"
                ],
                "summary": "Same as GetPaymentMethodsForAccount.",
                "operationId": "GetPaymentMethodsForUser",
                "parameters": [
                    {
                        "name": "uid",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "paymentMethods",
                        "in": "query",
                        "schema": {
                            "enum": [
                                "CreditCard",
                                "ElectronicCheck",
                                "ApplePay",
                                "Any"
                            ],
                            "type": "string",
                            "default": "Any"
                        }
                    },
                    {
                        "name": "countryCode",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Fool.Commerce.Dto.PaymentMethod"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/accounts/{uid}/payment-methods": {
            "get": {
                "tags": [
                    "PaymentMethods"
                ],
                "summary": "Gets a list of all payment methods on file for a given account, or optionally filters\r\nby payment type (credit card or electronic check).",
                "operationId": "GetPaymentMethodsForAccount",
                "parameters": [
                    {
                        "name": "uid",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "paymentMethods",
                        "in": "query",
                        "schema": {
                            "enum": [
                                "CreditCard",
                                "ElectronicCheck",
                                "ApplePay",
                                "Any"
                            ],
                            "type": "string",
                            "default": "Any"
                        }
                    },
                    {
                        "name": "countryCode",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Fool.Commerce.Dto.PaymentMethod"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/payment-methods/credit-cards/{id}": {
            "get": {
                "tags": [
                    "PaymentMethods"
                ],
                "summary": "Look up a credit card by primary key.",
                "operationId": "GetCreditCardById",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Fool.Commerce.Dto.CreditCard"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Credit card not found.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/payment-methods/{id}": {
            "get": {
                "tags": [
                    "PaymentMethods"
                ],
                "summary": "Look up a generic payment method by primary key.",
                "operationId": "GetPaymentMethodById",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Fool.Commerce.Dto.PaymentMethod"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Payment method not found.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/accounts/{uid}/payment-methods/credit-card": {
            "post": {
                "tags": [
                    "PaymentMethods"
                ],
                "summary": "Save or update a credit card for a given account.",
                "operationId": "AddOrUpdateCreditCard",
                "parameters": [
                    {
                        "name": "uid",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Fool.Commerce.Dto.CreditCardForm"
                            }
                        }
                    },
                    "x-bodyName": "creditCard"
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Fool.Commerce.Dto.CreditCard"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "There were validation errors.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/users/{uid}/payment-methods/credit-card": {
            "post": {
                "tags": [
                    "PaymentMethods"
                ],
                "summary": "Save or update a credit card for a given account.",
                "operationId": "AddOrUpdateCreditCardForAccount",
                "parameters": [
                    {
                        "name": "uid",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json-patch+json": {
                            "schema": {
                                "$ref": "#/components/schemas/Fool.Commerce.Dto.CreditCardForm"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Fool.Commerce.Dto.CreditCardForm"
                            }
                        },
                        "text/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Fool.Commerce.Dto.CreditCardForm"
                            }
                        },
                        "application/*+json": {
                            "schema": {
                                "$ref": "#/components/schemas/Fool.Commerce.Dto.CreditCardForm"
                            }
                        }
                    },
                    "x-bodyName": "creditCard"
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Fool.Commerce.Dto.CreditCard"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "There were validation errors.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/accounts/{uid}/payment-methods/credit-card-metadata": {
            "post": {
                "tags": [
                    "PaymentMethods"
                ],
                "summary": "Update default credit card metadata (everything but the number).",
                "operationId": "UpdateDefaultCreditCardMetadata",
                "parameters": [
                    {
                        "name": "uid",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json-patch+json": {
                            "schema": {
                                "$ref": "#/components/schemas/Fool.Commerce.Dto.CreditCardMetadataForm"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Fool.Commerce.Dto.CreditCardMetadataForm"
                            }
                        },
                        "text/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Fool.Commerce.Dto.CreditCardMetadataForm"
                            }
                        },
                        "application/*+json": {
                            "schema": {
                                "$ref": "#/components/schemas/Fool.Commerce.Dto.CreditCardMetadataForm"
                            }
                        }
                    },
                    "x-bodyName": "creditCard"
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Fool.Commerce.Dto.CreditCard"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "There were validation errors.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/products/subscriptions/{countryCode}": {
            "get": {
                "tags": [
                    "Product"
                ],
                "summary": "Get Active Subscription Products",
                "operationId": "GetSubscriptionProducts",
                "parameters": [
                    {
                        "name": "countryCode",
                        "in": "path",
                        "description": "",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Fool.Commerce.Dto.SubscriptionProductDescription"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/products/subscriptions/{id}": {
            "get": {
                "tags": [
                    "Product"
                ],
                "summary": "Get Subscription Product",
                "operationId": "GetSubscriptionProduct",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Fool.Commerce.Dto.SubscriptionProductDescription"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Product not found exception.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "Product"
                ],
                "summary": "Update Subscription Product",
                "operationId": "UpdateSubscriptionProduct",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "requestBody": {
                    "description": "",
                    "content": {
                        "application/json-patch+json": {
                            "schema": {
                                "$ref": "#/components/schemas/Fool.Commerce.Dto.UpdateSubscriptionProductForm"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Fool.Commerce.Dto.UpdateSubscriptionProductForm"
                            }
                        },
                        "text/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Fool.Commerce.Dto.UpdateSubscriptionProductForm"
                            }
                        },
                        "application/*+json": {
                            "schema": {
                                "$ref": "#/components/schemas/Fool.Commerce.Dto.UpdateSubscriptionProductForm"
                            }
                        }
                    },
                    "x-bodyName": "form"
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Fool.Commerce.Dto.SubscriptionProductDescription"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "There were validation errors.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Product not found exception.<br />\r\n            Time Period not found.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/products/subscriptions": {
            "get": {
                "tags": [
                    "Product"
                ],
                "summary": "List Subscription Products matching filter criteria.",
                "operationId": "ListSubscriptionProducts",
                "parameters": [
                    {
                        "name": "name",
                        "in": "query",
                        "description": "Optionally filter on product name contains value.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Optionally limit number of results.",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "Optionally skip number of results.",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Fool.Commerce.Dto.Helpers.PaginationResults`1[[Fool.Commerce.Dto.SubscriptionProductDescription, Fool.Commerce, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Product"
                ],
                "summary": "Create Subscription Product",
                "operationId": "CreateSubscriptionProduct",
                "requestBody": {
                    "description": "",
                    "content": {
                        "application/json-patch+json": {
                            "schema": {
                                "$ref": "#/components/schemas/Fool.Commerce.Dto.CreateSubscriptionProductForm"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Fool.Commerce.Dto.CreateSubscriptionProductForm"
                            }
                        },
                        "text/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Fool.Commerce.Dto.CreateSubscriptionProductForm"
                            }
                        },
                        "application/*+json": {
                            "schema": {
                                "$ref": "#/components/schemas/Fool.Commerce.Dto.CreateSubscriptionProductForm"
                            }
                        }
                    },
                    "x-bodyName": "form"
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Fool.Commerce.Dto.SubscriptionProductDescription"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "There were validation errors.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Time Period not found.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/products/single-items/{id}": {
            "get": {
                "tags": [
                    "Product"
                ],
                "summary": "Get SingleItem Product",
                "operationId": "GetSingleItemProduct",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Fool.Commerce.Dto.SingleItemProductDescription"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Product not found exception.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "Product"
                ],
                "summary": "Update SingleItem Product",
                "operationId": "UpdateSingleItemProduct",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "requestBody": {
                    "description": "",
                    "content": {
                        "application/json-patch+json": {
                            "schema": {
                                "$ref": "#/components/schemas/Fool.Commerce.Dto.UpdateSingleItemProductForm"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Fool.Commerce.Dto.UpdateSingleItemProductForm"
                            }
                        },
                        "text/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Fool.Commerce.Dto.UpdateSingleItemProductForm"
                            }
                        },
                        "application/*+json": {
                            "schema": {
                                "$ref": "#/components/schemas/Fool.Commerce.Dto.UpdateSingleItemProductForm"
                            }
                        }
                    },
                    "x-bodyName": "form"
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Fool.Commerce.Dto.SingleItemProductDescription"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "There were validation errors.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Product not found exception.<br />\r\n            Time Period not found.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/products/single-items": {
            "get": {
                "tags": [
                    "Product"
                ],
                "summary": "List Products matching filter criteria.",
                "operationId": "ListSingleItemProducts",
                "parameters": [
                    {
                        "name": "name",
                        "in": "query",
                        "description": "Optionally filter on product name contains value.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Optionally limit number of results.",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "Optionally skip number of results.",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Fool.Commerce.Dto.Helpers.PaginationResults`1[[Fool.Commerce.Dto.SingleItemProductDescription, Fool.Commerce, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Product"
                ],
                "summary": "Create Single Item Product",
                "operationId": "CreateSingleItemProduct",
                "requestBody": {
                    "description": "",
                    "content": {
                        "application/json-patch+json": {
                            "schema": {
                                "$ref": "#/components/schemas/Fool.Commerce.Dto.CreateSingleItemProductForm"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Fool.Commerce.Dto.CreateSingleItemProductForm"
                            }
                        },
                        "text/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Fool.Commerce.Dto.CreateSingleItemProductForm"
                            }
                        },
                        "application/*+json": {
                            "schema": {
                                "$ref": "#/components/schemas/Fool.Commerce.Dto.CreateSingleItemProductForm"
                            }
                        }
                    },
                    "x-bodyName": "form"
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Fool.Commerce.Dto.SingleItemProductDescription"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "There were validation errors.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Time Period not found.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/products/subscriptions/{productId}/terms": {
            "post": {
                "tags": [
                    "Product"
                ],
                "summary": "Create Subscription Product Term",
                "operationId": "CreateSubscriptionProductTerm",
                "parameters": [
                    {
                        "name": "productId",
                        "in": "path",
                        "description": "",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "requestBody": {
                    "description": "",
                    "content": {
                        "application/json-patch+json": {
                            "schema": {
                                "$ref": "#/components/schemas/Fool.Commerce.Dto.CreateSubscriptionProductTermForm"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Fool.Commerce.Dto.CreateSubscriptionProductTermForm"
                            }
                        },
                        "text/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Fool.Commerce.Dto.CreateSubscriptionProductTermForm"
                            }
                        },
                        "application/*+json": {
                            "schema": {
                                "$ref": "#/components/schemas/Fool.Commerce.Dto.CreateSubscriptionProductTermForm"
                            }
                        }
                    },
                    "x-bodyName": "form"
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Fool.Commerce.Dto.SubscriptionProductOffer"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "There were validation errors.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Time Period not found.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "The term already exists for this product.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/products/subscriptions/{productId}/update-level": {
            "patch": {
                "tags": [
                    "Product"
                ],
                "operationId": "UpdateSubscriptionProductLevel",
                "parameters": [
                    {
                        "name": "productId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json-patch+json": {
                            "schema": {
                                "$ref": "#/components/schemas/Fool.Commerce.Dto.UpdateSubscriptionProductLevelForm"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Fool.Commerce.Dto.UpdateSubscriptionProductLevelForm"
                            }
                        },
                        "text/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Fool.Commerce.Dto.UpdateSubscriptionProductLevelForm"
                            }
                        },
                        "application/*+json": {
                            "schema": {
                                "$ref": "#/components/schemas/Fool.Commerce.Dto.UpdateSubscriptionProductLevelForm"
                            }
                        }
                    },
                    "x-bodyName": "form"
                },
                "responses": {
                    "200": {
                        "description": "Success"
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Fool.Commerce.Exceptions.InvalidSubscriptionProductOperationException"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Fool.Commerce.Exceptions.ProductNotFoundException"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/offers": {
            "get": {
                "tags": [
                    "ProductOffer"
                ],
                "summary": "Get Active Product Offers",
                "operationId": "GetActiveProductOffers",
                "parameters": [
                    {
                        "name": "countryCode",
                        "in": "query",
                        "description": "",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "productOfferType",
                        "in": "query",
                        "description": "",
                        "schema": {
                            "enum": [
                                "SingleItem",
                                "Subscription",
                                "Any"
                            ],
                            "type": "string",
                            "default": "Any"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Fool.Commerce.Dto.ProductOffer"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/offers/premiums": {
            "get": {
                "tags": [
                    "ProductOffer"
                ],
                "summary": "Get Active Premiums",
                "operationId": "GetActivePremiums",
                "parameters": [
                    {
                        "name": "countryCode",
                        "in": "query",
                        "description": "",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Fool.Commerce.Dto.ProductOffer"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/promotions/{promotionCode}": {
            "get": {
                "tags": [
                    "Promotion"
                ],
                "summary": "Get Promotion By Code",
                "operationId": "GetPromotionByCode",
                "parameters": [
                    {
                        "name": "promotionCode",
                        "in": "path",
                        "description": "",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "countryCode",
                        "in": "query",
                        "description": "",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Fool.Commerce.Dto.Promotion"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "The promotion requested was not found.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/promotions": {
            "get": {
                "tags": [
                    "Promotion"
                ],
                "summary": "List Promotions matching filter criteria.",
                "operationId": "ListPromotions",
                "parameters": [
                    {
                        "name": "name",
                        "in": "query",
                        "description": "Optionally filter on promotion name contains value.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Optionally limit number of results.",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "Optionally skip number of results.",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Fool.Commerce.Dto.Helpers.PaginationResults`1[[Fool.Commerce.Dto.Promotion, Fool.Commerce, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Promotion"
                ],
                "summary": "Create Promotion V1 ** General use Create Promotion call, currently used by admin-ui **",
                "operationId": "CreatePromotion",
                "requestBody": {
                    "description": "",
                    "content": {
                        "application/json-patch+json": {
                            "schema": {
                                "$ref": "#/components/schemas/Fool.Commerce.Dto.CreatePromotionForm"
                            },
                            "example": {
                                "teasedPremiumProductId": 1774,
                                "createdByUid": 89035895,
                                "singleItemOffers": [
                                    {
                                        "productId": 1779,
                                        "offerMarkup": "This is a single item offer!",
                                        "fulfillmentUrl": "https://live.fool.com/",
                                        "isPreselected": true,
                                        "basePrice": 24.99,
                                        "acquisitionPrice": 19.99,
                                        "premiumProductIds": [
                                            1774
                                        ]
                                    }
                                ],
                                "subscriptionOffers": [
                                    {
                                        "trialOfferForm": null,
                                        "subscriptionTimePeriodId": 6,
                                        "moneyBackGuaranteeTimePeriodId": 17,
                                        "swapGuaranteeTimePeriodId": 18,
                                        "renewalRefundTimePeriodId": 15,
                                        "printDelivery": true,
                                        "renewalPrice": 89.0,
                                        "productId": 1081,
                                        "offerMarkup": "This is a straight sale offer!",
                                        "fulfillmentUrl": "https://www.fool.com/services",
                                        "isPreselected": true,
                                        "basePrice": 99.0,
                                        "acquisitionPrice": 75.0,
                                        "premiumProductIds": [
                                            1774
                                        ]
                                    }
                                ],
                                "countryCode": "US",
                                "name": "Promo Create #637749953207988350",
                                "description": "Test promo created 12/13/2021 12:28:40",
                                "endDate": "2022-12-13T12:28:40.798845-07:00",
                                "redirectSettings": {
                                    "redirectCode": null,
                                    "redirectUrl": "https://admin.fool.com/",
                                    "redirectDate": "2021-12-13T12:28:40.798846-07:00"
                                },
                                "campaignId": null,
                                "audienceType": null
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Fool.Commerce.Dto.CreatePromotionForm"
                            },
                            "example": {
                                "teasedPremiumProductId": 1774,
                                "createdByUid": 89035895,
                                "singleItemOffers": [
                                    {
                                        "productId": 1779,
                                        "offerMarkup": "This is a single item offer!",
                                        "fulfillmentUrl": "https://live.fool.com/",
                                        "isPreselected": true,
                                        "basePrice": 24.99,
                                        "acquisitionPrice": 19.99,
                                        "premiumProductIds": [
                                            1774
                                        ]
                                    }
                                ],
                                "subscriptionOffers": [
                                    {
                                        "trialOfferForm": null,
                                        "subscriptionTimePeriodId": 6,
                                        "moneyBackGuaranteeTimePeriodId": 17,
                                        "swapGuaranteeTimePeriodId": 18,
                                        "renewalRefundTimePeriodId": 15,
                                        "printDelivery": true,
                                        "renewalPrice": 89.0,
                                        "productId": 1081,
                                        "offerMarkup": "This is a straight sale offer!",
                                        "fulfillmentUrl": "https://www.fool.com/services",
                                        "isPreselected": true,
                                        "basePrice": 99.0,
                                        "acquisitionPrice": 75.0,
                                        "premiumProductIds": [
                                            1774
                                        ]
                                    }
                                ],
                                "countryCode": "US",
                                "name": "Promo Create #637749953207988350",
                                "description": "Test promo created 12/13/2021 12:28:40",
                                "endDate": "2022-12-13T12:28:40.798845-07:00",
                                "redirectSettings": {
                                    "redirectCode": null,
                                    "redirectUrl": "https://admin.fool.com/",
                                    "redirectDate": "2021-12-13T12:28:40.798846-07:00"
                                },
                                "campaignId": null,
                                "audienceType": null
                            }
                        },
                        "text/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Fool.Commerce.Dto.CreatePromotionForm"
                            },
                            "example": {
                                "teasedPremiumProductId": 1774,
                                "createdByUid": 89035895,
                                "singleItemOffers": [
                                    {
                                        "productId": 1779,
                                        "offerMarkup": "This is a single item offer!",
                                        "fulfillmentUrl": "https://live.fool.com/",
                                        "isPreselected": true,
                                        "basePrice": 24.99,
                                        "acquisitionPrice": 19.99,
                                        "premiumProductIds": [
                                            1774
                                        ]
                                    }
                                ],
                                "subscriptionOffers": [
                                    {
                                        "trialOfferForm": null,
                                        "subscriptionTimePeriodId": 6,
                                        "moneyBackGuaranteeTimePeriodId": 17,
                                        "swapGuaranteeTimePeriodId": 18,
                                        "renewalRefundTimePeriodId": 15,
                                        "printDelivery": true,
                                        "renewalPrice": 89.0,
                                        "productId": 1081,
                                        "offerMarkup": "This is a straight sale offer!",
                                        "fulfillmentUrl": "https://www.fool.com/services",
                                        "isPreselected": true,
                                        "basePrice": 99.0,
                                        "acquisitionPrice": 75.0,
                                        "premiumProductIds": [
                                            1774
                                        ]
                                    }
                                ],
                                "countryCode": "US",
                                "name": "Promo Create #637749953207988350",
                                "description": "Test promo created 12/13/2021 12:28:40",
                                "endDate": "2022-12-13T12:28:40.798845-07:00",
                                "redirectSettings": {
                                    "redirectCode": null,
                                    "redirectUrl": "https://admin.fool.com/",
                                    "redirectDate": "2021-12-13T12:28:40.798846-07:00"
                                },
                                "campaignId": null,
                                "audienceType": null
                            }
                        },
                        "application/*+json": {
                            "schema": {
                                "$ref": "#/components/schemas/Fool.Commerce.Dto.CreatePromotionForm"
                            },
                            "example": {
                                "teasedPremiumProductId": 1774,
                                "createdByUid": 89035895,
                                "singleItemOffers": [
                                    {
                                        "productId": 1779,
                                        "offerMarkup": "This is a single item offer!",
                                        "fulfillmentUrl": "https://live.fool.com/",
                                        "isPreselected": true,
                                        "basePrice": 24.99,
                                        "acquisitionPrice": 19.99,
                                        "premiumProductIds": [
                                            1774
                                        ]
                                    }
                                ],
                                "subscriptionOffers": [
                                    {
                                        "trialOfferForm": null,
                                        "subscriptionTimePeriodId": 6,
                                        "moneyBackGuaranteeTimePeriodId": 17,
                                        "swapGuaranteeTimePeriodId": 18,
                                        "renewalRefundTimePeriodId": 15,
                                        "printDelivery": true,
                                        "renewalPrice": 89.0,
                                        "productId": 1081,
                                        "offerMarkup": "This is a straight sale offer!",
                                        "fulfillmentUrl": "https://www.fool.com/services",
                                        "isPreselected": true,
                                        "basePrice": 99.0,
                                        "acquisitionPrice": 75.0,
                                        "premiumProductIds": [
                                            1774
                                        ]
                                    }
                                ],
                                "countryCode": "US",
                                "name": "Promo Create #637749953207988350",
                                "description": "Test promo created 12/13/2021 12:28:40",
                                "endDate": "2022-12-13T12:28:40.798845-07:00",
                                "redirectSettings": {
                                    "redirectCode": null,
                                    "redirectUrl": "https://admin.fool.com/",
                                    "redirectDate": "2021-12-13T12:28:40.798846-07:00"
                                },
                                "campaignId": null,
                                "audienceType": null
                            }
                        }
                    },
                    "x-bodyName": "promotionForm"
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Fool.Commerce.Dto.Promotion"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "There were validation errors.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/promotions/search": {
            "get": {
                "tags": [
                    "Promotion"
                ],
                "summary": "Get a SolrSearchResponse given various query parameters",
                "operationId": "SearchSolrOfferDocuments",
                "parameters": [
                    {
                        "name": "searchQuery",
                        "in": "query",
                        "description": "",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "countryCode",
                        "in": "query",
                        "description": "",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "rows",
                        "in": "query",
                        "description": "",
                        "schema": {
                            "type": "integer",
                            "format": "int32",
                            "default": 50
                        }
                    },
                    {
                        "name": "startRow",
                        "in": "query",
                        "description": "",
                        "schema": {
                            "type": "integer",
                            "format": "int32",
                            "default": 0
                        }
                    },
                    {
                        "name": "activeOnly",
                        "in": "query",
                        "description": "",
                        "schema": {
                            "type": "boolean",
                            "default": true
                        }
                    },
                    {
                        "name": "premiumProductNames",
                        "in": "query",
                        "description": "",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "productName",
                        "in": "query",
                        "description": "",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "subscriptionTerm",
                        "in": "query",
                        "description": "",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "acquisitionPrice",
                        "in": "query",
                        "description": "",
                        "schema": {
                            "type": "number",
                            "format": "double"
                        }
                    },
                    {
                        "name": "campaignId",
                        "in": "query",
                        "description": "",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "audienceTypes",
                        "in": "query",
                        "description": "",
                        "schema": {
                            "type": "array",
                            "items": {
                                "enum": [
                                    "NewMember",
                                    "Retention",
                                    "Acquisition"
                                ],
                                "type": "string"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Fool.Commerce.Dto.SolrSearchResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/promotions/{id}": {
            "get": {
                "tags": [
                    "Promotion"
                ],
                "summary": "Get Promotion",
                "operationId": "GetPromotion",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "countryCode",
                        "in": "query",
                        "description": "",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Fool.Commerce.Dto.Promotion"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "The promotion requested was not found.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "Promotion"
                ],
                "summary": "Update Promotion V1 ** General use Update Promotion call, currently used by admin-ui **",
                "operationId": "UpdatePromotion",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "requestBody": {
                    "description": "",
                    "content": {
                        "application/json-patch+json": {
                            "schema": {
                                "$ref": "#/components/schemas/Fool.Commerce.Dto.UpdatePromotionForm"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Fool.Commerce.Dto.UpdatePromotionForm"
                            }
                        },
                        "text/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Fool.Commerce.Dto.UpdatePromotionForm"
                            }
                        },
                        "application/*+json": {
                            "schema": {
                                "$ref": "#/components/schemas/Fool.Commerce.Dto.UpdatePromotionForm"
                            }
                        }
                    },
                    "x-bodyName": "promotionForm"
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Fool.Commerce.Dto.Promotion"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "There were validation errors.<br />\r\n            Invalid End Date Cannot Update Promotion",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "The promotion requested was not found.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/promotions/{promotionId}/offers/subscription/{offerId}": {
            "put": {
                "tags": [
                    "Promotion"
                ],
                "summary": "Update Subscription Offer (Update Promotion Offer)",
                "operationId": "UpdateSubscriptionOffer",
                "parameters": [
                    {
                        "name": "promotionId",
                        "in": "path",
                        "description": "",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "offerId",
                        "in": "path",
                        "description": "",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "countryCode",
                        "in": "query",
                        "description": "",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "description": "",
                    "content": {
                        "application/json-patch+json": {
                            "schema": {
                                "$ref": "#/components/schemas/Fool.Commerce.Dto.UpdateOfferForm"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Fool.Commerce.Dto.UpdateOfferForm"
                            }
                        },
                        "text/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Fool.Commerce.Dto.UpdateOfferForm"
                            }
                        },
                        "application/*+json": {
                            "schema": {
                                "$ref": "#/components/schemas/Fool.Commerce.Dto.UpdateOfferForm"
                            }
                        }
                    },
                    "x-bodyName": "offerForm"
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Fool.Commerce.Dto.SubscriptionOffer"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "There were validation errors.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Offer not found.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/promotions/{promotionId}/offers/single-item/{offerId}": {
            "put": {
                "tags": [
                    "Promotion"
                ],
                "summary": "Update Single Item Offer (Update Promotion Offer)",
                "operationId": "UpdateSingleItemOffer",
                "parameters": [
                    {
                        "name": "promotionId",
                        "in": "path",
                        "description": "",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "offerId",
                        "in": "path",
                        "description": "",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "countryCode",
                        "in": "query",
                        "description": "",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "description": "",
                    "content": {
                        "application/json-patch+json": {
                            "schema": {
                                "$ref": "#/components/schemas/Fool.Commerce.Dto.UpdateOfferForm"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Fool.Commerce.Dto.UpdateOfferForm"
                            }
                        },
                        "text/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Fool.Commerce.Dto.UpdateOfferForm"
                            }
                        },
                        "application/*+json": {
                            "schema": {
                                "$ref": "#/components/schemas/Fool.Commerce.Dto.UpdateOfferForm"
                            }
                        }
                    },
                    "x-bodyName": "offerForm"
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Fool.Commerce.Dto.Offer"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "There were validation errors.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Offer not found.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/promotions/audience-types": {
            "get": {
                "tags": [
                    "Promotion"
                ],
                "operationId": "GetAudienceTypes",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Fool.Commerce.Dto.AudienceTypeDTO"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/proxy": {
            "post": {
                "tags": [
                    "Proxy"
                ],
                "summary": "Let's do the Proxy!",
                "operationId": "Proxy",
                "requestBody": {
                    "content": {
                        "application/json-patch+json": {
                            "schema": {
                                "type": "string"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "type": "string"
                            }
                        },
                        "text/json": {
                            "schema": {
                                "type": "string"
                            }
                        },
                        "application/*+json": {
                            "schema": {
                                "type": "string"
                            }
                        }
                    },
                    "x-bodyName": "content"
                },
                "responses": {
                    "200": {
                        "description": "Success"
                    }
                }
            }
        },
        "/v1/quotes/{promotionCode}": {
            "get": {
                "tags": [
                    "Quote"
                ],
                "summary": "Returns quote information for a user",
                "operationId": "GetPromotionQuote",
                "parameters": [
                    {
                        "name": "promotionCode",
                        "in": "path",
                        "description": "Promotion code as GUID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "countryCode",
                        "in": "query",
                        "description": "The country code ({\"US\"}) by default.",
                        "schema": {
                            "type": "string",
                            "default": "US"
                        }
                    },
                    {
                        "name": "uid",
                        "in": "query",
                        "description": "User id",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "ignoreRedirect",
                        "in": "query",
                        "description": "If true, ignore any redirect set on this promo",
                        "schema": {
                            "type": "boolean",
                            "default": false
                        }
                    },
                    {
                        "name": "ignoreInactive",
                        "in": "query",
                        "description": "If true and if the promo has passed its end date, show it anyway",
                        "schema": {
                            "type": "boolean",
                            "default": false
                        }
                    },
                    {
                        "name": "performTaxLookup",
                        "in": "query",
                        "description": "",
                        "schema": {
                            "type": "boolean",
                            "default": false
                        }
                    },
                    {
                        "name": "orderType",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "accountId",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Fool.Commerce.Dto.PromotionQuoteDTO"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "The promotion requested was not found.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/quotes": {
            "post": {
                "tags": [
                    "Quote"
                ],
                "summary": "Get Promotion Quote for specific Tax Address",
                "operationId": "RequestPromotionQuoteByTaxAddress",
                "requestBody": {
                    "description": "",
                    "content": {
                        "application/json-patch+json": {
                            "schema": {
                                "$ref": "#/components/schemas/Fool.Commerce.Dto.AddressSpecificQuoteRequest"
                            },
                            "example": {
                                "taxAddress": {
                                    "address1": "8648 Acacia Rd",
                                    "address2": null,
                                    "city": "Brooklyn",
                                    "stateProvince": "NY",
                                    "countryCode": "US",
                                    "postalCode": "11203"
                                },
                                "promotionCode": "3b71eec5-0449-46df-9109-a55d480f5bd3",
                                "countryCode": "US",
                                "uid": null
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Fool.Commerce.Dto.AddressSpecificQuoteRequest"
                            },
                            "example": {
                                "taxAddress": {
                                    "address1": "8648 Acacia Rd",
                                    "address2": null,
                                    "city": "Brooklyn",
                                    "stateProvince": "NY",
                                    "countryCode": "US",
                                    "postalCode": "11203"
                                },
                                "promotionCode": "3b71eec5-0449-46df-9109-a55d480f5bd3",
                                "countryCode": "US",
                                "uid": null
                            }
                        },
                        "text/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Fool.Commerce.Dto.AddressSpecificQuoteRequest"
                            },
                            "example": {
                                "taxAddress": {
                                    "address1": "8648 Acacia Rd",
                                    "address2": null,
                                    "city": "Brooklyn",
                                    "stateProvince": "NY",
                                    "countryCode": "US",
                                    "postalCode": "11203"
                                },
                                "promotionCode": "3b71eec5-0449-46df-9109-a55d480f5bd3",
                                "countryCode": "US",
                                "uid": null
                            }
                        },
                        "application/*+json": {
                            "schema": {
                                "$ref": "#/components/schemas/Fool.Commerce.Dto.AddressSpecificQuoteRequest"
                            },
                            "example": {
                                "taxAddress": {
                                    "address1": "8648 Acacia Rd",
                                    "address2": null,
                                    "city": "Brooklyn",
                                    "stateProvince": "NY",
                                    "countryCode": "US",
                                    "postalCode": "11203"
                                },
                                "promotionCode": "3b71eec5-0449-46df-9109-a55d480f5bd3",
                                "countryCode": "US",
                                "uid": null
                            }
                        }
                    },
                    "x-bodyName": "addressSpecificQuoteRequest"
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Fool.Commerce.Dto.PromotionQuoteDTO"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "There were validation errors.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "The promotion requested was not found.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/refunds/subscription-periods": {
            "post": {
                "tags": [
                    "Refund"
                ],
                "summary": "Refund Subscription Period V1 ** Please use Refund Subscription Period V2 **",
                "operationId": "RefundSubscriptionPeriod",
                "requestBody": {
                    "description": "",
                    "content": {
                        "application/json-patch+json": {
                            "schema": {
                                "$ref": "#/components/schemas/Fool.Commerce.Dto.SubscriptionPeriodRefundForm"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Fool.Commerce.Dto.SubscriptionPeriodRefundForm"
                            }
                        },
                        "text/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Fool.Commerce.Dto.SubscriptionPeriodRefundForm"
                            }
                        },
                        "application/*+json": {
                            "schema": {
                                "$ref": "#/components/schemas/Fool.Commerce.Dto.SubscriptionPeriodRefundForm"
                            }
                        }
                    },
                    "x-bodyName": "form"
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Fool.Commerce.Dto.Refund"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "There were validation errors.<br />\r\n            The refund requested was invalid.<br />\r\n            The payment was declined by the payment processor.<br />\r\n            There was an error with our payment processor",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "The subscription period requested was not found.<br />\r\n            Invoice not found.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/refunds/single-items": {
            "post": {
                "tags": [
                    "Refund"
                ],
                "summary": "Refund Single Item V1 ** Please use Refund Single Item V2 **",
                "operationId": "RefundSingleItem",
                "requestBody": {
                    "description": "",
                    "content": {
                        "application/json-patch+json": {
                            "schema": {
                                "$ref": "#/components/schemas/Fool.Commerce.Dto.SingleItemRefundForm"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Fool.Commerce.Dto.SingleItemRefundForm"
                            }
                        },
                        "text/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Fool.Commerce.Dto.SingleItemRefundForm"
                            }
                        },
                        "application/*+json": {
                            "schema": {
                                "$ref": "#/components/schemas/Fool.Commerce.Dto.SingleItemRefundForm"
                            }
                        }
                    },
                    "x-bodyName": "form"
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Fool.Commerce.Dto.Refund"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "There were validation errors.<br />\r\n            The refund requested was invalid.<br />\r\n            The payment was declined by the payment processor.<br />\r\n            There was an error with our payment processor",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Single Item not found.<br />\r\n            Invoice not found.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/refunds/subscription-rollback": {
            "post": {
                "tags": [
                    "Refund"
                ],
                "summary": "Rolls back and Refunds an Upgraded Subscription",
                "operationId": "RollbackAndRefundSubscriptionUpgrade",
                "requestBody": {
                    "description": "",
                    "content": {
                        "application/json-patch+json": {
                            "schema": {
                                "$ref": "#/components/schemas/Fool.Commerce.Dto.SubscriptionTransferRollbackForm"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Fool.Commerce.Dto.SubscriptionTransferRollbackForm"
                            }
                        },
                        "text/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Fool.Commerce.Dto.SubscriptionTransferRollbackForm"
                            }
                        },
                        "application/*+json": {
                            "schema": {
                                "$ref": "#/components/schemas/Fool.Commerce.Dto.SubscriptionTransferRollbackForm"
                            }
                        }
                    },
                    "x-bodyName": "form"
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Fool.Commerce.Dto.Refund"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "There were validation errors.<br />\r\n            The refund requested was invalid.<br />\r\n            The payment was declined by the payment processor.<br />\r\n            There was an error with our payment processor",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Payment method not found.<br />\r\n            The subscription period requested was not found.<br />\r\n            Invoice not found.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/single-items/{id}": {
            "get": {
                "tags": [
                    "SingleItem"
                ],
                "summary": "Get single item by its ID",
                "operationId": "GetSingleItem",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Fool.Commerce.Dto.SingleItem"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Single Item not found.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/single-items/cancel/{id}": {
            "post": {
                "tags": [
                    "SingleItem"
                ],
                "summary": "Cancel single item given its ID",
                "operationId": "CancelSingleItem",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Fool.Commerce.Dto.SingleItem"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Single item is already inactive.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Single Item not found.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/subscriptions/{id}": {
            "get": {
                "tags": [
                    "Subscription"
                ],
                "summary": "Get subscription by its ID",
                "operationId": "GetSubscription",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Fool.Commerce.Dto.Subscription"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Subscription not found.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/subscriptions/{id}/rollback": {
            "get": {
                "tags": [
                    "Subscription"
                ],
                "summary": "Get a quote for subscription rollback",
                "operationId": "GetSubscriptionTransferRollbackQuote",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Fool.Commerce.Dto.SubscriptionTransferRollbackQuote"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Subscription not found.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/subscriptions/turn-off-auto-rebill": {
            "post": {
                "tags": [
                    "Subscription"
                ],
                "summary": "Turn off autorebill for all subscriptions for a set of UIDs",
                "operationId": "TurnOffAutoRebillForMembers",
                "parameters": [
                    {
                        "name": "adminUid",
                        "in": "query",
                        "description": "",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "requestBody": {
                    "description": "",
                    "content": {
                        "application/json-patch+json": {
                            "schema": {
                                "type": "array",
                                "items": {
                                    "type": "integer",
                                    "format": "int32"
                                }
                            }
                        },
                        "application/json": {
                            "schema": {
                                "type": "array",
                                "items": {
                                    "type": "integer",
                                    "format": "int32"
                                }
                            }
                        },
                        "text/json": {
                            "schema": {
                                "type": "array",
                                "items": {
                                    "type": "integer",
                                    "format": "int32"
                                }
                            }
                        },
                        "application/*+json": {
                            "schema": {
                                "type": "array",
                                "items": {
                                    "type": "integer",
                                    "format": "int32"
                                }
                            }
                        }
                    },
                    "x-bodyName": "uids"
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Fool.Commerce.Dto.Subscription"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/subscriptions/transactions/{subscriptionId}": {
            "get": {
                "tags": [
                    "Subscription"
                ],
                "summary": "Get subscription transaction by subscription ID",
                "operationId": "GetSubscriptionTransaction",
                "parameters": [
                    {
                        "name": "subscriptionId",
                        "in": "path",
                        "description": "",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Fool.Commerce.Dto.SubscriptionTransaction"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/subscriptions/user-subscriptions-for-testing": {
            "get": {
                "tags": [
                    "Subscription"
                ],
                "summary": "Provides a list of subscription id's ready for renewal and user id's to update the credit card info.\r\nThis allows for end-to-end testing by updating the credit card for the subscription.",
                "operationId": "ListSubscriptionIdsForCreditCardTesting",
                "parameters": [
                    {
                        "name": "numberNeeded",
                        "in": "query",
                        "description": "the number you need for immediate testing",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Fool.Commerce.Dto.v2.SubscriptionForTest"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/subscriptions/expire-subscription": {
            "post": {
                "tags": [
                    "Subscription"
                ],
                "summary": "Expire with optional date specified, if specified, must be on or before last active period. Defaults to\r\nexpiration date of last active period.",
                "operationId": "ExpireSubscription",
                "parameters": [
                    {
                        "name": "subscriptionId",
                        "in": "query",
                        "description": "id of the subscription to expire",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "lastActiveDateTime",
                        "in": "query",
                        "description": "date to expire the subscription on",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "integer",
                                    "format": "int32"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "The subscription id was invalid, no subscription was found.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "integer",
                                    "format": "int32"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "The end date was not in a valid range for the last active period.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "integer",
                                    "format": "int32"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/subscriptions/periods/{subscriptionPeriodId}/receipt": {
            "get": {
                "tags": [
                    "Subscription"
                ],
                "operationId": "GetSubscriptionPeriodReceipt",
                "parameters": [
                    {
                        "name": "subscriptionPeriodId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Fool.Commerce.Dto.SubscriptionPeriodReceipt"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "The subscriptionPeriod receipt requested was not found.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/timeperiods/trial": {
            "get": {
                "tags": [
                    "TimePeriod"
                ],
                "summary": "Get Trial Time Periods",
                "operationId": "GetTrialTimePeriods",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Fool.Commerce.Dto.TimePeriod"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/timeperiods/moneybackguarantee": {
            "get": {
                "tags": [
                    "TimePeriod"
                ],
                "summary": "Get Money Back Guarantee Time Periods",
                "operationId": "GetMoneyBackGuaranteeTimePeriods",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Fool.Commerce.Dto.TimePeriod"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/timeperiods/get-or-create": {
            "post": {
                "tags": [
                    "TimePeriod"
                ],
                "summary": "Get a TimePeriod matching the given parameters or create one and return it.",
                "operationId": "GetOrCreateTimePeriod",
                "requestBody": {
                    "description": "",
                    "content": {
                        "application/json-patch+json": {
                            "schema": {
                                "$ref": "#/components/schemas/Fool.Commerce.Dto.TimePeriodForm"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Fool.Commerce.Dto.TimePeriodForm"
                            }
                        },
                        "text/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Fool.Commerce.Dto.TimePeriodForm"
                            }
                        },
                        "application/*+json": {
                            "schema": {
                                "$ref": "#/components/schemas/Fool.Commerce.Dto.TimePeriodForm"
                            }
                        }
                    },
                    "x-bodyName": "form"
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Fool.Commerce.Dto.TimePeriod"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "There were validation errors.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                }
                            }
                        }
                    }
                }
            }
        }
    },
    "components": {
        "schemas": {
            "Fool.Commerce.Dto.Account": {
                "type": "object",
                "properties": {
                    "uid": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "email": {
                        "type": "string",
                        "nullable": true
                    },
                    "billingAddress": {
                        "$ref": "#/components/schemas/Fool.Commerce.Dto.BillingAddress"
                    },
                    "phoneNumber": {
                        "type": "string",
                        "nullable": true
                    },
                    "defaultPaymentMethod": {
                        "$ref": "#/components/schemas/Fool.Commerce.Dto.PaymentMethod"
                    },
                    "allPaymentMethods": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Fool.Commerce.Dto.PaymentMethod"
                        },
                        "nullable": true
                    }
                },
                "additionalProperties": false
            },
            "Fool.Commerce.Dto.AccountSnapshotDTO": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "uid": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "dateJoined": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "paymentMethodType": {
                        "enum": [
                            "CreditCard",
                            "ElectronicCheck",
                            "ApplePay",
                            "Any"
                        ],
                        "type": "string"
                    },
                    "nextRenewalDate": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "nextRenewalAmount": {
                        "type": "number",
                        "format": "double"
                    },
                    "autoRenewEnabled": {
                        "type": "boolean"
                    },
                    "creditCardType": {
                        "type": "string",
                        "nullable": true
                    },
                    "lastFourDigits": {
                        "type": "string",
                        "nullable": true
                    },
                    "firstSixDigits": {
                        "type": "string",
                        "nullable": true
                    },
                    "expirationMonth": {
                        "type": "string",
                        "nullable": true
                    },
                    "expirationYear": {
                        "type": "string",
                        "nullable": true
                    },
                    "expiration": {
                        "type": "string",
                        "nullable": true,
                        "readOnly": true
                    }
                },
                "additionalProperties": false
            },
            "Fool.Commerce.Dto.AddressSpecificQuoteRequest": {
                "required": [
                    "countryCode",
                    "promotionCode",
                    "taxAddress"
                ],
                "type": "object",
                "properties": {
                    "taxAddress": {
                        "$ref": "#/components/schemas/Fool.Commerce.Dto.Taxes.TaxAddress"
                    },
                    "promotionCode": {
                        "type": "string"
                    },
                    "countryCode": {
                        "type": "string"
                    },
                    "uid": {
                        "type": "integer",
                        "format": "int32",
                        "nullable": true
                    }
                },
                "additionalProperties": false
            },
            "Fool.Commerce.Dto.ApplePayForm": {
                "type": "object",
                "properties": {
                    "countryCode": {
                        "type": "string",
                        "nullable": true
                    },
                    "nameOnCard": {
                        "type": "string",
                        "nullable": true
                    },
                    "creditCardType": {
                        "type": "string",
                        "nullable": true
                    },
                    "lastFourDigits": {
                        "type": "string",
                        "nullable": true
                    },
                    "postalCode": {
                        "type": "string",
                        "nullable": true
                    },
                    "pkPaymentToken": {
                        "type": "string",
                        "nullable": true
                    },
                    "expirationMonth": {
                        "type": "integer",
                        "format": "int32",
                        "nullable": true
                    },
                    "expirationYear": {
                        "type": "integer",
                        "format": "int32",
                        "nullable": true
                    }
                },
                "additionalProperties": false
            },
            "Fool.Commerce.Dto.ApplePayOrderForm": {
                "required": [
                    "applePay",
                    "confirmEmail",
                    "email",
                    "isoAlpha2CountryCode",
                    "promotionCode",
                    "selectedOfferId"
                ],
                "type": "object",
                "properties": {
                    "applePay": {
                        "$ref": "#/components/schemas/Fool.Commerce.Dto.ApplePayForm"
                    },
                    "email": {
                        "type": "string"
                    },
                    "confirmEmail": {
                        "type": "string"
                    },
                    "promotionCode": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "selectedOfferId": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "isoAlpha2CountryCode": {
                        "type": "string"
                    },
                    "firstName": {
                        "type": "string",
                        "nullable": true
                    },
                    "lastName": {
                        "type": "string",
                        "nullable": true
                    },
                    "phoneNumber": {
                        "type": "string",
                        "nullable": true
                    },
                    "billingAddress": {
                        "$ref": "#/components/schemas/Fool.Commerce.Dto.PostalAddressForm"
                    },
                    "shippingAddress": {
                        "$ref": "#/components/schemas/Fool.Commerce.Dto.PostalAddressForm"
                    },
                    "sourceCode": {
                        "type": "string",
                        "nullable": true
                    },
                    "clientIpAddress": {
                        "type": "string",
                        "nullable": true
                    },
                    "isTestOrder": {
                        "type": "boolean"
                    },
                    "uid": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "isNewAccount": {
                        "type": "boolean"
                    },
                    "placedByUid": {
                        "type": "integer",
                        "format": "int32",
                        "nullable": true
                    },
                    "orderSession": {
                        "$ref": "#/components/schemas/Fool.Commerce.Dto.Tracking.OrderSession"
                    }
                },
                "additionalProperties": false
            },
            "Fool.Commerce.Dto.AudienceTypeDTO": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "name": {
                        "type": "string",
                        "nullable": true
                    }
                },
                "additionalProperties": false
            },
            "Fool.Commerce.Dto.BillingActivityDTO": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "uid": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "subscriptionId": {
                        "type": "integer",
                        "format": "int32",
                        "nullable": true
                    },
                    "comment": {
                        "type": "string",
                        "nullable": true
                    },
                    "accountAction": {
                        "enum": [
                            "CardAdded",
                            "CardUpdated",
                            "CardDeleted",
                            "BillingAddressAdded",
                            "BillingAddressUpdated",
                            "BillingAddressDeleted",
                            "AccountChargeSucceeded",
                            "AccountChargeFailed",
                            "AccountRefundSucceeded",
                            "AccountRefundFailure",
                            "SubscriptionExpired",
                            "SubscriptionRenewed",
                            "SubscriptionPutInGrace",
                            "SubscriptionCancelled",
                            "RenewalNoticeSent",
                            "VoidSucceeded",
                            "VoidFailed"
                        ],
                        "type": "string"
                    },
                    "actionBy": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "dateOccured": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "accountSnapshot": {
                        "$ref": "#/components/schemas/Fool.Commerce.Dto.AccountSnapshotDTO"
                    }
                },
                "additionalProperties": false
            },
            "Fool.Commerce.Dto.BillingAddress": {
                "type": "object",
                "properties": {
                    "firstName": {
                        "type": "string",
                        "nullable": true
                    },
                    "lastName": {
                        "type": "string",
                        "nullable": true
                    },
                    "address1": {
                        "type": "string",
                        "nullable": true
                    },
                    "address2": {
                        "type": "string",
                        "nullable": true
                    },
                    "city": {
                        "type": "string",
                        "nullable": true
                    },
                    "county": {
                        "type": "string",
                        "nullable": true
                    },
                    "state": {
                        "type": "string",
                        "nullable": true
                    },
                    "postalCode": {
                        "type": "string",
                        "nullable": true
                    },
                    "country": {
                        "type": "string",
                        "nullable": true
                    }
                },
                "additionalProperties": false
            },
            "Fool.Commerce.Dto.BillingPhoneNumber": {
                "type": "object",
                "properties": {
                    "phoneNumber": {
                        "type": "string",
                        "nullable": true
                    }
                },
                "additionalProperties": false
            },
            "Fool.Commerce.Dto.BulkUserDiscountForm": {
                "required": [
                    "uidDiscountForms"
                ],
                "type": "object",
                "properties": {
                    "uidDiscountForms": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Fool.Commerce.Dto.UidValueDiscountForm"
                        }
                    }
                },
                "additionalProperties": false
            },
            "Fool.Commerce.Dto.CancellationDetails": {
                "type": "object",
                "properties": {
                    "date": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "reasonForCancelling": {
                        "$ref": "#/components/schemas/Fool.Commerce.Dto.ReasonForCancelling"
                    },
                    "notes": {
                        "type": "string",
                        "nullable": true
                    }
                },
                "additionalProperties": false
            },
            "Fool.Commerce.Dto.ChangeLog": {
                "type": "object",
                "properties": {
                    "adminUid": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "adminName": {
                        "type": "string",
                        "nullable": true
                    },
                    "uid": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "changeType": {
                        "$ref": "#/components/schemas/Fool.Commerce.Dto.ChangeType"
                    },
                    "dateAdded": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "comment": {
                        "type": "string",
                        "nullable": true
                    },
                    "detail": {
                        "type": "string",
                        "nullable": true
                    },
                    "subscriptionId": {
                        "type": "integer",
                        "format": "int32",
                        "nullable": true
                    },
                    "productItemId": {
                        "type": "integer",
                        "format": "int32",
                        "nullable": true
                    }
                },
                "additionalProperties": false
            },
            "Fool.Commerce.Dto.ChangeType": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "format": "int32",
                        "nullable": true
                    },
                    "description": {
                        "type": "string",
                        "nullable": true
                    }
                },
                "additionalProperties": false
            },
            "Fool.Commerce.Dto.CompOrderForm": {
                "required": [
                    "confirmEmail",
                    "email",
                    "isoAlpha2CountryCode",
                    "promotionCode",
                    "selectedOfferId"
                ],
                "type": "object",
                "properties": {
                    "email": {
                        "type": "string"
                    },
                    "confirmEmail": {
                        "type": "string"
                    },
                    "promotionCode": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "selectedOfferId": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "isoAlpha2CountryCode": {
                        "type": "string"
                    },
                    "firstName": {
                        "type": "string",
                        "nullable": true
                    },
                    "lastName": {
                        "type": "string",
                        "nullable": true
                    },
                    "phoneNumber": {
                        "type": "string",
                        "nullable": true
                    },
                    "billingAddress": {
                        "$ref": "#/components/schemas/Fool.Commerce.Dto.PostalAddressForm"
                    },
                    "shippingAddress": {
                        "$ref": "#/components/schemas/Fool.Commerce.Dto.PostalAddressForm"
                    },
                    "sourceCode": {
                        "type": "string",
                        "nullable": true
                    },
                    "clientIpAddress": {
                        "type": "string",
                        "nullable": true
                    },
                    "isTestOrder": {
                        "type": "boolean"
                    },
                    "uid": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "isNewAccount": {
                        "type": "boolean"
                    },
                    "placedByUid": {
                        "type": "integer",
                        "format": "int32",
                        "nullable": true
                    },
                    "orderSession": {
                        "$ref": "#/components/schemas/Fool.Commerce.Dto.Tracking.OrderSession"
                    }
                },
                "additionalProperties": false
            },
            "Fool.Commerce.Dto.CreateDiscountForm": {
                "type": "object",
                "properties": {
                    "productIds": {
                        "type": "array",
                        "items": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "nullable": true
                    },
                    "name": {
                        "type": "string",
                        "nullable": true
                    },
                    "expirationDate": {
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "additionalProperties": false
            },
            "Fool.Commerce.Dto.CreatePromotionForm": {
                "type": "object",
                "properties": {
                    "teasedPremiumProductId": {
                        "type": "integer",
                        "format": "int32",
                        "nullable": true
                    },
                    "createdByUid": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "singleItemOffers": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Fool.Commerce.Dto.SingleItemOfferForm"
                        },
                        "nullable": true
                    },
                    "subscriptionOffers": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Fool.Commerce.Dto.SubscriptionOfferForm"
                        },
                        "nullable": true
                    },
                    "countryCode": {
                        "type": "string",
                        "nullable": true
                    },
                    "name": {
                        "type": "string",
                        "nullable": true
                    },
                    "description": {
                        "type": "string",
                        "nullable": true
                    },
                    "endDate": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true
                    },
                    "redirectSettings": {
                        "$ref": "#/components/schemas/Fool.Commerce.Dto.RedirectSettings"
                    },
                    "campaignId": {
                        "type": "integer",
                        "format": "int32",
                        "nullable": true
                    },
                    "audienceType": {
                        "enum": [
                            "NewMember",
                            "Retention",
                            "Acquisition"
                        ],
                        "type": "string",
                        "nullable": true
                    }
                },
                "additionalProperties": false
            },
            "Fool.Commerce.Dto.CreateSingleItemProductForm": {
                "type": "object",
                "properties": {
                    "countryCode": {
                        "type": "string",
                        "nullable": true
                    },
                    "introductionDate": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "createdByUid": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "availableForSale": {
                        "type": "boolean"
                    },
                    "basePrice": {
                        "type": "number",
                        "format": "double"
                    },
                    "acquisitionPrice": {
                        "type": "number",
                        "format": "double"
                    },
                    "name": {
                        "type": "string",
                        "nullable": true
                    },
                    "url": {
                        "type": "string",
                        "nullable": true
                    },
                    "primaryTickers": {
                        "type": "string",
                        "nullable": true
                    },
                    "description": {
                        "type": "string",
                        "nullable": true
                    },
                    "defaultMoneyBackGuaranteeTimePeriodId": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "orderConfirmationProgramId": {
                        "type": "integer",
                        "format": "int32",
                        "nullable": true
                    }
                },
                "additionalProperties": false
            },
            "Fool.Commerce.Dto.CreateSubscriptionProductForm": {
                "type": "object",
                "properties": {
                    "countryCode": {
                        "type": "string",
                        "nullable": true
                    },
                    "introductionDate": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "createdByUid": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "isBackEnd": {
                        "type": "boolean"
                    },
                    "name": {
                        "type": "string",
                        "nullable": true
                    },
                    "url": {
                        "type": "string",
                        "nullable": true
                    },
                    "primaryTickers": {
                        "type": "string",
                        "nullable": true
                    },
                    "description": {
                        "type": "string",
                        "nullable": true
                    },
                    "defaultMoneyBackGuaranteeTimePeriodId": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "orderConfirmationProgramId": {
                        "type": "integer",
                        "format": "int32",
                        "nullable": true
                    }
                },
                "additionalProperties": false
            },
            "Fool.Commerce.Dto.CreateSubscriptionProductTermForm": {
                "type": "object",
                "properties": {
                    "timePeriodId": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "basePrice": {
                        "type": "number",
                        "format": "double"
                    },
                    "acquisitionPrice": {
                        "type": "number",
                        "format": "double"
                    },
                    "renewalPrice": {
                        "type": "number",
                        "format": "double"
                    },
                    "createdByUid": {
                        "type": "integer",
                        "format": "int32"
                    }
                },
                "additionalProperties": false
            },
            "Fool.Commerce.Dto.CreditCard": {
                "type": "object",
                "properties": {
                    "type": {
                        "type": "string",
                        "nullable": true
                    },
                    "expirationMonth": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "expirationYear": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "postalCode": {
                        "type": "string",
                        "nullable": true
                    },
                    "nameOnCard": {
                        "type": "string",
                        "nullable": true
                    },
                    "isSecurityCodeOnFile": {
                        "type": "boolean"
                    },
                    "paymentMethodType": {
                        "enum": [
                            "CreditCard",
                            "ElectronicCheck",
                            "ApplePay",
                            "Any"
                        ],
                        "type": "string",
                        "readOnly": true
                    },
                    "id": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "countryCode": {
                        "type": "string",
                        "nullable": true
                    },
                    "lastFourDigits": {
                        "type": "string",
                        "nullable": true
                    },
                    "isDefault": {
                        "type": "boolean"
                    },
                    "description": {
                        "type": "string",
                        "nullable": true
                    },
                    "dateCreated": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "customerName": {
                        "type": "string",
                        "nullable": true
                    },
                    "creditCardType": {
                        "type": "string",
                        "nullable": true
                    }
                },
                "additionalProperties": false
            },
            "Fool.Commerce.Dto.CreditCardForm": {
                "type": "object",
                "properties": {
                    "cardNumber": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "nameOnCard": {
                        "type": "string",
                        "nullable": true
                    },
                    "expirationMonth": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "expirationYear": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "postalCode": {
                        "type": "string",
                        "nullable": true
                    },
                    "countryCode": {
                        "type": "string",
                        "nullable": true
                    }
                },
                "additionalProperties": false
            },
            "Fool.Commerce.Dto.CreditCardMetadataForm": {
                "type": "object",
                "properties": {
                    "nameOnCard": {
                        "type": "string",
                        "nullable": true
                    },
                    "expirationMonth": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "expirationYear": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "postalCode": {
                        "type": "string",
                        "nullable": true
                    },
                    "countryCode": {
                        "type": "string",
                        "nullable": true
                    }
                },
                "additionalProperties": false
            },
            "Fool.Commerce.Dto.CreditCardOrderForm": {
                "required": [
                    "confirmEmail",
                    "creditCard",
                    "email",
                    "isoAlpha2CountryCode",
                    "promotionCode",
                    "selectedOfferId"
                ],
                "type": "object",
                "properties": {
                    "creditCard": {
                        "$ref": "#/components/schemas/Fool.Commerce.Dto.CreditCardForm"
                    },
                    "email": {
                        "type": "string"
                    },
                    "confirmEmail": {
                        "type": "string"
                    },
                    "promotionCode": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "selectedOfferId": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "isoAlpha2CountryCode": {
                        "type": "string"
                    },
                    "firstName": {
                        "type": "string",
                        "nullable": true
                    },
                    "lastName": {
                        "type": "string",
                        "nullable": true
                    },
                    "phoneNumber": {
                        "type": "string",
                        "nullable": true
                    },
                    "billingAddress": {
                        "$ref": "#/components/schemas/Fool.Commerce.Dto.PostalAddressForm"
                    },
                    "shippingAddress": {
                        "$ref": "#/components/schemas/Fool.Commerce.Dto.PostalAddressForm"
                    },
                    "sourceCode": {
                        "type": "string",
                        "nullable": true
                    },
                    "clientIpAddress": {
                        "type": "string",
                        "nullable": true
                    },
                    "isTestOrder": {
                        "type": "boolean"
                    },
                    "uid": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "isNewAccount": {
                        "type": "boolean"
                    },
                    "placedByUid": {
                        "type": "integer",
                        "format": "int32",
                        "nullable": true
                    },
                    "orderSession": {
                        "$ref": "#/components/schemas/Fool.Commerce.Dto.Tracking.OrderSession"
                    }
                },
                "additionalProperties": false
            },
            "Fool.Commerce.Dto.CreditItem": {
                "type": "object",
                "properties": {
                    "creditType": {
                        "type": "string",
                        "nullable": true
                    },
                    "product": {
                        "$ref": "#/components/schemas/Fool.Commerce.Dto.Product"
                    },
                    "amount": {
                        "$ref": "#/components/schemas/Fool.Commerce.Dto.Money"
                    },
                    "startDate": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "endDate": {
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "additionalProperties": false
            },
            "Fool.Commerce.Dto.CreditService.AccountState": {
                "type": "object",
                "properties": {
                    "subscriptions": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Fool.Commerce.Dto.CreditService.Subscription"
                        },
                        "nullable": true
                    },
                    "reports": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Fool.Commerce.Dto.CreditService.Report"
                        },
                        "nullable": true
                    }
                },
                "additionalProperties": false
            },
            "Fool.Commerce.Dto.CreditService.CreditTransferQuoteRequest": {
                "required": [
                    "uid"
                ],
                "type": "object",
                "properties": {
                    "uid": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "placedByUid": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "dayToUseForProRating": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true
                    },
                    "transferActions": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Fool.Commerce.Dto.CreditService.TransferAction"
                        },
                        "nullable": true
                    },
                    "allowExtensionTransfers": {
                        "type": "boolean"
                    }
                },
                "additionalProperties": false
            },
            "Fool.Commerce.Dto.CreditService.CreditTransferQuoteResponse": {
                "type": "object",
                "properties": {
                    "currentValue": {
                        "$ref": "#/components/schemas/Fool.Commerce.Dto.Money"
                    },
                    "currentTaxValue": {
                        "$ref": "#/components/schemas/Fool.Commerce.Dto.Money"
                    },
                    "totalLiquidated": {
                        "$ref": "#/components/schemas/Fool.Commerce.Dto.Money"
                    },
                    "totalLiquidatedTax": {
                        "$ref": "#/components/schemas/Fool.Commerce.Dto.Money"
                    },
                    "totalPurchased": {
                        "$ref": "#/components/schemas/Fool.Commerce.Dto.Money"
                    },
                    "totalPurchasedTax": {
                        "$ref": "#/components/schemas/Fool.Commerce.Dto.Money"
                    },
                    "totalCreditCardPurchase": {
                        "$ref": "#/components/schemas/Fool.Commerce.Dto.Money"
                    },
                    "totalCreditCardRefund": {
                        "$ref": "#/components/schemas/Fool.Commerce.Dto.Money"
                    },
                    "dayToUseForProration": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "beforeState": {
                        "$ref": "#/components/schemas/Fool.Commerce.Dto.CreditService.AccountState"
                    },
                    "afterState": {
                        "$ref": "#/components/schemas/Fool.Commerce.Dto.CreditService.AccountState"
                    },
                    "transferOperations": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Fool.Commerce.Dto.CreditService.TransferOperation"
                        },
                        "nullable": true
                    },
                    "containsPurchasesForZeroDollars": {
                        "type": "boolean",
                        "nullable": true
                    },
                    "canBeSettled": {
                        "type": "boolean"
                    },
                    "duplicateTransferProducts": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        },
                        "nullable": true
                    }
                },
                "additionalProperties": false
            },
            "Fool.Commerce.Dto.CreditService.ExecuteCreditTransferRequest": {
                "required": [
                    "uid"
                ],
                "type": "object",
                "properties": {
                    "uid": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "placedByUid": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "dayToUseForProRating": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true
                    },
                    "transferActions": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Fool.Commerce.Dto.CreditService.TransferAction"
                        },
                        "nullable": true
                    },
                    "allowExtensionTransfers": {
                        "type": "boolean"
                    }
                },
                "additionalProperties": false
            },
            "Fool.Commerce.Dto.CreditService.ExecuteTransferOrderResponse": {
                "type": "object",
                "properties": {
                    "orderId": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "uid": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "takenByUid": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "placedByUid": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "memberId": {
                        "type": "string",
                        "nullable": true
                    },
                    "promotionGuid": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "productTermId": {
                        "type": "string",
                        "nullable": true
                    },
                    "autoRebill": {
                        "type": "boolean"
                    }
                },
                "additionalProperties": false
            },
            "Fool.Commerce.Dto.CreditService.Report": {
                "type": "object",
                "additionalProperties": false
            },
            "Fool.Commerce.Dto.CreditService.Subscription": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "endDate": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "productName": {
                        "type": "string",
                        "nullable": true
                    },
                    "productId": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "remainingValueBeforeTaxes": {
                        "$ref": "#/components/schemas/Fool.Commerce.Dto.Money"
                    },
                    "remainingValue": {
                        "$ref": "#/components/schemas/Fool.Commerce.Dto.Money"
                    },
                    "remainingTaxValue": {
                        "$ref": "#/components/schemas/Fool.Commerce.Dto.Money"
                    },
                    "fullValueBeforeTaxes": {
                        "$ref": "#/components/schemas/Fool.Commerce.Dto.Money"
                    },
                    "fullTaxValue": {
                        "$ref": "#/components/schemas/Fool.Commerce.Dto.Money"
                    },
                    "fullValue": {
                        "$ref": "#/components/schemas/Fool.Commerce.Dto.Money"
                    },
                    "isNew": {
                        "type": "boolean"
                    },
                    "promotion": {
                        "type": "string",
                        "format": "uuid",
                        "nullable": true
                    },
                    "offerId": {
                        "type": "integer",
                        "format": "int32",
                        "nullable": true
                    },
                    "autoRebill": {
                        "type": "boolean",
                        "nullable": true
                    },
                    "campaignId": {
                        "type": "integer",
                        "format": "int32",
                        "nullable": true
                    },
                    "mbgPeriod": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true
                    },
                    "swappedFromSubscriptionId": {
                        "type": "integer",
                        "format": "int32",
                        "nullable": true
                    },
                    "currentSubPeriodStartDate": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true
                    },
                    "days": {
                        "type": "integer",
                        "format": "int32",
                        "nullable": true
                    }
                },
                "additionalProperties": false
            },
            "Fool.Commerce.Dto.CreditService.SubscriptionTransferToResponse": {
                "type": "object",
                "properties": {
                    "days": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "promotionOfferId": {
                        "type": "integer",
                        "format": "int32"
                    }
                },
                "additionalProperties": false
            },
            "Fool.Commerce.Dto.CreditService.TransferAction": {
                "type": "object",
                "properties": {
                    "actionType": {
                        "type": "string",
                        "nullable": true,
                        "readOnly": true
                    },
                    "actionOrder": {
                        "type": "integer",
                        "format": "int32"
                    }
                },
                "additionalProperties": false
            },
            "Fool.Commerce.Dto.CreditService.TransferOperation": {
                "type": "object",
                "properties": {
                    "actionType": {
                        "type": "string",
                        "nullable": true,
                        "readOnly": true
                    },
                    "actionOrder": {
                        "type": "integer",
                        "format": "int32"
                    }
                },
                "additionalProperties": false
            },
            "Fool.Commerce.Dto.CreditService.UpdateProRatedEligibilityStatusRequest": {
                "type": "object",
                "properties": {
                    "uid": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "proRatedRefundIssued": {
                        "type": "boolean"
                    },
                    "refundDate": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true
                    }
                },
                "additionalProperties": false
            },
            "Fool.Commerce.Dto.CreditService.UpdateProRatedEligibilityStatusResponse": {
                "type": "object",
                "properties": {
                    "success": {
                        "type": "boolean"
                    },
                    "uid": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "numberOfProRatedRefundsIssued": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "refundDate": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true
                    }
                },
                "additionalProperties": false
            },
            "Fool.Commerce.Dto.Discount": {
                "type": "object",
                "properties": {
                    "discountId": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "name": {
                        "type": "string",
                        "nullable": true
                    },
                    "expirationDate": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "discountItems": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Fool.Commerce.Dto.DiscountItem"
                        },
                        "nullable": true
                    }
                },
                "additionalProperties": false
            },
            "Fool.Commerce.Dto.DiscountItem": {
                "type": "object",
                "properties": {
                    "amount": {
                        "$ref": "#/components/schemas/Fool.Commerce.Dto.Money"
                    }
                },
                "additionalProperties": false
            },
            "Fool.Commerce.Dto.DiscountOffer": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "name": {
                        "type": "string",
                        "nullable": true
                    },
                    "expirationDate": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "products": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Fool.Commerce.Dto.Product"
                        },
                        "nullable": true
                    }
                },
                "additionalProperties": false
            },
            "Fool.Commerce.Dto.ElectronicCheckForm": {
                "type": "object",
                "properties": {
                    "accountHolderName": {
                        "type": "string",
                        "nullable": true
                    },
                    "accountNumber": {
                        "type": "string",
                        "nullable": true
                    },
                    "routingNumber": {
                        "type": "string",
                        "nullable": true
                    },
                    "countryCode": {
                        "type": "string",
                        "nullable": true
                    },
                    "accountType": {
                        "enum": [
                            "Checking",
                            "Savings"
                        ],
                        "type": "string"
                    }
                },
                "additionalProperties": false
            },
            "Fool.Commerce.Dto.ElectronicCheckOrderForm": {
                "required": [
                    "confirmEmail",
                    "electronicCheck",
                    "email",
                    "isoAlpha2CountryCode",
                    "promotionCode",
                    "selectedOfferId"
                ],
                "type": "object",
                "properties": {
                    "electronicCheck": {
                        "$ref": "#/components/schemas/Fool.Commerce.Dto.ElectronicCheckForm"
                    },
                    "email": {
                        "type": "string"
                    },
                    "confirmEmail": {
                        "type": "string"
                    },
                    "promotionCode": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "selectedOfferId": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "isoAlpha2CountryCode": {
                        "type": "string"
                    },
                    "firstName": {
                        "type": "string",
                        "nullable": true
                    },
                    "lastName": {
                        "type": "string",
                        "nullable": true
                    },
                    "phoneNumber": {
                        "type": "string",
                        "nullable": true
                    },
                    "billingAddress": {
                        "$ref": "#/components/schemas/Fool.Commerce.Dto.PostalAddressForm"
                    },
                    "shippingAddress": {
                        "$ref": "#/components/schemas/Fool.Commerce.Dto.PostalAddressForm"
                    },
                    "sourceCode": {
                        "type": "string",
                        "nullable": true
                    },
                    "clientIpAddress": {
                        "type": "string",
                        "nullable": true
                    },
                    "isTestOrder": {
                        "type": "boolean"
                    },
                    "uid": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "isNewAccount": {
                        "type": "boolean"
                    },
                    "placedByUid": {
                        "type": "integer",
                        "format": "int32",
                        "nullable": true
                    },
                    "orderSession": {
                        "$ref": "#/components/schemas/Fool.Commerce.Dto.Tracking.OrderSession"
                    }
                },
                "additionalProperties": false
            },
            "Fool.Commerce.Dto.FraudRiskOrderDetail": {
                "type": "object",
                "properties": {
                    "uid": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "numberOfPaymentMethods": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "email": {
                        "type": "string",
                        "nullable": true
                    },
                    "sourceCode": {
                        "type": "string",
                        "nullable": true
                    },
                    "clientIpAddress": {
                        "type": "string",
                        "nullable": true
                    },
                    "numberOfOrders": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "numberOfSuccessfulOrders": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "numberOfFailedOrders": {
                        "type": "integer",
                        "format": "int32",
                        "readOnly": true
                    },
                    "firstOrderDate": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "lastOrderDate": {
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "additionalProperties": false
            },
            "Fool.Commerce.Dto.Helpdesk.Action": {
                "type": "object",
                "properties": {
                    "field": {
                        "type": "string",
                        "nullable": true
                    },
                    "value": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "nullable": true
                    }
                },
                "additionalProperties": false
            },
            "Fool.Commerce.Dto.Helpdesk.Comment": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "format": "int64",
                        "nullable": true
                    },
                    "type": {
                        "type": "string",
                        "nullable": true
                    },
                    "body": {
                        "type": "string",
                        "nullable": true
                    },
                    "htmlBody": {
                        "type": "string",
                        "nullable": true
                    },
                    "plainBody": {
                        "type": "string",
                        "nullable": true
                    },
                    "public": {
                        "type": "boolean"
                    },
                    "authorId": {
                        "type": "integer",
                        "format": "int64",
                        "nullable": true
                    },
                    "uploads": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "nullable": true
                    },
                    "createdAt": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true
                    }
                },
                "additionalProperties": false
            },
            "Fool.Commerce.Dto.Helpdesk.CustomField": {
                "type": "object",
                "properties": {
                    "fieldName": {
                        "type": "string",
                        "nullable": true
                    },
                    "value": {
                        "nullable": true
                    }
                },
                "additionalProperties": false
            },
            "Fool.Commerce.Dto.Helpdesk.Macro": {
                "type": "object",
                "properties": {
                    "url": {
                        "type": "string",
                        "nullable": true
                    },
                    "id": {
                        "type": "integer",
                        "format": "int64",
                        "nullable": true
                    },
                    "title": {
                        "type": "string",
                        "nullable": true
                    },
                    "active": {
                        "type": "boolean",
                        "nullable": true
                    },
                    "updatedAt": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true
                    },
                    "createdAt": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true
                    },
                    "restriction": {
                        "$ref": "#/components/schemas/Fool.Commerce.Dto.Helpdesk.Restriction"
                    },
                    "actions": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Fool.Commerce.Dto.Helpdesk.Action"
                        },
                        "nullable": true
                    }
                },
                "additionalProperties": false
            },
            "Fool.Commerce.Dto.Helpdesk.Requester": {
                "type": "object",
                "properties": {
                    "localeId": {
                        "type": "integer",
                        "format": "int64",
                        "nullable": true
                    },
                    "name": {
                        "type": "string",
                        "nullable": true
                    },
                    "email": {
                        "type": "string",
                        "nullable": true
                    }
                },
                "additionalProperties": false
            },
            "Fool.Commerce.Dto.Helpdesk.Restriction": {
                "type": "object",
                "properties": {
                    "type": {
                        "type": "string",
                        "nullable": true
                    },
                    "id": {
                        "type": "integer",
                        "format": "int64"
                    }
                },
                "additionalProperties": false
            },
            "Fool.Commerce.Dto.Helpdesk.Ticket": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "format": "int64",
                        "nullable": true
                    },
                    "createdAt": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true
                    },
                    "url": {
                        "type": "string",
                        "nullable": true
                    },
                    "updatedAt": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true
                    },
                    "externalId": {
                        "type": "string",
                        "nullable": true
                    },
                    "type": {
                        "type": "string",
                        "nullable": true
                    },
                    "description": {
                        "type": "string",
                        "nullable": true
                    },
                    "subject": {
                        "type": "string",
                        "nullable": true
                    },
                    "priority": {
                        "type": "string",
                        "nullable": true
                    },
                    "status": {
                        "type": "string",
                        "nullable": true
                    },
                    "recipient": {
                        "type": "string",
                        "nullable": true
                    },
                    "requesterId": {
                        "type": "integer",
                        "format": "int64",
                        "nullable": true
                    },
                    "submitterId": {
                        "type": "integer",
                        "format": "int64",
                        "nullable": true
                    },
                    "assigneeId": {
                        "type": "integer",
                        "format": "int64",
                        "nullable": true
                    },
                    "organizationId": {
                        "type": "integer",
                        "format": "int64",
                        "nullable": true
                    },
                    "groupId": {
                        "type": "integer",
                        "format": "int64",
                        "nullable": true
                    },
                    "collaboratorIds": {
                        "type": "array",
                        "items": {
                            "type": "integer",
                            "format": "int64"
                        },
                        "nullable": true
                    },
                    "collaboratorEmails": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "nullable": true
                    },
                    "forumTopicId": {
                        "nullable": true
                    },
                    "problemId": {
                        "nullable": true
                    },
                    "hasIncidents": {
                        "type": "boolean",
                        "nullable": true
                    },
                    "dueAt": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true
                    },
                    "tags": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "nullable": true
                    },
                    "customFields": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Fool.Commerce.Dto.Helpdesk.CustomField"
                        },
                        "nullable": true
                    },
                    "workflowStatus": {
                        "type": "string",
                        "nullable": true
                    },
                    "workflowStatusCode": {
                        "type": "string",
                        "nullable": true
                    },
                    "isPendingAutomaticAdminProcessing": {
                        "type": "boolean"
                    },
                    "brandId": {
                        "type": "integer",
                        "format": "int64",
                        "nullable": true
                    },
                    "comment": {
                        "$ref": "#/components/schemas/Fool.Commerce.Dto.Helpdesk.Comment"
                    },
                    "requester": {
                        "$ref": "#/components/schemas/Fool.Commerce.Dto.Helpdesk.Requester"
                    },
                    "ticketFormId": {
                        "type": "integer",
                        "format": "int64",
                        "nullable": true
                    },
                    "isPublic": {
                        "type": "boolean"
                    },
                    "viaFollowupSourceId": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "commentCount": {
                        "type": "integer",
                        "format": "int32",
                        "nullable": true
                    },
                    "incidentCount": {
                        "type": "integer",
                        "format": "int32",
                        "nullable": true
                    },
                    "followUpIds": {
                        "type": "array",
                        "items": {
                            "type": "integer",
                            "format": "int64"
                        },
                        "nullable": true
                    }
                },
                "additionalProperties": false
            },
            "Fool.Commerce.Dto.Helpdesk.TicketField": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "format": "int64",
                        "nullable": true
                    },
                    "createdAt": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true
                    },
                    "url": {
                        "type": "string",
                        "nullable": true
                    },
                    "updatedAt": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true
                    },
                    "required": {
                        "type": "boolean"
                    },
                    "active": {
                        "type": "boolean"
                    },
                    "description": {
                        "type": "string",
                        "nullable": true
                    },
                    "title": {
                        "type": "string",
                        "nullable": true
                    },
                    "type": {
                        "type": "string",
                        "nullable": true
                    }
                },
                "additionalProperties": false
            },
            "Fool.Commerce.Dto.Helpers.PaginationResults`1[[Fool.Commerce.Dto.Promotion, Fool.Commerce, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]]": {
                "type": "object",
                "properties": {
                    "offset": {
                        "type": "integer",
                        "format": "int32",
                        "nullable": true
                    },
                    "limit": {
                        "type": "integer",
                        "format": "int32",
                        "nullable": true
                    },
                    "totalResults": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "results": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Fool.Commerce.Dto.Promotion"
                        },
                        "nullable": true
                    }
                },
                "additionalProperties": false
            },
            "Fool.Commerce.Dto.Helpers.PaginationResults`1[[Fool.Commerce.Dto.SingleItemProductDescription, Fool.Commerce, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]]": {
                "type": "object",
                "properties": {
                    "offset": {
                        "type": "integer",
                        "format": "int32",
                        "nullable": true
                    },
                    "limit": {
                        "type": "integer",
                        "format": "int32",
                        "nullable": true
                    },
                    "totalResults": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "results": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Fool.Commerce.Dto.SingleItemProductDescription"
                        },
                        "nullable": true
                    }
                },
                "additionalProperties": false
            },
            "Fool.Commerce.Dto.Helpers.PaginationResults`1[[Fool.Commerce.Dto.SubscriptionProductDescription, Fool.Commerce, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]]": {
                "type": "object",
                "properties": {
                    "offset": {
                        "type": "integer",
                        "format": "int32",
                        "nullable": true
                    },
                    "limit": {
                        "type": "integer",
                        "format": "int32",
                        "nullable": true
                    },
                    "totalResults": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "results": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Fool.Commerce.Dto.SubscriptionProductDescription"
                        },
                        "nullable": true
                    }
                },
                "additionalProperties": false
            },
            "Fool.Commerce.Dto.Invoice": {
                "type": "object",
                "properties": {
                    "invoiceId": {
                        "type": "integer",
                        "format": "int32",
                        "nullable": true
                    },
                    "invoiceDate": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true
                    },
                    "totalPrice": {
                        "$ref": "#/components/schemas/Fool.Commerce.Dto.Money"
                    },
                    "totalPayments": {
                        "$ref": "#/components/schemas/Fool.Commerce.Dto.Money"
                    },
                    "cashPayments": {
                        "$ref": "#/components/schemas/Fool.Commerce.Dto.Money"
                    },
                    "creditPayments": {
                        "$ref": "#/components/schemas/Fool.Commerce.Dto.Money"
                    },
                    "taxPayments": {
                        "$ref": "#/components/schemas/Fool.Commerce.Dto.Money"
                    },
                    "subtotalAfterDiscountsAfterTaxes": {
                        "$ref": "#/components/schemas/Fool.Commerce.Dto.Money"
                    },
                    "subtotalAfterDiscountsBeforeTaxes": {
                        "$ref": "#/components/schemas/Fool.Commerce.Dto.Money"
                    },
                    "totalTaxesPaid": {
                        "$ref": "#/components/schemas/Fool.Commerce.Dto.Money"
                    },
                    "totalDiscounts": {
                        "$ref": "#/components/schemas/Fool.Commerce.Dto.Money"
                    },
                    "creditItems": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Fool.Commerce.Dto.CreditItem"
                        },
                        "nullable": true
                    },
                    "discounts": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Fool.Commerce.Dto.Discount"
                        },
                        "nullable": true
                    },
                    "payments": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Fool.Commerce.Dto.Payment"
                        },
                        "nullable": true
                    },
                    "refunds": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Fool.Commerce.Dto.RefundDetail"
                        },
                        "nullable": true
                    }
                },
                "additionalProperties": false
            },
            "Fool.Commerce.Dto.LockUserPurchasesForm": {
                "required": [
                    "lockedByAdminUid"
                ],
                "type": "object",
                "properties": {
                    "lockoutEndDate": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true
                    },
                    "lockedByAdminUid": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "lockedComment": {
                        "type": "string",
                        "nullable": true
                    }
                },
                "additionalProperties": false
            },
            "Fool.Commerce.Dto.MemberActions.MemberSubscriptionActionForm": {
                "type": "object",
                "properties": {
                    "action": {
                        "enum": [
                            "TurnOffAutoRenewal",
                            "CancelSubscription",
                            "SwapServices",
                            "EnableAutoRenewal"
                        ],
                        "type": "string",
                        "nullable": true
                    },
                    "reason": {
                        "type": "string",
                        "nullable": true
                    }
                },
                "additionalProperties": false
            },
            "Fool.Commerce.Dto.MemberActions.MemberSubscriptionActionResponse": {
                "type": "object",
                "properties": {
                    "actionResult": {
                        "type": "string",
                        "nullable": true
                    }
                },
                "additionalProperties": false
            },
            "Fool.Commerce.Dto.MmsCreatePasswordEmailSendHistory": {
                "type": "object",
                "properties": {
                    "email": {
                        "type": "string",
                        "nullable": true
                    },
                    "send_dates": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "nullable": true
                    },
                    "shouldSendCreatePasswordEmail": {
                        "type": "boolean"
                    }
                },
                "additionalProperties": false
            },
            "Fool.Commerce.Dto.Money": {
                "required": [
                    "amount",
                    "currencyCode"
                ],
                "type": "object",
                "properties": {
                    "currencyCode": {
                        "type": "string"
                    },
                    "amount": {
                        "type": "number",
                        "format": "double"
                    }
                },
                "additionalProperties": false
            },
            "Fool.Commerce.Dto.Offer": {
                "type": "object",
                "properties": {
                    "type": {
                        "type": "string",
                        "nullable": true,
                        "readOnly": true
                    },
                    "id": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "name": {
                        "type": "string",
                        "nullable": true
                    },
                    "product": {
                        "$ref": "#/components/schemas/Fool.Commerce.Dto.Product"
                    },
                    "fulfillmentUrl": {
                        "type": "string",
                        "nullable": true
                    },
                    "isPreselected": {
                        "type": "boolean"
                    },
                    "offerMarkup": {
                        "type": "string",
                        "nullable": true
                    },
                    "basePrice": {
                        "$ref": "#/components/schemas/Fool.Commerce.Dto.Money"
                    },
                    "acquisitionPrice": {
                        "$ref": "#/components/schemas/Fool.Commerce.Dto.Money"
                    },
                    "premiums": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Fool.Commerce.Dto.Premium"
                        },
                        "nullable": true
                    },
                    "totalOrders": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "tags": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "nullable": true
                    }
                },
                "additionalProperties": false
            },
            "Fool.Commerce.Dto.OfferQuote": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "name": {
                        "type": "string",
                        "nullable": true
                    },
                    "isBundle": {
                        "type": "boolean"
                    },
                    "description": {
                        "type": "string",
                        "nullable": true
                    },
                    "basePrice": {
                        "$ref": "#/components/schemas/Fool.Commerce.Dto.Money"
                    },
                    "hasDiscount": {
                        "type": "boolean"
                    },
                    "finalPrice": {
                        "$ref": "#/components/schemas/Fool.Commerce.Dto.Money"
                    },
                    "discountPercent": {
                        "type": "number",
                        "format": "double"
                    },
                    "discountedPrice": {
                        "$ref": "#/components/schemas/Fool.Commerce.Dto.Money"
                    },
                    "discountAmount": {
                        "$ref": "#/components/schemas/Fool.Commerce.Dto.Money"
                    },
                    "amountDue": {
                        "$ref": "#/components/schemas/Fool.Commerce.Dto.Money"
                    },
                    "amountDueForTaxLookup": {
                        "$ref": "#/components/schemas/Fool.Commerce.Dto.Money"
                    },
                    "amountDueWithCredits": {
                        "$ref": "#/components/schemas/Fool.Commerce.Dto.Money"
                    },
                    "amountTaxesDue": {
                        "$ref": "#/components/schemas/Fool.Commerce.Dto.Money"
                    },
                    "taxAgnosticAmountDue": {
                        "$ref": "#/components/schemas/Fool.Commerce.Dto.Money"
                    },
                    "isPreselected": {
                        "type": "boolean"
                    },
                    "isComplimentary": {
                        "type": "boolean"
                    },
                    "product": {
                        "$ref": "#/components/schemas/Fool.Commerce.Dto.Product"
                    },
                    "offerMarkup": {
                        "type": "string",
                        "nullable": true
                    },
                    "promotionQuoteTaxInformation": {
                        "$ref": "#/components/schemas/Fool.Commerce.Dto.Taxes.PromotionQuoteTaxInformation"
                    },
                    "premiums": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Fool.Commerce.Dto.Premium"
                        },
                        "nullable": true
                    }
                },
                "additionalProperties": false
            },
            "Fool.Commerce.Dto.Order": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "status": {
                        "enum": [
                            "Pending",
                            "Completed",
                            "AuthorizationFailure",
                            "AuthorizationError"
                        ],
                        "type": "string"
                    },
                    "date": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "takenByUid": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "placedByUid": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "billToUid": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "deliverToUid": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "promotion": {
                        "$ref": "#/components/schemas/Fool.Commerce.Dto.Promotion"
                    },
                    "paymentMethod": {
                        "$ref": "#/components/schemas/Fool.Commerce.Dto.PaymentMethod"
                    },
                    "item": {
                        "$ref": "#/components/schemas/Fool.Commerce.Dto.OrderItem"
                    },
                    "amount": {
                        "type": "number",
                        "format": "double"
                    },
                    "taxAmount": {
                        "type": "number",
                        "format": "double"
                    },
                    "creditAmount": {
                        "type": "number",
                        "format": "double"
                    },
                    "amountCharged": {
                        "type": "number",
                        "format": "double"
                    },
                    "clientIpAddress": {
                        "type": "string",
                        "nullable": true
                    },
                    "countryCode": {
                        "type": "string",
                        "nullable": true
                    },
                    "sourceCode": {
                        "type": "string",
                        "nullable": true
                    },
                    "affluence": {
                        "type": "string",
                        "nullable": true
                    },
                    "orderReceiptJson": {
                        "type": "string",
                        "nullable": true
                    },
                    "offer": {
                        "$ref": "#/components/schemas/Fool.Commerce.Dto.Offer"
                    }
                },
                "additionalProperties": false
            },
            "Fool.Commerce.Dto.OrderConfirmation": {
                "required": [
                    "isNewAccount",
                    "memberId",
                    "orderId",
                    "promotionCode",
                    "uid"
                ],
                "type": "object",
                "properties": {
                    "orderId": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "uid": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "accountId": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "isNewAccount": {
                        "type": "boolean"
                    },
                    "memberId": {
                        "type": "string"
                    },
                    "promotionCode": {
                        "type": "string"
                    },
                    "productTermId": {
                        "type": "string",
                        "nullable": true
                    },
                    "productId": {
                        "type": "integer",
                        "format": "int32"
                    }
                },
                "additionalProperties": false
            },
            "Fool.Commerce.Dto.OrderItem": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "quantity": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "unitPrice": {
                        "$ref": "#/components/schemas/Fool.Commerce.Dto.Money"
                    },
                    "creditAmount": {
                        "type": "number",
                        "format": "double"
                    },
                    "amount": {
                        "$ref": "#/components/schemas/Fool.Commerce.Dto.Money"
                    },
                    "taxAmount": {
                        "type": "number",
                        "format": "double"
                    },
                    "product": {
                        "$ref": "#/components/schemas/Fool.Commerce.Dto.Product"
                    },
                    "premiums": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Fool.Commerce.Dto.PremiumOffer"
                        },
                        "nullable": true
                    },
                    "isTrial": {
                        "type": "boolean"
                    },
                    "isComplimentary": {
                        "type": "boolean"
                    },
                    "type": {
                        "type": "string",
                        "nullable": true
                    },
                    "offer": {
                        "$ref": "#/components/schemas/Fool.Commerce.Dto.Offer"
                    }
                },
                "additionalProperties": false
            },
            "Fool.Commerce.Dto.OrderReceipt": {
                "type": "object",
                "properties": {
                    "orderId": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "orderDate": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "promotionId": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "campaignId": {
                        "type": "integer",
                        "format": "int32",
                        "nullable": true
                    },
                    "countryCode": {
                        "type": "string",
                        "nullable": true
                    },
                    "startDate": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true
                    },
                    "endDate": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true
                    },
                    "deliverToUid": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "billToUid": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "billToCustomer": {
                        "$ref": "#/components/schemas/Fool.Commerce.Dto.RegistrationUser"
                    },
                    "billingAddress": {
                        "$ref": "#/components/schemas/Fool.Commerce.Dto.BillingAddress"
                    },
                    "orderItem": {
                        "$ref": "#/components/schemas/Fool.Commerce.Dto.OrderItem"
                    },
                    "invoice": {
                        "$ref": "#/components/schemas/Fool.Commerce.Dto.Invoice"
                    }
                },
                "additionalProperties": false
            },
            "Fool.Commerce.Dto.ParentProductOwnedByUid": {
                "type": "object",
                "properties": {
                    "subscriptionId": {
                        "type": "integer",
                        "format": "int32",
                        "nullable": true
                    },
                    "orderId": {
                        "type": "integer",
                        "format": "int32",
                        "nullable": true
                    },
                    "startDate": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true
                    },
                    "endDate": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true
                    },
                    "productId": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "productName": {
                        "type": "string",
                        "nullable": true
                    },
                    "productType": {
                        "type": "string",
                        "nullable": true
                    },
                    "acquisitionMethod": {
                        "type": "string",
                        "nullable": true
                    },
                    "autoRebill": {
                        "type": "boolean"
                    },
                    "inGrace": {
                        "type": "boolean"
                    },
                    "componentOrEntitledProducts": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Fool.Commerce.Dto.ProductOwnedByUid"
                        },
                        "nullable": true
                    }
                },
                "additionalProperties": false
            },
            "Fool.Commerce.Dto.Payment": {
                "type": "object",
                "properties": {
                    "paymentId": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "type": {
                        "type": "string",
                        "nullable": true
                    },
                    "referenceNumber": {
                        "type": "string",
                        "nullable": true
                    },
                    "paymentItems": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Fool.Commerce.Dto.PaymentItem"
                        },
                        "nullable": true
                    }
                },
                "additionalProperties": false
            },
            "Fool.Commerce.Dto.PaymentItem": {
                "type": "object",
                "properties": {
                    "amount": {
                        "type": "number",
                        "format": "double"
                    },
                    "taxAmount": {
                        "type": "number",
                        "format": "double"
                    },
                    "amountBeforeTaxes": {
                        "type": "number",
                        "format": "double"
                    },
                    "customerName": {
                        "type": "string",
                        "nullable": true
                    },
                    "paymentMethodDescription": {
                        "type": "string",
                        "nullable": true
                    }
                },
                "additionalProperties": false
            },
            "Fool.Commerce.Dto.PaymentMethod": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "paymentMethodType": {
                        "enum": [
                            "CreditCard",
                            "ElectronicCheck",
                            "ApplePay",
                            "Any"
                        ],
                        "type": "string"
                    },
                    "countryCode": {
                        "type": "string",
                        "nullable": true
                    },
                    "lastFourDigits": {
                        "type": "string",
                        "nullable": true
                    },
                    "isDefault": {
                        "type": "boolean"
                    },
                    "description": {
                        "type": "string",
                        "nullable": true
                    },
                    "dateCreated": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "customerName": {
                        "type": "string",
                        "nullable": true
                    },
                    "creditCardType": {
                        "type": "string",
                        "nullable": true
                    }
                },
                "additionalProperties": false
            },
            "Fool.Commerce.Dto.PaymentMethodForm": {
                "type": "object",
                "properties": {
                    "paymentMethodId": {
                        "type": "string",
                        "nullable": true
                    }
                },
                "additionalProperties": false
            },
            "Fool.Commerce.Dto.PaymentMethodOrderForm": {
                "required": [
                    "isoAlpha2CountryCode",
                    "paymentMethod",
                    "promotionCode",
                    "selectedOfferId"
                ],
                "type": "object",
                "properties": {
                    "paymentMethod": {
                        "$ref": "#/components/schemas/Fool.Commerce.Dto.PaymentMethodForm"
                    },
                    "promotionCode": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "selectedOfferId": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "isoAlpha2CountryCode": {
                        "type": "string"
                    },
                    "firstName": {
                        "type": "string",
                        "nullable": true
                    },
                    "lastName": {
                        "type": "string",
                        "nullable": true
                    },
                    "phoneNumber": {
                        "type": "string",
                        "nullable": true
                    },
                    "billingAddress": {
                        "$ref": "#/components/schemas/Fool.Commerce.Dto.PostalAddressForm"
                    },
                    "shippingAddress": {
                        "$ref": "#/components/schemas/Fool.Commerce.Dto.PostalAddressForm"
                    },
                    "sourceCode": {
                        "type": "string",
                        "nullable": true
                    },
                    "clientIpAddress": {
                        "type": "string",
                        "nullable": true
                    },
                    "isTestOrder": {
                        "type": "boolean"
                    },
                    "uid": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "isNewAccount": {
                        "type": "boolean"
                    },
                    "placedByUid": {
                        "type": "integer",
                        "format": "int32",
                        "nullable": true
                    },
                    "orderSession": {
                        "$ref": "#/components/schemas/Fool.Commerce.Dto.Tracking.OrderSession"
                    }
                },
                "additionalProperties": false
            },
            "Fool.Commerce.Dto.PostalAddressForm": {
                "type": "object",
                "properties": {
                    "firstName": {
                        "type": "string",
                        "nullable": true
                    },
                    "lastName": {
                        "type": "string",
                        "nullable": true
                    },
                    "address1": {
                        "type": "string",
                        "nullable": true
                    },
                    "address2": {
                        "type": "string",
                        "nullable": true
                    },
                    "city": {
                        "type": "string",
                        "nullable": true
                    },
                    "state": {
                        "type": "string",
                        "nullable": true
                    },
                    "postalCode": {
                        "type": "string",
                        "nullable": true
                    },
                    "county": {
                        "type": "string",
                        "nullable": true
                    },
                    "country": {
                        "type": "string",
                        "nullable": true
                    },
                    "phoneNumber": {
                        "type": "string",
                        "nullable": true
                    }
                },
                "additionalProperties": false
            },
            "Fool.Commerce.Dto.Premium": {
                "required": [
                    "name",
                    "value"
                ],
                "type": "object",
                "properties": {
                    "productId": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "name": {
                        "type": "string"
                    },
                    "value": {
                        "$ref": "#/components/schemas/Fool.Commerce.Dto.Money"
                    },
                    "description": {
                        "type": "string",
                        "nullable": true
                    },
                    "fulfillmentUrl": {
                        "type": "string",
                        "nullable": true
                    },
                    "wasTeased": {
                        "type": "boolean"
                    }
                },
                "additionalProperties": false
            },
            "Fool.Commerce.Dto.PremiumOffer": {
                "type": "object",
                "properties": {
                    "product": {
                        "$ref": "#/components/schemas/Fool.Commerce.Dto.Product"
                    },
                    "amount": {
                        "type": "number",
                        "format": "double"
                    },
                    "wasTeased": {
                        "type": "boolean"
                    }
                },
                "additionalProperties": false
            },
            "Fool.Commerce.Dto.Product": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "name": {
                        "type": "string",
                        "nullable": true
                    },
                    "url": {
                        "type": "string",
                        "nullable": true
                    },
                    "secureUrl": {
                        "type": "string",
                        "nullable": true
                    },
                    "isBackEnd": {
                        "type": "boolean"
                    },
                    "primaryTickers": {
                        "type": "string",
                        "nullable": true
                    },
                    "swapGuaranteePeriod": {
                        "$ref": "#/components/schemas/Fool.Commerce.Dto.TimePeriod"
                    },
                    "productType": {
                        "type": "integer",
                        "format": "int32"
                    }
                },
                "additionalProperties": false
            },
            "Fool.Commerce.Dto.ProductOffer": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "nullable": true
                    },
                    "product": {
                        "$ref": "#/components/schemas/Fool.Commerce.Dto.Product"
                    },
                    "basePrice": {
                        "$ref": "#/components/schemas/Fool.Commerce.Dto.Money"
                    },
                    "acquisitionPrice": {
                        "$ref": "#/components/schemas/Fool.Commerce.Dto.Money"
                    }
                },
                "additionalProperties": false
            },
            "Fool.Commerce.Dto.ProductOwnedByUid": {
                "type": "object",
                "properties": {
                    "subscriptionId": {
                        "type": "integer",
                        "format": "int32",
                        "nullable": true
                    },
                    "orderId": {
                        "type": "integer",
                        "format": "int32",
                        "nullable": true
                    },
                    "startDate": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true
                    },
                    "endDate": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true
                    },
                    "productId": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "productName": {
                        "type": "string",
                        "nullable": true
                    },
                    "productType": {
                        "type": "string",
                        "nullable": true
                    },
                    "acquisitionMethod": {
                        "type": "string",
                        "nullable": true
                    },
                    "autoRebill": {
                        "type": "boolean"
                    },
                    "inGrace": {
                        "type": "boolean"
                    }
                },
                "additionalProperties": false
            },
            "Fool.Commerce.Dto.ProductsOwnedByUid": {
                "type": "object",
                "properties": {
                    "parentProductsOwned": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Fool.Commerce.Dto.ParentProductOwnedByUid"
                        },
                        "nullable": true
                    },
                    "uid": {
                        "type": "integer",
                        "format": "int32"
                    }
                },
                "additionalProperties": false
            },
            "Fool.Commerce.Dto.Promotion": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "code": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "startDate": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "offers": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Fool.Commerce.Dto.Offer"
                        },
                        "nullable": true
                    },
                    "totalOrders": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "tags": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "nullable": true
                    },
                    "modifiedByUid": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "modifiedDate": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "createdByUid": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "countryCode": {
                        "type": "string",
                        "nullable": true
                    },
                    "name": {
                        "type": "string",
                        "nullable": true
                    },
                    "description": {
                        "type": "string",
                        "nullable": true
                    },
                    "endDate": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true
                    },
                    "redirectSettings": {
                        "$ref": "#/components/schemas/Fool.Commerce.Dto.RedirectSettings"
                    },
                    "campaignId": {
                        "type": "integer",
                        "format": "int32",
                        "nullable": true
                    },
                    "audienceType": {
                        "enum": [
                            "NewMember",
                            "Retention",
                            "Acquisition"
                        ],
                        "type": "string",
                        "nullable": true
                    }
                },
                "additionalProperties": false
            },
            "Fool.Commerce.Dto.PromotionQuoteDTO": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "code": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "redirectCode": {
                        "type": "string",
                        "format": "uuid",
                        "nullable": true
                    },
                    "name": {
                        "type": "string",
                        "nullable": true
                    },
                    "countryCode": {
                        "type": "string",
                        "nullable": true
                    },
                    "description": {
                        "type": "string",
                        "nullable": true
                    },
                    "hasRedirect": {
                        "type": "boolean"
                    },
                    "redirectUrl": {
                        "type": "string",
                        "nullable": true
                    },
                    "campaignId": {
                        "type": "integer",
                        "format": "int32",
                        "nullable": true
                    },
                    "offers": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Fool.Commerce.Dto.OfferQuote"
                        },
                        "nullable": true
                    },
                    "productOwnedInLast90Days": {
                        "type": "boolean"
                    },
                    "currentlyOwnsProduct": {
                        "type": "boolean"
                    }
                },
                "additionalProperties": false
            },
            "Fool.Commerce.Dto.ProRatedRefundEligible": {
                "type": "object",
                "properties": {
                    "uid": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "refundDate": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true
                    },
                    "proRatedRefundIssued": {
                        "type": "boolean"
                    },
                    "isProRatedEligible": {
                        "type": "boolean"
                    }
                },
                "additionalProperties": false
            },
            "Fool.Commerce.Dto.ReasonForCancelling": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "description": {
                        "type": "string",
                        "nullable": true
                    }
                },
                "additionalProperties": false
            },
            "Fool.Commerce.Dto.RedirectSettings": {
                "type": "object",
                "properties": {
                    "redirectCode": {
                        "type": "string",
                        "format": "uuid",
                        "nullable": true
                    },
                    "redirectUrl": {
                        "type": "string",
                        "nullable": true
                    },
                    "redirectDate": {
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "additionalProperties": false
            },
            "Fool.Commerce.Dto.Refund": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "amount": {
                        "$ref": "#/components/schemas/Fool.Commerce.Dto.Money"
                    }
                },
                "additionalProperties": false
            },
            "Fool.Commerce.Dto.RefundDetail": {
                "type": "object",
                "properties": {
                    "refundId": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "customerName": {
                        "type": "string",
                        "nullable": true
                    },
                    "paymentMethodDescription": {
                        "type": "string",
                        "nullable": true
                    },
                    "refundItems": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Fool.Commerce.Dto.RefundItem"
                        },
                        "nullable": true
                    }
                },
                "additionalProperties": false
            },
            "Fool.Commerce.Dto.RefundItem": {
                "type": "object",
                "properties": {
                    "amount": {
                        "$ref": "#/components/schemas/Fool.Commerce.Dto.Money"
                    },
                    "taxAmount": {
                        "$ref": "#/components/schemas/Fool.Commerce.Dto.Money"
                    },
                    "amountBeforeTaxes": {
                        "$ref": "#/components/schemas/Fool.Commerce.Dto.Money"
                    }
                },
                "additionalProperties": false
            },
            "Fool.Commerce.Dto.RegistrationPassword": {
                "type": "object",
                "properties": {
                    "isExpired": {
                        "type": "boolean"
                    },
                    "lastChanged": {
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "additionalProperties": false
            },
            "Fool.Commerce.Dto.RegistrationUser": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "accountId": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "username": {
                        "type": "string",
                        "nullable": true
                    },
                    "email": {
                        "type": "string",
                        "nullable": true
                    },
                    "hasPassword": {
                        "type": "boolean"
                    },
                    "isBlocked": {
                        "type": "boolean"
                    },
                    "firstName": {
                        "type": "string",
                        "nullable": true
                    },
                    "lastName": {
                        "type": "string",
                        "nullable": true
                    },
                    "password": {
                        "$ref": "#/components/schemas/Fool.Commerce.Dto.RegistrationPassword"
                    },
                    "largeAvatarUrl": {
                        "type": "string",
                        "nullable": true
                    },
                    "smallAvatarUrl": {
                        "type": "string",
                        "nullable": true
                    }
                },
                "additionalProperties": false
            },
            "Fool.Commerce.Dto.RenewalProfile": {
                "type": "object",
                "properties": {
                    "renewalPeriod": {
                        "$ref": "#/components/schemas/Fool.Commerce.Dto.TimePeriod"
                    },
                    "basePrice": {
                        "type": "number",
                        "format": "double"
                    },
                    "cashDiscount": {
                        "type": "number",
                        "format": "double"
                    },
                    "percentageDiscount": {
                        "type": "number",
                        "format": "double"
                    },
                    "price": {
                        "type": "number",
                        "format": "double"
                    }
                },
                "additionalProperties": false
            },
            "Fool.Commerce.Dto.SingleItem": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "uid": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "orderId": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "product": {
                        "$ref": "#/components/schemas/Fool.Commerce.Dto.Product"
                    },
                    "remainingValue": {
                        "type": "number",
                        "format": "double"
                    },
                    "remainingTaxValue": {
                        "type": "number",
                        "format": "double"
                    },
                    "remainingValueBeforeTaxes": {
                        "type": "number",
                        "format": "double"
                    },
                    "paymentMethods": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Fool.Commerce.Dto.PaymentMethod"
                        },
                        "nullable": true
                    }
                },
                "additionalProperties": false
            },
            "Fool.Commerce.Dto.SingleItemOfferForm": {
                "type": "object",
                "properties": {
                    "productId": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "offerMarkup": {
                        "type": "string",
                        "nullable": true
                    },
                    "fulfillmentUrl": {
                        "type": "string",
                        "nullable": true
                    },
                    "isPreselected": {
                        "type": "boolean"
                    },
                    "basePrice": {
                        "type": "number",
                        "format": "double"
                    },
                    "acquisitionPrice": {
                        "type": "number",
                        "format": "double",
                        "nullable": true
                    },
                    "premiumProductIds": {
                        "type": "array",
                        "items": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "nullable": true
                    }
                },
                "additionalProperties": false
            },
            "Fool.Commerce.Dto.SingleItemProductDescription": {
                "type": "object",
                "properties": {
                    "availableForSale": {
                        "type": "boolean"
                    },
                    "basePrice": {
                        "$ref": "#/components/schemas/Fool.Commerce.Dto.Money"
                    },
                    "acquisitionPrice": {
                        "$ref": "#/components/schemas/Fool.Commerce.Dto.Money"
                    },
                    "id": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "name": {
                        "type": "string",
                        "nullable": true
                    },
                    "shortName": {
                        "type": "string",
                        "nullable": true
                    },
                    "url": {
                        "type": "string",
                        "nullable": true
                    },
                    "primaryTickers": {
                        "type": "string",
                        "nullable": true
                    },
                    "description": {
                        "type": "string",
                        "nullable": true
                    },
                    "defaultMoneyBackGuaranteePeriod": {
                        "$ref": "#/components/schemas/Fool.Commerce.Dto.TimePeriod"
                    },
                    "introductionDate": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "discontinuationDate": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true
                    },
                    "orderConfirmationProgramId": {
                        "type": "integer",
                        "format": "int32",
                        "nullable": true
                    },
                    "createdByUid": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "dateCreated": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "lastUpdatedDate": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "modifiedByUid": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "productType": {
                        "type": "integer",
                        "format": "int32"
                    }
                },
                "additionalProperties": false
            },
            "Fool.Commerce.Dto.SingleItemRefundForm": {
                "type": "object",
                "properties": {
                    "paymentMethodId": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "singleItemId": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "adminUid": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "refundAmount": {
                        "type": "number",
                        "format": "double",
                        "nullable": true
                    }
                },
                "additionalProperties": false
            },
            "Fool.Commerce.Dto.SolrOfferDocument": {
                "type": "object",
                "properties": {
                    "offerDomain": {
                        "type": "string",
                        "nullable": true
                    },
                    "promoId": {
                        "type": "string",
                        "nullable": true
                    },
                    "promoCode": {
                        "type": "string",
                        "nullable": true
                    },
                    "promoName": {
                        "type": "string",
                        "nullable": true
                    },
                    "countryCode": {
                        "type": "string",
                        "nullable": true
                    },
                    "totalOrders": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "startDate": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "endDate": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true
                    },
                    "offerId": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "offerName": {
                        "type": "string",
                        "nullable": true
                    },
                    "acquisitionPrice": {
                        "type": "number",
                        "format": "double"
                    },
                    "audienceType": {
                        "enum": [
                            "NewMember",
                            "Retention",
                            "Acquisition"
                        ],
                        "type": "string",
                        "nullable": true
                    },
                    "productName": {
                        "type": "string",
                        "nullable": true
                    },
                    "subscriptionTerm": {
                        "type": "string",
                        "nullable": true
                    },
                    "premiums": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "nullable": true
                    },
                    "campaignId": {
                        "type": "integer",
                        "format": "int32",
                        "nullable": true
                    },
                    "id": {
                        "type": "string",
                        "nullable": true
                    },
                    "domain": {
                        "type": "string",
                        "nullable": true
                    },
                    "searchText": {
                        "type": "string",
                        "nullable": true
                    }
                },
                "additionalProperties": false
            },
            "Fool.Commerce.Dto.SolrSearchResponse": {
                "type": "object",
                "properties": {
                    "numFound": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "start": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "end": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "docs": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Fool.Commerce.Dto.SolrOfferDocument"
                        },
                        "nullable": true
                    }
                },
                "additionalProperties": false
            },
            "Fool.Commerce.Dto.SplitCreditCardOrderForm": {
                "required": [
                    "additionalCreditCard",
                    "confirmEmail",
                    "creditCard",
                    "email",
                    "isoAlpha2CountryCode",
                    "promotionCode",
                    "selectedOfferId"
                ],
                "type": "object",
                "properties": {
                    "additionalCreditCard": {
                        "$ref": "#/components/schemas/Fool.Commerce.Dto.CreditCardForm"
                    },
                    "creditCard": {
                        "$ref": "#/components/schemas/Fool.Commerce.Dto.CreditCardForm"
                    },
                    "email": {
                        "type": "string"
                    },
                    "confirmEmail": {
                        "type": "string"
                    },
                    "promotionCode": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "selectedOfferId": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "isoAlpha2CountryCode": {
                        "type": "string"
                    },
                    "firstName": {
                        "type": "string",
                        "nullable": true
                    },
                    "lastName": {
                        "type": "string",
                        "nullable": true
                    },
                    "phoneNumber": {
                        "type": "string",
                        "nullable": true
                    },
                    "billingAddress": {
                        "$ref": "#/components/schemas/Fool.Commerce.Dto.PostalAddressForm"
                    },
                    "shippingAddress": {
                        "$ref": "#/components/schemas/Fool.Commerce.Dto.PostalAddressForm"
                    },
                    "sourceCode": {
                        "type": "string",
                        "nullable": true
                    },
                    "clientIpAddress": {
                        "type": "string",
                        "nullable": true
                    },
                    "isTestOrder": {
                        "type": "boolean"
                    },
                    "uid": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "isNewAccount": {
                        "type": "boolean"
                    },
                    "placedByUid": {
                        "type": "integer",
                        "format": "int32",
                        "nullable": true
                    },
                    "orderSession": {
                        "$ref": "#/components/schemas/Fool.Commerce.Dto.Tracking.OrderSession"
                    }
                },
                "additionalProperties": false
            },
            "Fool.Commerce.Dto.StrictCreditCardForm": {
                "required": [
                    "cardSecurityCode"
                ],
                "type": "object",
                "properties": {
                    "cardSecurityCode": {
                        "maxLength": 4,
                        "minLength": 3,
                        "type": "string"
                    },
                    "cardNumber": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "nameOnCard": {
                        "type": "string",
                        "nullable": true
                    },
                    "expirationMonth": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "expirationYear": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "postalCode": {
                        "type": "string",
                        "nullable": true
                    },
                    "countryCode": {
                        "type": "string",
                        "nullable": true
                    }
                },
                "additionalProperties": false
            },
            "Fool.Commerce.Dto.StrictCreditCardOrderForm": {
                "required": [
                    "confirmEmail",
                    "creditCard",
                    "email",
                    "isoAlpha2CountryCode",
                    "promotionCode",
                    "selectedOfferId"
                ],
                "type": "object",
                "properties": {
                    "creditCard": {
                        "$ref": "#/components/schemas/Fool.Commerce.Dto.StrictCreditCardForm"
                    },
                    "email": {
                        "type": "string"
                    },
                    "confirmEmail": {
                        "type": "string"
                    },
                    "promotionCode": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "selectedOfferId": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "isoAlpha2CountryCode": {
                        "type": "string"
                    },
                    "firstName": {
                        "type": "string",
                        "nullable": true
                    },
                    "lastName": {
                        "type": "string",
                        "nullable": true
                    },
                    "phoneNumber": {
                        "type": "string",
                        "nullable": true
                    },
                    "billingAddress": {
                        "$ref": "#/components/schemas/Fool.Commerce.Dto.PostalAddressForm"
                    },
                    "shippingAddress": {
                        "$ref": "#/components/schemas/Fool.Commerce.Dto.PostalAddressForm"
                    },
                    "sourceCode": {
                        "type": "string",
                        "nullable": true
                    },
                    "clientIpAddress": {
                        "type": "string",
                        "nullable": true
                    },
                    "isTestOrder": {
                        "type": "boolean"
                    },
                    "uid": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "isNewAccount": {
                        "type": "boolean"
                    },
                    "placedByUid": {
                        "type": "integer",
                        "format": "int32",
                        "nullable": true
                    },
                    "orderSession": {
                        "$ref": "#/components/schemas/Fool.Commerce.Dto.Tracking.OrderSession"
                    }
                },
                "additionalProperties": false
            },
            "Fool.Commerce.Dto.Subscription": {
                "type": "object",
                "properties": {
                    "canRequestSwapServices": {
                        "type": "boolean"
                    },
                    "orderId": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "id": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "uid": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "status": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "premiums": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Fool.Commerce.Dto.Premium"
                        },
                        "nullable": true
                    },
                    "statusName": {
                        "type": "string",
                        "nullable": true
                    },
                    "autoRebill": {
                        "type": "boolean"
                    },
                    "startDate": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "endDate": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "productId": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "productName": {
                        "type": "string",
                        "nullable": true
                    },
                    "productLevel": {
                        "enum": [
                            "LevelOne",
                            "LevelTwo",
                            "LevelThree",
                            "LevelFour",
                            "LevelFive"
                        ],
                        "type": "string",
                        "nullable": true
                    },
                    "isInGracePeriod": {
                        "type": "boolean"
                    },
                    "campaignId": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "daysRemaining": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "gracePeriodEndDate": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true
                    },
                    "cancellationDate": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true
                    },
                    "cancellationDetails": {
                        "$ref": "#/components/schemas/Fool.Commerce.Dto.CancellationDetails"
                    },
                    "moneyBackGuaranteeDaysLeft": {
                        "type": "integer",
                        "format": "int32",
                        "deprecated": true
                    },
                    "daysSinceMoneyBackGuaranteeEnded": {
                        "type": "integer",
                        "format": "int32",
                        "nullable": true,
                        "deprecated": true
                    },
                    "moneyBackGuaranteeEndDate": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true,
                        "deprecated": true
                    },
                    "hasMoneyBackGuarantee": {
                        "type": "boolean",
                        "deprecated": true
                    },
                    "isInMoneyBackGuaranteePeriod": {
                        "type": "boolean",
                        "deprecated": true
                    },
                    "refundEligibilityDaysLeft": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "daysSinceRefundEligibilityEnded": {
                        "type": "integer",
                        "format": "int32",
                        "nullable": true
                    },
                    "refundEligibilityEndDate": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true
                    },
                    "hasRefundEligibility": {
                        "type": "boolean"
                    },
                    "isInRefundEligibilityPeriod": {
                        "type": "boolean"
                    },
                    "refundAvailableEndDate": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true
                    },
                    "isRefundAvailable": {
                        "type": "boolean"
                    },
                    "displayToggleAutoRenewal": {
                        "type": "boolean"
                    },
                    "canRequestTurnOffAutoRenewal": {
                        "type": "boolean"
                    },
                    "canRequestEnableAutoRenewal": {
                        "type": "boolean"
                    },
                    "canRequestCancelSubscription": {
                        "type": "boolean"
                    },
                    "renewalProfile": {
                        "$ref": "#/components/schemas/Fool.Commerce.Dto.RenewalProfile"
                    },
                    "remainingValue": {
                        "type": "number",
                        "format": "double"
                    },
                    "remainingValueBeforeTaxes": {
                        "type": "number",
                        "format": "double"
                    },
                    "remainingTaxValue": {
                        "type": "number",
                        "format": "double"
                    },
                    "fullValueBeforeTaxes": {
                        "type": "number",
                        "format": "double"
                    },
                    "fullValue": {
                        "type": "number",
                        "format": "double"
                    },
                    "fullTaxValue": {
                        "type": "number",
                        "format": "double"
                    },
                    "currentSubPeriodStartDate": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true
                    },
                    "mostRecentPeriodDateCreated": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "subscriptionPeriods": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Fool.Commerce.Dto.SubscriptionPeriod"
                        },
                        "nullable": true
                    },
                    "isRefundAvailableForCurrentSubPeriod": {
                        "type": "boolean",
                        "deprecated": true
                    },
                    "isInRefundEligibilityPeriodForCurrentSubPeriod": {
                        "type": "boolean",
                        "deprecated": true
                    }
                },
                "additionalProperties": false
            },
            "Fool.Commerce.Dto.SubscriptionCreditTransferRollbackForm": {
                "type": "object",
                "properties": {
                    "subscriptionId": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "adminUid": {
                        "type": "integer",
                        "format": "int32"
                    }
                },
                "additionalProperties": false
            },
            "Fool.Commerce.Dto.SubscriptionCreditTransferRollbackResponse": {
                "type": "object",
                "properties": {
                    "subscriptionId": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "reactivatedSubscriptions": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Fool.Commerce.Dto.Subscription"
                        },
                        "nullable": true
                    }
                },
                "additionalProperties": false
            },
            "Fool.Commerce.Dto.SubscriptionOffer": {
                "type": "object",
                "properties": {
                    "type": {
                        "type": "string",
                        "nullable": true,
                        "readOnly": true
                    },
                    "trialOffer": {
                        "$ref": "#/components/schemas/Fool.Commerce.Dto.TrialOffer"
                    },
                    "subscriptionPeriod": {
                        "$ref": "#/components/schemas/Fool.Commerce.Dto.TimePeriod"
                    },
                    "moneyBackGuaranteePeriod": {
                        "$ref": "#/components/schemas/Fool.Commerce.Dto.TimePeriod"
                    },
                    "swapGuaranteePeriod": {
                        "$ref": "#/components/schemas/Fool.Commerce.Dto.TimePeriod"
                    },
                    "renewalRefundPeriod": {
                        "$ref": "#/components/schemas/Fool.Commerce.Dto.TimePeriod"
                    },
                    "printDelivery": {
                        "type": "boolean"
                    },
                    "renewalPrice": {
                        "$ref": "#/components/schemas/Fool.Commerce.Dto.Money"
                    },
                    "id": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "name": {
                        "type": "string",
                        "nullable": true
                    },
                    "product": {
                        "$ref": "#/components/schemas/Fool.Commerce.Dto.Product"
                    },
                    "fulfillmentUrl": {
                        "type": "string",
                        "nullable": true
                    },
                    "isPreselected": {
                        "type": "boolean"
                    },
                    "offerMarkup": {
                        "type": "string",
                        "nullable": true
                    },
                    "basePrice": {
                        "$ref": "#/components/schemas/Fool.Commerce.Dto.Money"
                    },
                    "acquisitionPrice": {
                        "$ref": "#/components/schemas/Fool.Commerce.Dto.Money"
                    },
                    "premiums": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Fool.Commerce.Dto.Premium"
                        },
                        "nullable": true
                    },
                    "totalOrders": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "tags": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "nullable": true
                    }
                },
                "additionalProperties": false
            },
            "Fool.Commerce.Dto.SubscriptionOfferForm": {
                "type": "object",
                "properties": {
                    "trialOfferForm": {
                        "$ref": "#/components/schemas/Fool.Commerce.Dto.TrialOfferForm"
                    },
                    "subscriptionTimePeriodId": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "moneyBackGuaranteeTimePeriodId": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "swapGuaranteeTimePeriodId": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "renewalRefundTimePeriodId": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "printDelivery": {
                        "type": "boolean"
                    },
                    "renewalPrice": {
                        "type": "number",
                        "format": "double"
                    },
                    "productId": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "offerMarkup": {
                        "type": "string",
                        "nullable": true
                    },
                    "fulfillmentUrl": {
                        "type": "string",
                        "nullable": true
                    },
                    "isPreselected": {
                        "type": "boolean"
                    },
                    "basePrice": {
                        "type": "number",
                        "format": "double"
                    },
                    "acquisitionPrice": {
                        "type": "number",
                        "format": "double",
                        "nullable": true
                    },
                    "premiumProductIds": {
                        "type": "array",
                        "items": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "nullable": true
                    }
                },
                "additionalProperties": false
            },
            "Fool.Commerce.Dto.SubscriptionPeriod": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "offerId": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "promotionId": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "promotionName": {
                        "type": "string",
                        "nullable": true
                    },
                    "type": {
                        "type": "string",
                        "nullable": true
                    },
                    "orderId": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "orderDate": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "invoiceId": {
                        "type": "integer",
                        "format": "int32",
                        "nullable": true
                    },
                    "dateCreated": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true
                    },
                    "pricePaid": {
                        "type": "number",
                        "format": "double"
                    },
                    "totalPurchaseValue": {
                        "type": "number",
                        "format": "double"
                    },
                    "remainingValue": {
                        "type": "number",
                        "format": "double"
                    },
                    "remainingTaxValue": {
                        "type": "number",
                        "format": "double"
                    },
                    "remainingValueBeforeTaxes": {
                        "type": "number",
                        "format": "double"
                    },
                    "netPayments": {
                        "type": "number",
                        "format": "double"
                    },
                    "netTaxPayments": {
                        "type": "number",
                        "format": "double"
                    },
                    "netPaymentsBeforeTaxes": {
                        "type": "number",
                        "format": "double"
                    },
                    "totalCredits": {
                        "type": "number",
                        "format": "double"
                    },
                    "totalRefunds": {
                        "type": "number",
                        "format": "double"
                    },
                    "totalDebits": {
                        "type": "number",
                        "format": "double"
                    },
                    "startDate": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "endDate": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "cancellationDate": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true
                    },
                    "termsAndConditionsId": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "moneyBackGuaranteePeriod": {
                        "$ref": "#/components/schemas/Fool.Commerce.Dto.TimePeriod"
                    },
                    "daysSinceMoneyBackGuaranteeEnded": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "moneyBackGuaranteeEndDate": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true
                    },
                    "paymentMethods": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Fool.Commerce.Dto.PaymentMethod"
                        },
                        "nullable": true
                    },
                    "swapGuaranteePeriod": {
                        "$ref": "#/components/schemas/Fool.Commerce.Dto.TimePeriod"
                    },
                    "hasRenewalRefundPeriod": {
                        "type": "boolean"
                    },
                    "renewalRefundPeriodEndDate": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true
                    },
                    "refundEligibilityEndDate": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true
                    },
                    "hasRefundEligibility": {
                        "type": "boolean"
                    },
                    "isInRefundEligibilityPeriod": {
                        "type": "boolean"
                    },
                    "refundEligibilityDaysLeft": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "daysSinceRefundEligibilityEnded": {
                        "type": "integer",
                        "format": "int32",
                        "nullable": true
                    },
                    "refundAvailableEndDate": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true
                    },
                    "isRefundAvailable": {
                        "type": "boolean"
                    }
                },
                "additionalProperties": false
            },
            "Fool.Commerce.Dto.SubscriptionPeriodReceipt": {
                "type": "object",
                "properties": {
                    "subscriptionPeriodId": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "subscriptionPeriodType": {
                        "type": "string",
                        "nullable": true
                    },
                    "dateCreated": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "invoiceId": {
                        "type": "integer",
                        "format": "int32",
                        "nullable": true
                    },
                    "renewalType": {
                        "type": "string",
                        "nullable": true
                    },
                    "isRenewalSubscriptionPeriod": {
                        "type": "boolean",
                        "readOnly": true
                    },
                    "orderId": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "orderDate": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "promotionId": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "campaignId": {
                        "type": "integer",
                        "format": "int32",
                        "nullable": true
                    },
                    "countryCode": {
                        "type": "string",
                        "nullable": true
                    },
                    "startDate": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true
                    },
                    "endDate": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true
                    },
                    "deliverToUid": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "billToUid": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "billToCustomer": {
                        "$ref": "#/components/schemas/Fool.Commerce.Dto.RegistrationUser"
                    },
                    "billingAddress": {
                        "$ref": "#/components/schemas/Fool.Commerce.Dto.BillingAddress"
                    },
                    "orderItem": {
                        "$ref": "#/components/schemas/Fool.Commerce.Dto.OrderItem"
                    },
                    "invoice": {
                        "$ref": "#/components/schemas/Fool.Commerce.Dto.Invoice"
                    }
                },
                "additionalProperties": false
            },
            "Fool.Commerce.Dto.SubscriptionPeriodRefundForm": {
                "type": "object",
                "properties": {
                    "paymentMethodId": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "subscriptionId": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "subscriptionPeriodId": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "isProRatedRefund": {
                        "type": "boolean"
                    },
                    "adminUid": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "refundAmount": {
                        "type": "number",
                        "format": "double",
                        "nullable": true
                    }
                },
                "additionalProperties": false
            },
            "Fool.Commerce.Dto.SubscriptionProductDescription": {
                "type": "object",
                "properties": {
                    "isBackEnd": {
                        "type": "boolean"
                    },
                    "initials": {
                        "type": "string",
                        "nullable": true
                    },
                    "swapGuaranteePeriod": {
                        "$ref": "#/components/schemas/Fool.Commerce.Dto.TimePeriod"
                    },
                    "productLevel": {
                        "enum": [
                            "LevelOne",
                            "LevelTwo",
                            "LevelThree",
                            "LevelFour",
                            "LevelFive"
                        ],
                        "type": "string",
                        "nullable": true
                    },
                    "id": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "name": {
                        "type": "string",
                        "nullable": true
                    },
                    "shortName": {
                        "type": "string",
                        "nullable": true
                    },
                    "url": {
                        "type": "string",
                        "nullable": true
                    },
                    "primaryTickers": {
                        "type": "string",
                        "nullable": true
                    },
                    "description": {
                        "type": "string",
                        "nullable": true
                    },
                    "defaultMoneyBackGuaranteePeriod": {
                        "$ref": "#/components/schemas/Fool.Commerce.Dto.TimePeriod"
                    },
                    "introductionDate": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "discontinuationDate": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true
                    },
                    "orderConfirmationProgramId": {
                        "type": "integer",
                        "format": "int32",
                        "nullable": true
                    },
                    "createdByUid": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "dateCreated": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "lastUpdatedDate": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "modifiedByUid": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "productType": {
                        "type": "integer",
                        "format": "int32"
                    }
                },
                "additionalProperties": false
            },
            "Fool.Commerce.Dto.SubscriptionProductOffer": {
                "type": "object",
                "properties": {
                    "subscriptionPeriod": {
                        "$ref": "#/components/schemas/Fool.Commerce.Dto.TimePeriod"
                    },
                    "renewalPrice": {
                        "$ref": "#/components/schemas/Fool.Commerce.Dto.Money"
                    },
                    "name": {
                        "type": "string",
                        "nullable": true
                    },
                    "product": {
                        "$ref": "#/components/schemas/Fool.Commerce.Dto.Product"
                    },
                    "basePrice": {
                        "$ref": "#/components/schemas/Fool.Commerce.Dto.Money"
                    },
                    "acquisitionPrice": {
                        "$ref": "#/components/schemas/Fool.Commerce.Dto.Money"
                    }
                },
                "additionalProperties": false
            },
            "Fool.Commerce.Dto.SubscriptionTransaction": {
                "type": "object",
                "properties": {
                    "accountingTransactionId": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "subscriptionPeriodId": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "accountingTransactionType": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "amount": {
                        "type": "number",
                        "format": "double"
                    },
                    "creditSubscriptionId": {
                        "type": "integer",
                        "format": "int32",
                        "nullable": true
                    },
                    "creditSubscriptionPeriodId": {
                        "type": "integer",
                        "format": "int32",
                        "nullable": true
                    },
                    "transactionDate": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true
                    },
                    "transactionUserName": {
                        "type": "string",
                        "nullable": true
                    },
                    "transactionUserUid": {
                        "type": "integer",
                        "format": "int32",
                        "nullable": true
                    },
                    "creditSubscriptionName": {
                        "type": "string",
                        "nullable": true
                    },
                    "transactionItemId": {
                        "type": "integer",
                        "format": "int32",
                        "nullable": true
                    },
                    "orderid": {
                        "type": "integer",
                        "format": "int32",
                        "nullable": true
                    },
                    "responseCode": {
                        "type": "string",
                        "nullable": true
                    },
                    "responseMsg": {
                        "type": "string",
                        "nullable": true
                    },
                    "billToPaymentMethodId": {
                        "type": "integer",
                        "format": "int32"
                    }
                },
                "additionalProperties": false
            },
            "Fool.Commerce.Dto.SubscriptionTransferRollbackForm": {
                "type": "object",
                "properties": {
                    "paymentMethodId": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "subscriptionId": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "adminUid": {
                        "type": "integer",
                        "format": "int32"
                    }
                },
                "additionalProperties": false
            },
            "Fool.Commerce.Dto.SubscriptionTransferRollbackQuote": {
                "type": "object",
                "properties": {
                    "isEligible": {
                        "type": "boolean"
                    },
                    "refund": {
                        "type": "number",
                        "format": "double"
                    },
                    "paymentMethods": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Fool.Commerce.Dto.PaymentMethod"
                        },
                        "nullable": true
                    },
                    "subscriptionsToRollback": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Fool.Commerce.Dto.Subscription"
                        },
                        "nullable": true
                    }
                },
                "additionalProperties": false
            },
            "Fool.Commerce.Dto.Taxes.PromotionQuoteTaxInformation": {
                "type": "object",
                "properties": {
                    "taxAddress": {
                        "$ref": "#/components/schemas/Fool.Commerce.Dto.Taxes.TaxAddress"
                    },
                    "isTaxable": {
                        "type": "boolean"
                    }
                },
                "additionalProperties": false
            },
            "Fool.Commerce.Dto.Taxes.TaxAddress": {
                "type": "object",
                "properties": {
                    "address1": {
                        "type": "string",
                        "nullable": true
                    },
                    "address2": {
                        "type": "string",
                        "nullable": true
                    },
                    "city": {
                        "type": "string",
                        "nullable": true
                    },
                    "stateProvince": {
                        "type": "string",
                        "nullable": true
                    },
                    "countryCode": {
                        "type": "string",
                        "nullable": true
                    },
                    "postalCode": {
                        "type": "string",
                        "nullable": true
                    }
                },
                "additionalProperties": false
            },
            "Fool.Commerce.Dto.TimePeriod": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "units": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "type": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "typeName": {
                        "type": "string",
                        "nullable": true
                    },
                    "name": {
                        "type": "string",
                        "nullable": true
                    }
                },
                "additionalProperties": false
            },
            "Fool.Commerce.Dto.TimePeriodForm": {
                "type": "object",
                "properties": {
                    "numberOfUnits": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "unitType": {
                        "type": "string",
                        "nullable": true
                    },
                    "createdBy": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "isValidForMoneyBackGuarantee": {
                        "type": "boolean"
                    },
                    "isValidForTrial": {
                        "type": "boolean"
                    }
                },
                "additionalProperties": false
            },
            "Fool.Commerce.Dto.Tracking.OrderSession": {
                "type": "object",
                "properties": {
                    "utmCode": {
                        "$ref": "#/components/schemas/Fool.Commerce.Dto.Tracking.UtmCode"
                    },
                    "sessionGuid": {
                        "type": "string",
                        "format": "uuid",
                        "nullable": true
                    },
                    "customMetadata": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        },
                        "nullable": true
                    }
                },
                "additionalProperties": false
            },
            "Fool.Commerce.Dto.Tracking.UtmCode": {
                "type": "object",
                "properties": {
                    "source": {
                        "type": "string",
                        "nullable": true
                    },
                    "medium": {
                        "type": "string",
                        "nullable": true
                    },
                    "campaign": {
                        "type": "string",
                        "nullable": true
                    },
                    "term": {
                        "type": "string",
                        "nullable": true
                    },
                    "content": {
                        "type": "string",
                        "nullable": true
                    }
                },
                "additionalProperties": false
            },
            "Fool.Commerce.Dto.TrialOffer": {
                "type": "object",
                "properties": {
                    "trialType": {
                        "type": "string",
                        "nullable": true
                    },
                    "trialPeriod": {
                        "$ref": "#/components/schemas/Fool.Commerce.Dto.TimePeriod"
                    },
                    "trialConversionPrice": {
                        "$ref": "#/components/schemas/Fool.Commerce.Dto.Money"
                    }
                },
                "additionalProperties": false
            },
            "Fool.Commerce.Dto.TrialOfferForm": {
                "type": "object",
                "properties": {
                    "trialTimePeriodId": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "trialConversionPrice": {
                        "type": "number",
                        "format": "double"
                    }
                },
                "additionalProperties": false
            },
            "Fool.Commerce.Dto.UidValueDiscountForm": {
                "required": [
                    "uid",
                    "value"
                ],
                "type": "object",
                "properties": {
                    "uid": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "value": {
                        "type": "number",
                        "format": "double"
                    }
                },
                "additionalProperties": false
            },
            "Fool.Commerce.Dto.UnlockUserPurchasesForm": {
                "required": [
                    "unlockedByAdminUid"
                ],
                "type": "object",
                "properties": {
                    "unlockedByAdminUid": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "unlockedComment": {
                        "type": "string",
                        "nullable": true
                    }
                },
                "additionalProperties": false
            },
            "Fool.Commerce.Dto.UpdateOfferForm": {
                "type": "object",
                "properties": {
                    "offerMarkup": {
                        "type": "string",
                        "nullable": true
                    },
                    "fulfillmentUrl": {
                        "type": "string",
                        "nullable": true
                    },
                    "acquisitionPrice": {
                        "type": "number",
                        "format": "double",
                        "nullable": true
                    },
                    "modifiedByUid": {
                        "type": "integer",
                        "format": "int32"
                    }
                },
                "additionalProperties": false
            },
            "Fool.Commerce.Dto.UpdatePromotionForm": {
                "type": "object",
                "properties": {
                    "modifiedByUid": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "teasedPremiumProductId": {
                        "type": "integer",
                        "format": "int32",
                        "nullable": true
                    },
                    "countryCode": {
                        "type": "string",
                        "nullable": true
                    },
                    "name": {
                        "type": "string",
                        "nullable": true
                    },
                    "description": {
                        "type": "string",
                        "nullable": true
                    },
                    "endDate": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true
                    },
                    "redirectSettings": {
                        "$ref": "#/components/schemas/Fool.Commerce.Dto.RedirectSettings"
                    },
                    "campaignId": {
                        "type": "integer",
                        "format": "int32",
                        "nullable": true
                    },
                    "audienceType": {
                        "enum": [
                            "NewMember",
                            "Retention",
                            "Acquisition"
                        ],
                        "type": "string",
                        "nullable": true
                    }
                },
                "additionalProperties": false
            },
            "Fool.Commerce.Dto.UpdateSingleItemProductForm": {
                "type": "object",
                "properties": {
                    "discontinuationDate": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true
                    },
                    "modifiedByUid": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "availableForSale": {
                        "type": "boolean"
                    },
                    "basePrice": {
                        "type": "number",
                        "format": "double"
                    },
                    "acquisitionPrice": {
                        "type": "number",
                        "format": "double"
                    },
                    "name": {
                        "type": "string",
                        "nullable": true
                    },
                    "url": {
                        "type": "string",
                        "nullable": true
                    },
                    "primaryTickers": {
                        "type": "string",
                        "nullable": true
                    },
                    "description": {
                        "type": "string",
                        "nullable": true
                    },
                    "defaultMoneyBackGuaranteeTimePeriodId": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "orderConfirmationProgramId": {
                        "type": "integer",
                        "format": "int32",
                        "nullable": true
                    }
                },
                "additionalProperties": false
            },
            "Fool.Commerce.Dto.UpdateSubscriptionProductForm": {
                "type": "object",
                "properties": {
                    "discontinuationDate": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true
                    },
                    "modifiedByUid": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "isBackEnd": {
                        "type": "boolean"
                    },
                    "name": {
                        "type": "string",
                        "nullable": true
                    },
                    "url": {
                        "type": "string",
                        "nullable": true
                    },
                    "primaryTickers": {
                        "type": "string",
                        "nullable": true
                    },
                    "description": {
                        "type": "string",
                        "nullable": true
                    },
                    "defaultMoneyBackGuaranteeTimePeriodId": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "orderConfirmationProgramId": {
                        "type": "integer",
                        "format": "int32",
                        "nullable": true
                    }
                },
                "additionalProperties": false
            },
            "Fool.Commerce.Dto.UpdateSubscriptionProductLevelForm": {
                "type": "object",
                "properties": {
                    "productLevel": {
                        "enum": [
                            "LevelOne",
                            "LevelTwo",
                            "LevelThree",
                            "LevelFour",
                            "LevelFive"
                        ],
                        "type": "string"
                    },
                    "modifiedByUid": {
                        "type": "integer",
                        "format": "int32"
                    }
                },
                "additionalProperties": false
            },
            "Fool.Commerce.Dto.UserDiscount": {
                "type": "object",
                "properties": {
                    "uid": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "value": {
                        "$ref": "#/components/schemas/Fool.Commerce.Dto.Money"
                    },
                    "discountName": {
                        "type": "string",
                        "nullable": true
                    },
                    "discountId": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "expirationDate": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "products": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Fool.Commerce.Dto.Product"
                        },
                        "nullable": true
                    }
                },
                "additionalProperties": false
            },
            "Fool.Commerce.Dto.UserPurchaseLockout": {
                "type": "object",
                "properties": {
                    "customerUid": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "lockoutEndDate": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true
                    },
                    "lockedDate": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "lockedByAdminUid": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "lockedByAdminName": {
                        "type": "string",
                        "nullable": true
                    },
                    "lockedComment": {
                        "type": "string",
                        "nullable": true
                    },
                    "unlockedDate": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true
                    },
                    "unlockedByAdminUid": {
                        "type": "integer",
                        "format": "int32",
                        "nullable": true
                    },
                    "unlockedByAdminName": {
                        "type": "string",
                        "nullable": true
                    },
                    "unlockedComment": {
                        "type": "string",
                        "nullable": true
                    },
                    "isCurrentPurchaseLock": {
                        "type": "boolean"
                    }
                },
                "additionalProperties": false
            },
            "Fool.Commerce.Dto.UserReport": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "product": {
                        "$ref": "#/components/schemas/Fool.Commerce.Dto.Product"
                    },
                    "order": {
                        "$ref": "#/components/schemas/Fool.Commerce.Dto.Order"
                    }
                },
                "additionalProperties": false
            },
            "Fool.Commerce.Dto.v2.SubscriptionForTest": {
                "type": "object",
                "properties": {
                    "subscriptionId": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "userId": {
                        "type": "integer",
                        "format": "int32"
                    }
                },
                "additionalProperties": false
            },
            "Fool.Commerce.Exceptions.InvalidSubscriptionActionRequestException": {
                "type": "object",
                "properties": {
                    "stackTrace": {
                        "type": "string",
                        "nullable": true,
                        "readOnly": true
                    },
                    "message": {
                        "type": "string",
                        "nullable": true
                    },
                    "data": {
                        "type": "object",
                        "additionalProperties": {},
                        "nullable": true,
                        "readOnly": true
                    },
                    "innerException": {
                        "nullable": true
                    },
                    "helpLink": {
                        "type": "string",
                        "nullable": true
                    },
                    "source": {
                        "type": "string",
                        "nullable": true
                    },
                    "hResult": {
                        "type": "integer",
                        "format": "int32"
                    }
                },
                "additionalProperties": false
            },
            "Fool.Commerce.Exceptions.InvalidSubscriptionProductOperationException": {
                "type": "object",
                "properties": {
                    "stackTrace": {
                        "type": "string",
                        "nullable": true,
                        "readOnly": true
                    },
                    "message": {
                        "type": "string",
                        "nullable": true
                    },
                    "data": {
                        "type": "object",
                        "additionalProperties": {},
                        "nullable": true,
                        "readOnly": true
                    },
                    "innerException": {
                        "nullable": true
                    },
                    "helpLink": {
                        "type": "string",
                        "nullable": true
                    },
                    "source": {
                        "type": "string",
                        "nullable": true
                    },
                    "hResult": {
                        "type": "integer",
                        "format": "int32"
                    }
                },
                "additionalProperties": false
            },
            "Fool.Commerce.Exceptions.ProductNotFoundException": {
                "type": "object",
                "properties": {
                    "stackTrace": {
                        "type": "string",
                        "nullable": true,
                        "readOnly": true
                    },
                    "message": {
                        "type": "string",
                        "nullable": true
                    },
                    "data": {
                        "type": "object",
                        "additionalProperties": {},
                        "nullable": true,
                        "readOnly": true
                    },
                    "innerException": {
                        "nullable": true
                    },
                    "helpLink": {
                        "type": "string",
                        "nullable": true
                    },
                    "source": {
                        "type": "string",
                        "nullable": true
                    },
                    "hResult": {
                        "type": "integer",
                        "format": "int32"
                    }
                },
                "additionalProperties": false
            },
            "Fool.Commerce.Exceptions.SubscriptionNotFoundException": {
                "type": "object",
                "properties": {
                    "stackTrace": {
                        "type": "string",
                        "nullable": true,
                        "readOnly": true
                    },
                    "message": {
                        "type": "string",
                        "nullable": true
                    },
                    "data": {
                        "type": "object",
                        "additionalProperties": {},
                        "nullable": true,
                        "readOnly": true
                    },
                    "innerException": {
                        "nullable": true
                    },
                    "helpLink": {
                        "type": "string",
                        "nullable": true
                    },
                    "source": {
                        "type": "string",
                        "nullable": true
                    },
                    "hResult": {
                        "type": "integer",
                        "format": "int32"
                    }
                },
                "additionalProperties": false
            },
            "Fool.Commerce.External.Registration.UserNotFoundException": {
                "type": "object",
                "properties": {
                    "stackTrace": {
                        "type": "string",
                        "nullable": true,
                        "readOnly": true
                    },
                    "message": {
                        "type": "string",
                        "nullable": true
                    },
                    "data": {
                        "type": "object",
                        "additionalProperties": {},
                        "nullable": true,
                        "readOnly": true
                    },
                    "innerException": {
                        "nullable": true
                    },
                    "helpLink": {
                        "type": "string",
                        "nullable": true
                    },
                    "source": {
                        "type": "string",
                        "nullable": true
                    },
                    "hResult": {
                        "type": "integer",
                        "format": "int32"
                    }
                },
                "additionalProperties": false
            },
            "Microsoft.AspNetCore.Mvc.ProblemDetails": {
                "type": "object",
                "properties": {
                    "type": {
                        "type": "string",
                        "nullable": true
                    },
                    "title": {
                        "type": "string",
                        "nullable": true
                    },
                    "status": {
                        "type": "integer",
                        "format": "int32",
                        "nullable": true
                    },
                    "detail": {
                        "type": "string",
                        "nullable": true
                    },
                    "instance": {
                        "type": "string",
                        "nullable": true
                    }
                },
                "additionalProperties": {}
            }
        }
    }
}
